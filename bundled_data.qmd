---
title: "Bundled data"
author: "Raphael Saldanha"
date: last-modified
---

This notebook prepares a data-set with dengue cases and covariates of interest per municipality.

## Packages

```{r}
#| message: false
library(tidyverse)
library(arrow)
library(brpop)
library(tidymodels)
library(timetk)
source("functions.R")
```

## Data

### Dengue

Load dengue cases data and aggregate per week.

```{r}
dengue <- read_parquet(data_dir("dengue_data/parquet_aggregated/dengue_md.parquet")) %>%
  group_by(mun) %>%
  summarise_by_time(.date_var = date, .by = "week", freq = sum(freq, na.rm = TRUE)) %>%
  ungroup() %>%
  rename(cases = freq)
```

### Population

Load municipality population data for the years present at the dengue cases data.

```{r}
pop <- mun_pop_totals() %>%
  filter(year %in% seq(year(min(dengue$date)), year(max(dengue$date)))) %>%
  mutate(mun = as.character(mun))
```

### Weather variables

Load weather variables and group per week.

#### Precipitation

```{r}
prec <- open_dataset(sources = data_dir("weather_data/parquet/brdwgd/pr.parquet")) %>%
  filter(name == "pr_sum") %>%
  select(date, value) %>%
  collect() %>%
  filter(date >= min(dengue$date) & date <= max(dengue$date)) %>%
  summarise_by_time(.date_var = date, .by = "week", value = sum(value, na.rm = TRUE)) %>%
  rename(prec = value)
```

::: callout-note
As precipitation is a volume, the `sum` function is used.
:::

#### Average maximum temperature

```{r}
tmax <- open_dataset(sources = data_dir("weather_data/parquet/brdwgd/tmax.parquet")) %>%
  filter(name == "Tmax_mean") %>%
  select(date, value) %>%
  collect() %>%
  filter(date >= min(dengue$date) & date <= max(dengue$date)) %>%
  summarise_by_time(.date_var = date, .by = "week", value = mean(value, na.rm = TRUE)) %>%
  rename(tmax = value)
```

#### Average minimum temperature

```{r}
tmin <- open_dataset(sources = data_dir("weather_data/parquet/brdwgd/tmin.parquet")) %>%
  filter(name == "Tmin_mean") %>%
  select(date, value) %>%
  collect() %>%
  filter(date >= min(dengue$date) & date <= max(dengue$date)) %>%
  summarise_by_time(.date_var = date, .by = "week", value = mean(value, na.rm = TRUE)) %>%
  rename(tmin = value)
```

### Join data

Join dengue cases, population and weather variables.

```{r}
tdengue <- dengue %>%
  mutate(dengue_year = year(date)) %>%
  inner_join(pop, by = c("dengue_year" = "year", "mun")) %>%
  select(-dengue_year) %>%
  inner_join(prec, by = "date") %>%
  inner_join(tmax, by = "date") %>%
  inner_join(tmin, by = "date")

rm(dengue, prec, tmax, tmin)
```

::: callout-note
The population estimate is constant over each year.
:::

### Cleaning and basic features

Due the sparsity of dengue cases, only municipalities with more than 100,000 inhabitants are filtered.

```{r}
# List municipalities with moren than 10k inhab
mun_vec <- pop %>%
  filter(year == max(year)) %>%
  filter(pop >= 100000) %>%
  pull(mun)

rm(pop)
```

```{r}
tdengue <- tdengue %>%
  # Remove municipalilities with zero population
  filter(pop != 0) %>%
  # Keep only municipalities in the list
   filter(mun %in% mun_vec) %>%
  # Compute dengue rate per population
  # mutate(cases = cases/pop*100000) %>%
  # Remove population
  select(-pop) %>%
  # Round values
  mutate(across(c(cases, prec, tmax, tmin), ~ round(.x, digits = 2))) %>%
  # Pad weeks 
  group_by(mun) %>%
  pad_by_time(date, .by = "week", .pad_value = 0, .start_date = min(tdengue$date), .end_date = max(tdengue$date)) %>%
  ungroup()
```

Municipalities remaining at the dataset: `r length(unique(tdengue$mun))`

::: callout-warning
The computation of dengue incidence (cases per population) is commented to keep the raw cases count.
:::

### Standardize measures

Center around mean with a unit standard deviation.

$$
x' = \frac{x - \mu}{\sigma} 
$$

```{r}
tdengue <- tdengue %>%
  mutate(cases_raw = cases) %>%
  group_by(mun) %>%
  arrange(date) %>%
  mutate(cases_cum_raw = cumsum(cases_raw)) %>%
  mutate(cases_cum = cases_cum_raw) %>%
  mutate(across(c(cases, cases_cum, prec, tmax, tmin), ~ standardize_vec(.x, silent = TRUE))) %>%
  ungroup()
```

### Lag and rolling lag variables

Creates lagged variables from standardized dengue cases and weather variables, from 1 to 6 weeks.

```{r}
tdengue <- tdengue %>%
  group_by(mun) %>%
  tk_augment_lags(.value = c(cases, prec, tmax, tmin), .lags = 1:6) %>%
  # tk_augment_slidify(
  #   .value = contains("_lag"), 
  #   .period = c(2, 4, 6), 
  #   .f = ~ mean(.x, na.rm = TRUE), 
  #   .partial = TRUE,
  #   .align   = "center"
  # ) %>%
  ungroup()
```

::: callout-warning
Rolling window calculation procedure is commented out.
:::

## Overview

```{r}
glimpse(tdengue)
```

## Save result

```{r}
write_parquet(x = tdengue, sink = data_dir("bundled_data/tdengue.parquet"))
```

## Session info

```{r}
sessionInfo()
```

---
title: "Aggregated spatial-time cases database"
author: Raphael Saldanha
date: now
---

## Context

This notebook aims to create a database with aggregated counts of positive dengue cases for spatial and time units.

The aggregation will be on municipalities and time will be date and epidemiological week.

### Method

-   After the steps of raw dataset download and imputation

-   Load the `dengue_improved.parquet` data

-   Filter valid dates

-   Filter positive cases

-   Aggregate by municipality and date of first symptom's unset and by municipality and the epidemiological week of the first symptom's unset.

```{mermaid}
flowchart LR
  A[Raw dataset] --> B(Imputation)
  B --> C[Improved dataset]
  C --> D{Filter valid dates}
  C --> E{Filter positive cases}
  D --> F(Aggregate)
  E --> F
  F --> G[Municipality and date dataset]
  F --> H[Municipality and epiweek dataset]
```

## Packages

```{r}
library(tidyverse)
library(arrow)
library(lubridate)
```

## Load data

Lazy evaluation.

```{r}
dengue <- arrow::read_parquet(file = "parquet_improved/dengue_improved.parquet")

tally(dengue)
```

## Filter valid dates

```{r}
valid_interval <- interval(ymd("2011-01-01"), ymd("2021-12-31"))

dengue <- dengue %>%
  mutate(DT_SIN_PRI = ymd(DT_SIN_PRI)) %>%
  filter(DT_SIN_PRI %within% valid_interval)

tally(dengue)
```

```{r}
dengue_classifications <- c("Febre hemorrágica do dengue", "Síndrome do choque do dengue", "Dengue com sinais de alarme",
  "Dengue clássico", "Dengue com complicações", "Dengue",
  "Dengue grave")
```

```{r}
dengue %>% 
  mutate(CLASSI_FIN = case_when(
    CLASSI_FIN %in% dengue_classifications ~ "Confirmed",
    CLASSI_FIN == "Descartado" ~ "Discarded",
    CLASSI_FIN == "Inconclusivo" ~ "Inconclusive",
    CLASSI_FIN == 6 ~ "Invalid",
    is.na(CLASSI_FIN) ~ "Missing",
    .default = CLASSI_FIN
  )) %>%
  mutate(DT_SIN_PRI = lubridate::ceiling_date(x = DT_SIN_PRI, unit = "month")) %>%
  group_by(DT_SIN_PRI, CLASSI_FIN) %>%
  summarise(freq = n()) %>%
  ungroup() %>%
  ggplot(aes(x = DT_SIN_PRI, weight = freq, fill = CLASSI_FIN)) +
  geom_bar() +
  scale_fill_hue(direction = 1) +
  scale_y_continuous(labels = scales::comma) +
  labs(fill = "Classificação") +
  theme_minimal() +
  theme(legend.position = "bottom") +
  labs(x = "Month of first symptom's onset", y = "Records", fill = "Classification")

ggsave(filename = "dengue_cases_classification.pdf")
```

## Filter positive cases of dengue

```{r}
dengue <- dengue %>%
  filter(CLASSI_FIN %in% dengue_classifications)

tally(dengue)
```

## Aggregation

### Municipality and date ("md")

Including the step to fill the time series with zero values when certain dates do not have cases.

```{r}
dengue_md <- dengue %>%
  group_by(mun = ID_MN_RESI, date = DT_SIN_PRI) %>%
  summarise(freq = n()) %>%
  arrange(date) %>%
  complete(
    date = seq.Date(min(date), max(date), by = "day"),
    fill = list(freq = 0)
  ) %>%
  ungroup() %>%
  collect()
```

```{r}
glimpse(dengue_md)
```

```{r}
dengue_md %>%
  write_parquet(sink = "parquet_aggregated/dengue_md.parquet")
```

### Municipality and epidemiological week ("mw")

```{r}
dengue_mw <- dengue_md %>%
  mutate(epi_week = paste0(epiyear(date), "-", str_pad(epiweek(date), 2, pad = "0"))) %>%
  group_by(mun, epi_week) %>%
  summarise(freq = n()) %>%
  arrange(epi_week) %>%
  ungroup() %>%
  collect()
```

```{r}
glimpse(dengue_mw)
```

```{r}
dengue_mw %>%
  write_parquet(sink = "parquet_aggregated/dengue_mw.parquet")
```

## Session info

```{r}
sessionInfo()
```

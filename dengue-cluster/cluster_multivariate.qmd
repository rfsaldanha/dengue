---
title: "Multivariate clustering"
author: Raphael Saldanha
date: last-modified
---

This notebook aims to cluster the Brazilian municipalities considering climate indicators with multivariate clustering techniques.

## Packages

```{r}
#| message: false
library(tidyverse)
library(lubridate)
library(arrow)
library(timetk)
library(dtwclust)
library(kableExtra)
library(tictoc)
library(sf)
library(DT)
source("../functions.R")
```

## Load data

Daily, scaled cases, maximum temperature, minimum temperature and precipitation.

```{r}
tdengue <- open_dataset(sources = data_dir("bundled_data/tdengue.parquet")) %>%
  select(mun, date, cases, tmax, tmin, prec) %>%
  collect()

dim(tdengue)
```

Data for maps.

```{r}
uf_sf <- geobr::read_state(showProgress = FALSE)

coords <- geobr::read_municipality(showProgress = FALSE) %>%
  st_make_valid() %>%
  st_centroid()
```

## Prepare data

For clustering, the data must be a list of data frames with climate data and without date.

```{r}
gdengue <- tdengue %>%
  group_by(mun) %>%
  arrange(date) %>%
  select(-date)

mdengue <- group_split(gdengue, .keep = FALSE) %>%
  tslist(simplify = TRUE)

names(mdengue) <- group_keys(gdengue)$mun
```

```{r}
glimpse(mdengue[1:3])
```

## DTW clustering

Try from 2 to 20 partitions.

```{r}
tic()
stdw_clust <- tsclust(
  series = mdengue, 
  type = "partitional", k = 2:20, 
  distance = "dtw_basic", 
  seed = 13
)
toc()
```

### Cluster Validity Indices (CVI)

```{r}
names(stdw_clust) <- paste0("k_", 2:20)
res_cvi <- sapply(stdw_clust, cvi, type = "internal") %>% 
  t() %>%
  as_tibble(rownames = "k") %>%
  arrange(-Sil)

datatable(res_cvi)
```

```{r}
m_sel_clust <- stdw_clust[[res_cvi[[1,1]]]]

plot(m_sel_clust)
```

### Partitions size

```{r}
table(m_sel_clust@cluster)
```

### Partition results

```{r}
coords <- coords %>%
  mutate(code_muni = substr(code_muni, 0, 6))
```

```{r}
m_cluster_ids <- tibble(
  code_muni = names(mdengue),
  group = as.character(m_sel_clust@cluster)
) %>% 
  left_join(coords, by = "code_muni") %>%
  arrange(group, name_muni) %>%
  st_as_sf()
```

```{r}
saveRDS(object = m_cluster_ids, file = "m_cluster_ids.rds")
```

```{r}
m_cluster_ids %>%
  select(group, name_muni, abbrev_state) %>%
  arrange(group, name_muni) %>%
  st_drop_geometry() %>%
  datatable()
```

```{r}
ggplot() +
  geom_sf(data = uf_sf, fill = "lightgray", color = "grey20", size=.15, show.legend = FALSE) +
  geom_sf(data = m_cluster_ids, aes(color = group), size = 2) +
  theme_minimal()
```

## Session info

```{r}
sessionInfo()
```

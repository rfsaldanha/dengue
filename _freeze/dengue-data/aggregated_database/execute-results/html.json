{
  "hash": "0b24500cda38da98a8dd8b7b5412d950",
  "result": {
    "markdown": "---\ntitle: \"Export aggregated database\"\nauthor: Raphael Saldanha\ndate: last-modified\n---\n\n\n## Context\n\nThis notebook aims to create a database with aggregated counts of positive dengue cases for spatial and time units.\n\nThe aggregation will be on municipalities and time will be date and epidemiological week.\n\n## Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(lubridate)\nsource(\"../functions.R\")\n```\n:::\n\n\n### Execution node\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnode_name()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"dell\"\n```\n:::\n:::\n\n\n## Load data\n\nLazy evaluation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue <- arrow::read_parquet(file = file.path(c(data_dir(), \"parquet_improved/dengue_improved.parquet\")))\n\ntally(dengue)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         n\n1 19180457\n```\n:::\n:::\n\n\n## Filter valid dates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvalid_interval <- interval(ymd(\"2011-01-01\"), ymd(\"2021-12-31\"))\n\ndengue <- dengue %>%\n  mutate(DT_SIN_PRI = ymd(DT_SIN_PRI)) %>%\n  filter(DT_SIN_PRI %within% valid_interval)\n\ntally(dengue)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         n\n1 15561929\n```\n:::\n:::\n\n\n## Filter positive cases of dengue\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_classifications <- c(\"Febre hemorrágica do dengue\", \"Síndrome do choque do dengue\", \"Dengue com sinais de alarme\",\n  \"Dengue clássico\", \"Dengue com complicações\", \"Dengue\",\n  \"Dengue grave\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue <- dengue %>%\n  filter(CLASSI_FIN %in% dengue_classifications)\n\ntally(dengue)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        n\n1 8125611\n```\n:::\n:::\n\n\n## Aggregation\n\n### Municipality and date (\"md\")\n\nIncluding the step to fill the time series with zero values when certain dates do not have cases.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_md <- dengue %>%\n  group_by(mun = ID_MN_RESI, date = DT_SIN_PRI) %>%\n  summarise(freq = n()) %>%\n  arrange(date) %>%\n  complete(\n    date = seq.Date(min(date), max(date), by = \"day\"),\n    fill = list(freq = 0)\n  ) %>%\n  ungroup() %>%\n  collect()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'mun'. You can override using the `.groups`\nargument.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(dengue_md)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 16,772,737\nColumns: 3\n$ mun  <chr> \"110000\", \"110000\", \"110000\", \"110000\", \"110000\", \"110000\", \"1100…\n$ date <date> 2015-12-29, 2015-12-30, 2015-12-31, 2016-01-01, 2016-01-02, 2016…\n$ freq <int> 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_md %>%\n  write_parquet(sink = file.path(c(data_dir(), \"parquet_aggregated/dengue_md.parquet\")))\n```\n:::\n\n\n### Municipality and epidemiological week (\"mw\")\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_mw <- dengue_md %>%\n  mutate(epi_week = paste0(epiyear(date), \"-\", str_pad(epiweek(date), 2, pad = \"0\"))) %>%\n  group_by(mun, epi_week) %>%\n  summarise(freq = n()) %>%\n  arrange(epi_week) %>%\n  ungroup() %>%\n  collect()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'mun'. You can override using the `.groups`\nargument.\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(dengue_mw)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 2,400,687\nColumns: 3\n$ mun      <chr> \"110005\", \"110006\", \"110014\", \"110034\", \"110140\", \"120017\", \"…\n$ epi_week <chr> \"2010-52\", \"2010-52\", \"2010-52\", \"2010-52\", \"2010-52\", \"2010-…\n$ freq     <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_mw %>%\n  write_parquet(sink = file.path(c(data_dir(), \"parquet_aggregated/dengue_mw.parquet\")))\n```\n:::\n\n\n## Session info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.1.2 (2021-11-01)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0\nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] arrow_12.0.1.1  lubridate_1.9.2 forcats_1.0.0   stringr_1.5.0  \n [5] dplyr_1.1.2     purrr_1.0.1     readr_2.1.4     tidyr_1.3.0    \n [9] tibble_3.2.1    ggplot2_3.4.2   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] compiler_4.1.2    pillar_1.9.0      tools_4.1.2       bit_4.0.5        \n [5] digest_0.6.33     timechange_0.2.0  jsonlite_1.8.7    evaluate_0.21    \n [9] lifecycle_1.0.3   gtable_0.3.3      pkgconfig_2.0.3   rlang_1.1.1      \n[13] cli_3.6.1         rstudioapi_0.15.0 yaml_2.3.7        xfun_0.39        \n[17] fastmap_1.1.1     withr_2.5.0       knitr_1.43        generics_0.1.3   \n[21] vctrs_0.6.3       htmlwidgets_1.6.2 hms_1.1.3         bit64_4.0.5      \n[25] grid_4.1.2        tidyselect_1.2.0  glue_1.6.2        R6_2.5.1         \n[29] fansi_1.0.4       rmarkdown_2.23    tzdb_0.4.0        magrittr_2.0.3   \n[33] scales_1.2.1      htmltools_0.5.5   assertthat_0.2.1  colorspace_2.1-0 \n[37] utf8_1.2.3        stringi_1.7.12    munsell_0.5.0    \n```\n:::\n:::\n",
    "supporting": [
      "aggregated_database_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "7179d2905bcd78243e0386cc71762b04",
  "result": {
    "markdown": "---\ntitle: \"Denque and weather lags\"\nauthor: Raphael Saldanha\ndate: last-modified\n---\n\n\nThis notebook aims to study the relationship between Dengue cases incidence with lagged climate indicators, specially the co-occurrence of specific climate conditions that precedes an outbreak.\n\n## Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(hotspots)\nlibrary(DT)\nlibrary(finetune)\nlibrary(themis)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(rpart.plot)\nlibrary(vip)\nlibrary(doParallel)\ndoParallel::registerDoParallel()\n\nsource(\"../functions.R\")\n```\n:::\n\n\n## Dataset construction\n\n### Dengue\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncode_muni <- 3136702 # Juiz de Fora, MG\n```\n:::\n\n\nThe original data on municipality dengue cases incidence present daily observations and is summarized by month.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df <- open_dataset(data_dir(\"dengue_data/parquet_aggregated/dengue_md.parquet\")) %>%\n  filter(mun == !!substr(code_muni, 0, 6)) %>%\n  collect() %>%\n  summarise_by_time(.date_var = date, .by = \"month\", freq = sum(freq, na.rm = TRUE))\n```\n:::\n\n\n#### Classify\n\nBased on the observed frequency distribution of cases, we classify the months as anomalous or not.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhot_ref <- hotspots(\n  x = dengue_df$freq, \n  p = 0.99, \n  var.est = \"mad\",\n)$positive.cut\n\ndengue_df_anom <- dengue_df %>%\n  mutate(anomaly = if_else(freq >= hot_ref, TRUE, FALSE)) %>%\n  mutate(anomaly = as.factor(anomaly))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df_anom %>%\n  ggplot(aes(x = date, y = freq, fill = anomaly)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_discrete(direction = -1) +\n  theme(\n    legend.position = \"bottom\",\n    legend.direction = \"horizontal\"\n  )\n```\n\n::: {.cell-output-display}\n![](dengue_weather_lag_class_v2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df <- inner_join(dengue_df, dengue_df_anom) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(date, freq)`\n```\n:::\n:::\n\n\nProportion table of anomalous (yes) and not anomalous (not) months.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprop.table(table(dengue_df$anomaly))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   FALSE     TRUE \n0.734375 0.265625 \n```\n:::\n:::\n\n\n### Weather data\n\nThe available weather data is also originally presented in daily observations and aggregate to months. For temperature indicators, the mean is used, for precipitation, the sum is used for aggregation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmax <- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/tmax.parquet\")) %>%\n  filter(code_muni == code_muni) %>%\n  filter(name == \"Tmax_mean\") %>%\n  select(date, value) %>%\n  collect() %>%\n  filter(date >= min(dengue_df$date) & date <= max(dengue_df$date)) %>%\n  summarise_by_time(.date_var = date, .by = \"month\", value = mean(value, na.rm = TRUE)) %>%\n  rename(tmax = value)\n\ntmin <- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/tmin.parquet\")) %>%\n  filter(code_muni == code_muni) %>%\n  filter(name == \"Tmin_mean\") %>%\n  select(date, value) %>%\n  collect() %>%\n  filter(date >= min(dengue_df$date) & date <= max(dengue_df$date)) %>%\n  summarise_by_time(.date_var = date, .by = \"month\", value = mean(value, na.rm = TRUE)) %>%\n  rename(tmin = value)\n\nprec <- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/pr.parquet\")) %>%\n  filter(code_muni == code_muni) %>%\n  filter(name == \"pr_sum\") %>%\n  select(date, value) %>%\n  collect() %>%\n  filter(date >= min(dengue_df$date) & date <= max(dengue_df$date)) %>%\n  summarise_by_time(.date_var = date, .by = \"month\", value = sum(value, na.rm = TRUE)) %>%\n  rename(prec = value)\n```\n:::\n\n\n### Join data\n\nJoin dengue and weather datasets.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres <- inner_join(x = dengue_df, y = tmax, by = \"date\") %>%\n  inner_join(tmin, by = \"date\") %>%\n  inner_join(prec, by = \"date\") %>%\n  select(date, anomaly, tmax, tmin, prec)\n```\n:::\n\n\n### Time lag\n\nThis step produces time lagged variables (from 1 to 6 months) from the weather indicators, remove the date variable, and omit records with missing data (only present after the time lag procedure).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_prep <- res %>%\n  select(-date) %>%\n  tk_augment_lags(\n    .value = c(tmax, tmin, prec), \n    .lags = 1:6\n  ) %>% \n  select(-tmax, -tmin, -prec) %>%\n  na.omit()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(res_prep) %>% datatable()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-1086dea3662f5fcbb6b3\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1086dea3662f5fcbb6b3\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"],[\"FALSE\",\"FALSE\",\"FALSE\",\"FALSE\",\"FALSE\",\"FALSE\"],[26.17385351467693,26.72544769395087,28.43298173165642,29.60773389586817,29.49653405719427,29.34070379908771],[14.96317995583027,15.18916207733414,15.90763421604706,16.4951430635698,18.85585107572839,18.8123191876364],[8046288.766040802,7814524.978378296,6506432.747368097,5800428.126594543,17873537.89751434,18058934.51061773],[26.8724566848724,26.17385351467693,26.72544769395087,28.43298173165642,29.60773389586817,29.49653405719427],[16.7187942733731,14.96317995583027,15.18916207733414,15.90763421604706,16.4951430635698,18.85585107572839],[13694424.00654602,8046288.766040802,7814524.978378296,6506432.747368097,5800428.126594543,17873537.89751434],[28.9565583609528,26.8724566848724,26.17385351467693,26.72544769395087,28.43298173165642,29.60773389586817],[19.03550848089506,16.7187942733731,14.96317995583027,15.18916207733414,15.90763421604706,16.4951430635698],[22400879.77679062,13694424.00654602,8046288.766040802,7814524.978378296,6506432.747368097,5800428.126594543],[29.35255993066393,28.9565583609528,26.8724566848724,26.17385351467693,26.72544769395087,28.43298173165642],[20.22448844413397,19.03550848089506,16.7187942733731,14.96317995583027,15.18916207733414,15.90763421604706],[30775654.30288982,22400879.77679062,13694424.00654602,8046288.766040802,7814524.978378296,6506432.747368097],[30.56590001543757,29.35255993066393,28.9565583609528,26.8724566848724,26.17385351467693,26.72544769395087],[20.71001601205695,20.22448844413397,19.03550848089506,16.7187942733731,14.96317995583027,15.18916207733414],[27648413.46569633,30775654.30288982,22400879.77679062,13694424.00654602,8046288.766040802,7814524.978378296],[30.51610272405794,30.56590001543757,29.35255993066393,28.9565583609528,26.8724566848724,26.17385351467693],[20.72152767214717,20.71001601205695,20.22448844413397,19.03550848089506,16.7187942733731,14.96317995583027],[29442223.41576958,27648413.46569633,30775654.30288982,22400879.77679062,13694424.00654602,8046288.766040802]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>anomaly<\\/th>\\n      <th>tmax_lag1<\\/th>\\n      <th>tmin_lag1<\\/th>\\n      <th>prec_lag1<\\/th>\\n      <th>tmax_lag2<\\/th>\\n      <th>tmin_lag2<\\/th>\\n      <th>prec_lag2<\\/th>\\n      <th>tmax_lag3<\\/th>\\n      <th>tmin_lag3<\\/th>\\n      <th>prec_lag3<\\/th>\\n      <th>tmax_lag4<\\/th>\\n      <th>tmin_lag4<\\/th>\\n      <th>prec_lag4<\\/th>\\n      <th>tmax_lag5<\\/th>\\n      <th>tmin_lag5<\\/th>\\n      <th>prec_lag5<\\/th>\\n      <th>tmax_lag6<\\/th>\\n      <th>tmin_lag6<\\/th>\\n      <th>prec_lag6<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"anomaly\",\"targets\":1},{\"name\":\"tmax_lag1\",\"targets\":2},{\"name\":\"tmin_lag1\",\"targets\":3},{\"name\":\"prec_lag1\",\"targets\":4},{\"name\":\"tmax_lag2\",\"targets\":5},{\"name\":\"tmin_lag2\",\"targets\":6},{\"name\":\"prec_lag2\",\"targets\":7},{\"name\":\"tmax_lag3\",\"targets\":8},{\"name\":\"tmin_lag3\",\"targets\":9},{\"name\":\"prec_lag3\",\"targets\":10},{\"name\":\"tmax_lag4\",\"targets\":11},{\"name\":\"tmin_lag4\",\"targets\":12},{\"name\":\"prec_lag4\",\"targets\":13},{\"name\":\"tmax_lag5\",\"targets\":14},{\"name\":\"tmin_lag5\",\"targets\":15},{\"name\":\"prec_lag5\",\"targets\":16},{\"name\":\"tmax_lag6\",\"targets\":17},{\"name\":\"tmin_lag6\",\"targets\":18},{\"name\":\"prec_lag6\",\"targets\":19}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n### Dataset split\n\nSplits the dataset into training and testing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_split <- initial_time_split(\n  data = res_prep, \n  prop = .8, \n  lag = 6\n)\n\ntrain_data <- training(res_split)\ntest_data <- testing(res_split)\n```\n:::\n\n\nRemove old objects and triggers a memory garbage collection.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(dengue_df, dengue_df_anom, res, res_prep)\ngc()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          used (Mb) gc trigger   (Mb)  max used   (Mb)\nNcells 3013526  161    4749918  253.7   4749918  253.7\nVcells 5234027   40  403999596 3082.3 679072422 5181.0\n```\n:::\n:::\n\n\n## Modeling\n\n### Recipes\n\nCreates model recipes with the model specitication, data (train dataset). Several recipes are created with different methods to balance the training dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrec_upsample <- \n  recipe(anomaly ~ ., train_data) %>%\n  step_upsample(\n    anomaly, \n    over_ratio = tune()\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrec_rose <- \n  recipe(anomaly ~ ., train_data) %>%\n  step_rose(\n    anomaly, \n    over_ratio = tune()\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrec_smote <- \n  recipe(anomaly ~ ., train_data) %>%\n  step_smote(\n    anomaly, \n    over_ratio = tune(),\n    neighbors = tune()\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrec_adasyn <- \n  recipe(anomaly ~ ., train_data) %>%\n  step_adasyn(\n    anomaly, \n    over_ratio = tune(),\n    neighbors = tune()\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrec_downsample <- \n  recipe(anomaly ~ ., train_data) %>%\n  step_downsample(\n    anomaly, \n    under_ratio = tune()\n  )\n```\n:::\n\n\n### Learners\n\nDecision trees are choose due its directly interpretability and rules extraction. Two learners are created with different engines (rpart and partykit).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntree_rp_spec <- decision_tree(\n  cost_complexity = tune(),\n  tree_depth = tune(),\n  min_n = tune()\n) %>%\n  set_engine(\"rpart\") %>%\n  set_mode(\"classification\")\n```\n:::\n\n\n### Folding\n\nCreates a v-fold for cross-validation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfolds <- vfold_cv(\n  data = train_data, \n  v = 10, \n  strata = anomaly\n)\n```\n:::\n\n\n### Workflow setting\n\nThis step creates an modeling workflow by combining the recipes and learners options.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwf_set <- \n  workflow_set(\n    preproc = list(\n      upsample = rec_upsample,\n      rose = rec_rose, \n      smote = rec_smote, \n      adasyn = rec_adasyn,\n      downsample = rec_downsample\n    ),\n    models = list(\n      dt = tree_rp_spec\n    ),\n    cross = TRUE\n  )\n```\n:::\n\n\n### Tuning\n\nThis step tune hyper-parameters from the models (learners and balancing steps) using an ANOVA race.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntune_results <- wf_set %>%\n  workflow_map(\n    \"tune_race_anova\",\n    seed = 345,\n    resamples = folds,\n    grid = 50,\n    metrics = metric_set(\n      accuracy, \n      bal_accuracy,\n      roc_auc, \n      ppv,\n      sens,\n      spec\n    ),\n    control = control_race(parallel_over = \"everything\"),\n    verbose = TRUE\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ni 1 of 5 tuning:     upsample_dt\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ 1 of 5 tuning:     upsample_dt (9.4s)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ni 2 of 5 tuning:     rose_dt\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ 2 of 5 tuning:     rose_dt (7.4s)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ni 3 of 5 tuning:     smote_dt\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ 3 of 5 tuning:     smote_dt (9.7s)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ni 4 of 5 tuning:     adasyn_dt\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ 4 of 5 tuning:     adasyn_dt (8s)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ni 5 of 5 tuning:     downsample_dt\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ 5 of 5 tuning:     downsample_dt (10.4s)\n```\n:::\n:::\n\n\n### Best workflow and model selection\n\nBased on the tuning results, this step identifies the best learner strategy and best model hyper-parameters based on the ROC-AUC metric.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntarget_metric <- \"bal_accuracy\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbest_wf <- tune_results %>% \n  rank_results(rank_metric = target_metric) %>% \n  filter(.metric == target_metric) %>% \n  select(wflow_id, model, .config, accuracy = mean, rank) %>%\n  slice(1) %>%\n  pull(wflow_id)\n\nprint(best_wf)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"upsample_dt\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbest_tune <- tune_results %>%\n  extract_workflow_set_result(id = best_wf) %>%\n  select_best(metric = target_metric)\n\nt(best_tune)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                [,1]                   \ncost_complexity \"0.02850468\"           \ntree_depth      \"9\"                    \nmin_n           \"8\"                    \nover_ratio      \"0.8693291\"            \n.config         \"Preprocessor37_Model1\"\n```\n:::\n:::\n\n\n### Finalize workflow\n\nFinalizes the workflow with the choose learner and hyper-parameter combination, performing the last fit of the model with the entire dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfitted_wf <- tune_results %>%\n  extract_workflow(id = best_wf) %>%\n  finalize_workflow(best_tune) %>%\n  last_fit(split = res_split)\n```\n:::\n\n\n## Results\n\n### Decision tree plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nextracted_engine <-  fitted_wf %>% extract_fit_engine()\n\nrpart.plot(extracted_engine, roundint = FALSE)\n```\n\n::: {.cell-output-display}\n![](dengue_weather_lag_class_v2_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n### Confusion matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\naugment(fitted_wf) %>%\n  conf_mat(truth = anomaly, estimate = .pred_class)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          Truth\nPrediction FALSE TRUE\n     FALSE    16    1\n     TRUE      5    6\n```\n:::\n:::\n\n\n### Model performance metrics\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmulti_metric <- metric_set(\n  accuracy, \n  bal_accuracy,\n  roc_auc, \n  ppv,\n  sens,\n  spec\n)\n\naugment(fitted_wf) %>%\n  multi_metric(truth = anomaly, estimate = .pred_class, .pred_TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  .metric      .estimator .estimate\n  <chr>        <chr>          <dbl>\n1 accuracy     binary         0.786\n2 bal_accuracy binary         0.810\n3 ppv          binary         0.941\n4 sens         binary         0.762\n5 spec         binary         0.857\n6 roc_auc      binary         0.238\n```\n:::\n:::\n\n\n### Variable importance plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfitted_wf %>% \n  extract_fit_engine() %>% \n  vip()\n```\n\n::: {.cell-output-display}\n![](dengue_weather_lag_class_v2_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n## Session info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] parallel  stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] ROSE_0.0-4         rlang_1.1.3        doParallel_1.0.17  iterators_1.0.14  \n [5] foreach_1.5.2      vip_0.4.1          rpart.plot_3.1.1   rpart_4.1.23      \n [9] timetk_2.9.0       arrow_14.0.0.2     themis_1.0.2       finetune_1.1.0    \n[13] DT_0.31            hotspots_1.0.3     ineq_0.2-13        lattice_0.22-5    \n[17] yardstick_1.3.0    workflowsets_1.0.1 workflows_1.1.3    tune_1.1.2        \n[21] rsample_1.2.0      recipes_1.0.9      parsnip_1.1.1      modeldata_1.3.0   \n[25] infer_1.0.5        dials_1.2.0        scales_1.3.0       broom_1.0.5       \n[29] tidymodels_1.1.1   lubridate_1.9.3    forcats_1.0.0      stringr_1.5.1     \n[33] dplyr_1.1.4        purrr_1.0.2        readr_2.1.5        tidyr_1.3.1       \n[37] tibble_3.2.1       ggplot2_3.4.4      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n [1] magrittr_2.0.3      furrr_0.3.1         compiler_4.3.2     \n [4] vctrs_0.6.5         lhs_1.1.6           pkgconfig_2.0.3    \n [7] fastmap_1.1.1       ellipsis_0.3.2      backports_1.4.1    \n[10] labeling_0.4.3      utf8_1.2.4          rmarkdown_2.25     \n[13] prodlim_2023.08.28  tzdb_0.4.0          nloptr_2.0.3       \n[16] bit_4.0.5           xfun_0.41           cachem_1.0.8       \n[19] jsonlite_1.8.8      prettyunits_1.2.0   R6_2.5.1           \n[22] bslib_0.6.1         stringi_1.8.3       boot_1.3-28        \n[25] parallelly_1.36.0   jquerylib_0.1.4     Rcpp_1.0.12        \n[28] assertthat_0.2.1    knitr_1.45          future.apply_1.11.1\n[31] zoo_1.8-12          Matrix_1.6-3        splines_4.3.2      \n[34] nnet_7.3-19         timechange_0.3.0    tidyselect_1.2.0   \n[37] rstudioapi_0.15.0   yaml_2.3.8          timeDate_4032.109  \n[40] codetools_0.2-19    listenv_0.9.0       withr_3.0.0        \n[43] evaluate_0.23       future_1.33.1       survival_3.5-7     \n[46] xts_0.13.2          pillar_1.9.0        generics_0.1.3     \n[49] hms_1.1.3           munsell_0.5.0       minqa_1.2.6        \n[52] globals_0.16.2      class_7.3-22        glue_1.7.0         \n[55] tools_4.3.2         data.table_1.14.10  lme4_1.1-35.1      \n[58] gower_1.0.1         grid_4.3.2          crosstalk_1.2.1    \n[61] ipred_0.9-14        colorspace_2.1-0    nlme_3.1-163       \n[64] cli_3.6.2           DiceDesign_1.10     fansi_1.0.6        \n[67] lava_1.7.3          gtable_0.3.4        GPfit_1.0-8        \n[70] sass_0.4.8          digest_0.6.34       farver_2.1.1       \n[73] htmlwidgets_1.6.4   htmltools_0.5.7     lifecycle_1.0.4    \n[76] hardhat_1.3.0       bit64_4.0.5         MASS_7.3-60        \n```\n:::\n:::\n",
    "supporting": [
      "dengue_weather_lag_class_v2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding-0.31/datatables.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "1c0494fc13aae74a784ae99d8eff7605",
  "result": {
    "markdown": "---\ntitle: \"Denque and weather lags\"\nauthor: Raphael Saldanha\ndate: last-modified\n---\n\n\nThis notebook aims to study the relationship between Dengue cases incidence with lagged climate indicators, specially the co-occurrence of specific climate conditions that precedes an outbreak.\n\n## Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(hotspots)\nlibrary(DT)\nlibrary(finetune)\nlibrary(bonsai)\nlibrary(themis)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(rpart.plot)\nlibrary(vip)\nlibrary(doParallel)\ndoParallel::registerDoParallel()\n\nsource(\"../functions.R\")\n```\n:::\n\n\n## Dataset construction\n\n### Dengue\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncode_muni <- 3304557 # Rio de Janeiro, RJ\n```\n:::\n\n\nThe original data on municipality dengue cases incidence present daily observations and is summarized by month.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df <- open_dataset(data_dir(\"dengue_data/parquet_aggregated/dengue_md.parquet\")) %>%\n  filter(mun == !!substr(code_muni, 0, 6)) %>%\n  collect() %>%\n  summarise_by_time(.date_var = date, .by = \"month\", freq = sum(freq, na.rm = TRUE))\n```\n:::\n\n\n#### Classify\n\nBased on the observed frequency distribution of cases, we classify the months as anomalous or not.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhot_ref <- hotspots(x = dengue_df$freq, var.est = \"mad\")$positive.cut\n\ndengue_df_anom <- dengue_df %>%\n  mutate(anomaly = if_else(freq >= hot_ref, \"Yes\", \"No\")) %>%\n  mutate(anomaly = as.factor(anomaly))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df_anom %>%\n  ggplot(aes(x = date, y = freq, fill = anomaly)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_discrete(direction = -1) +\n  theme(\n    legend.position = \"bottom\",\n    legend.direction = \"horizontal\"\n  )\n```\n\n::: {.cell-output-display}\n![](dengue_weather_lag_class_v2_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_df <- inner_join(dengue_df, dengue_df_anom) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nJoining with `by = join_by(date, freq)`\n```\n:::\n:::\n\n\nProportion table of anomalous (yes) and not anomalous (not) months.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprop.table(table(dengue_df$anomaly))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n       No       Yes \n0.7954545 0.2045455 \n```\n:::\n:::\n\n\n### Weather data\n\nThe available weather data is also originally presented in daily observations and aggregate to months. For temperature indicators, the mean is used, for precipitation, the sum is used for aggregation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmax <- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/tmax.parquet\")) %>%\n  filter(code_muni == code_muni) %>%\n  filter(name == \"Tmax_mean\") %>%\n  select(date, value) %>%\n  collect() %>%\n  filter(date >= min(dengue_df$date) & date <= max(dengue_df$date)) %>%\n  summarise_by_time(.date_var = date, .by = \"month\", value = mean(value, na.rm = TRUE)) %>%\n  rename(tmax = value)\n\ntmin <- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/tmin.parquet\")) %>%\n  filter(code_muni == code_muni) %>%\n  filter(name == \"Tmin_mean\") %>%\n  select(date, value) %>%\n  collect() %>%\n  filter(date >= min(dengue_df$date) & date <= max(dengue_df$date)) %>%\n  summarise_by_time(.date_var = date, .by = \"month\", value = mean(value, na.rm = TRUE)) %>%\n  rename(tmin = value)\n\nprec <- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/pr.parquet\")) %>%\n  filter(code_muni == code_muni) %>%\n  filter(name == \"pr_sum\") %>%\n  select(date, value) %>%\n  collect() %>%\n  filter(date >= min(dengue_df$date) & date <= max(dengue_df$date)) %>%\n  summarise_by_time(.date_var = date, .by = \"month\", value = sum(value, na.rm = TRUE)) %>%\n  rename(prec = value)\n```\n:::\n\n\n### Join data\n\nJoin dengue and weather datasets.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres <- inner_join(x = dengue_df, y = tmax, by = \"date\") %>%\n  inner_join(tmin, by = \"date\") %>%\n  inner_join(prec, by = \"date\") %>%\n  select(date, anomaly, tmax, tmin, prec)\n```\n:::\n\n\n### Time lag\n\nThis step produces time lagged variables (from 1 to 6 months) from the weather indicators, remove the date variable, and omit records with missing data (only present after the time lag procedure).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_prep <- res %>%\n  select(-date) %>%\n  tk_augment_lags(\n    .value = c(tmax, tmin, prec), \n    .lags = 1:6\n  ) %>% \n  na.omit()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(res_prep) %>% datatable()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-e64637295dad64ddd11c\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-e64637295dad64ddd11c\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\"],[\"Yes\",\"No\",\"No\",\"No\",\"Yes\",\"Yes\"],[26.72544769395087,28.43298173165642,29.60773389586817,29.49653405719427,29.34070379908771,30.49403274560354],[15.18916207733414,15.90763421604706,16.4951430635698,18.85585107572839,18.8123191876364,19.79762454912082],[7814524.978378296,6506432.747368097,5800428.126594543,17873537.89751434,18058934.51061773,20740964.07329464],[26.17385351467693,26.72544769395087,28.43298173165642,29.60773389586817,29.49653405719427,29.34070379908771],[14.96317995583027,15.18916207733414,15.90763421604706,16.4951430635698,18.85585107572839,18.8123191876364],[8046288.766040802,7814524.978378296,6506432.747368097,5800428.126594543,17873537.89751434,18058934.51061773],[26.8724566848724,26.17385351467693,26.72544769395087,28.43298173165642,29.60773389586817,29.49653405719427],[16.7187942733731,14.96317995583027,15.18916207733414,15.90763421604706,16.4951430635698,18.85585107572839],[13694424.00654602,8046288.766040802,7814524.978378296,6506432.747368097,5800428.126594543,17873537.89751434],[28.9565583609528,26.8724566848724,26.17385351467693,26.72544769395087,28.43298173165642,29.60773389586817],[19.03550848089506,16.7187942733731,14.96317995583027,15.18916207733414,15.90763421604706,16.4951430635698],[22400879.77679062,13694424.00654602,8046288.766040802,7814524.978378296,6506432.747368097,5800428.126594543],[29.35255993066393,28.9565583609528,26.8724566848724,26.17385351467693,26.72544769395087,28.43298173165642],[20.22448844413397,19.03550848089506,16.7187942733731,14.96317995583027,15.18916207733414,15.90763421604706],[30775654.30288982,22400879.77679062,13694424.00654602,8046288.766040802,7814524.978378296,6506432.747368097],[30.56590001543757,29.35255993066393,28.9565583609528,26.8724566848724,26.17385351467693,26.72544769395087],[20.71001601205695,20.22448844413397,19.03550848089506,16.7187942733731,14.96317995583027,15.18916207733414],[27648413.46569633,30775654.30288982,22400879.77679062,13694424.00654602,8046288.766040802,7814524.978378296],[30.51610272405794,30.56590001543757,29.35255993066393,28.9565583609528,26.8724566848724,26.17385351467693],[20.72152767214717,20.71001601205695,20.22448844413397,19.03550848089506,16.7187942733731,14.96317995583027],[29442223.41576958,27648413.46569633,30775654.30288982,22400879.77679062,13694424.00654602,8046288.766040802]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>anomaly<\\/th>\\n      <th>tmax<\\/th>\\n      <th>tmin<\\/th>\\n      <th>prec<\\/th>\\n      <th>tmax_lag1<\\/th>\\n      <th>tmin_lag1<\\/th>\\n      <th>prec_lag1<\\/th>\\n      <th>tmax_lag2<\\/th>\\n      <th>tmin_lag2<\\/th>\\n      <th>prec_lag2<\\/th>\\n      <th>tmax_lag3<\\/th>\\n      <th>tmin_lag3<\\/th>\\n      <th>prec_lag3<\\/th>\\n      <th>tmax_lag4<\\/th>\\n      <th>tmin_lag4<\\/th>\\n      <th>prec_lag4<\\/th>\\n      <th>tmax_lag5<\\/th>\\n      <th>tmin_lag5<\\/th>\\n      <th>prec_lag5<\\/th>\\n      <th>tmax_lag6<\\/th>\\n      <th>tmin_lag6<\\/th>\\n      <th>prec_lag6<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"anomaly\",\"targets\":1},{\"name\":\"tmax\",\"targets\":2},{\"name\":\"tmin\",\"targets\":3},{\"name\":\"prec\",\"targets\":4},{\"name\":\"tmax_lag1\",\"targets\":5},{\"name\":\"tmin_lag1\",\"targets\":6},{\"name\":\"prec_lag1\",\"targets\":7},{\"name\":\"tmax_lag2\",\"targets\":8},{\"name\":\"tmin_lag2\",\"targets\":9},{\"name\":\"prec_lag2\",\"targets\":10},{\"name\":\"tmax_lag3\",\"targets\":11},{\"name\":\"tmin_lag3\",\"targets\":12},{\"name\":\"prec_lag3\",\"targets\":13},{\"name\":\"tmax_lag4\",\"targets\":14},{\"name\":\"tmin_lag4\",\"targets\":15},{\"name\":\"prec_lag4\",\"targets\":16},{\"name\":\"tmax_lag5\",\"targets\":17},{\"name\":\"tmin_lag5\",\"targets\":18},{\"name\":\"prec_lag5\",\"targets\":19},{\"name\":\"tmax_lag6\",\"targets\":20},{\"name\":\"tmin_lag6\",\"targets\":21},{\"name\":\"prec_lag6\",\"targets\":22}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n### Dataset split\n\nSplits the dataset into training and testing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres_split <- initial_time_split(\n  data = res_prep, \n  prop = .8, \n  lag = 6\n)\n\ntrain_data <- training(res_split)\ntest_data <- testing(res_split)\n```\n:::\n\n\nRemove old objects and triggers a memory garbage collection.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(dengue_df, dengue_df_anom, res, res_prep)\ngc()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          used  (Mb) gc trigger   (Mb)  max used   (Mb)\nNcells 3036333 162.2    4446408  237.5   4446408  237.5\nVcells 5284643  40.4  404031258 3082.6 679123734 5181.4\n```\n:::\n:::\n\n\n## Modeling\n\n### Recipes\n\nCreates model recipes with the model specitication, data (train dataset). Several recipes are created with different methods to balance the training dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrec_upsample <- \n  recipe(anomaly ~ ., train_data) %>%\n  step_upsample(\n    anomaly, \n    over_ratio = tune()\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrec_rose <- \n  recipe(anomaly ~ ., train_data) %>%\n  step_rose(\n    anomaly, \n    over_ratio = tune()\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrec_smote <- \n  recipe(anomaly ~ ., train_data) %>%\n  step_smote(\n    anomaly, \n    over_ratio = tune(),\n    neighbors = tune()\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrec_adasyn <- \n  recipe(anomaly ~ ., train_data) %>%\n  step_adasyn(\n    anomaly, \n    over_ratio = tune(),\n    neighbors = tune()\n  )\n```\n:::\n\n\n### Learners\n\nDecision trees are choose due its directly interpretability and rules extraction. Two learners are created with different engines (rpart and partykit).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntree_rp_spec <- decision_tree(\n  cost_complexity = tune(),\n  tree_depth = tune(),\n  min_n = tune()\n) %>%\n  set_engine(\"rpart\") %>%\n  set_mode(\"classification\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntree_pk_spec <- decision_tree(\n  tree_depth = tune(),\n  min_n = tune()\n) %>%\n  set_engine(\"partykit\") %>%\n  set_mode(\"classification\")\n```\n:::\n\n\n### Folding\n\nCreates a v-fold for cross-validation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfolds <- vfold_cv(\n  data = train_data, \n  v = 10, \n  strata = anomaly\n)\n```\n:::\n\n\n### Workflow setting\n\nThis step creates an modeling workflow by combining the recipes and learners options.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwf_set <- \n  workflow_set(\n    preproc = list(\n      upsample = rec_upsample,\n      rose = rec_rose, \n      smote = rec_smote, \n      adasyn = rec_adasyn\n    ),\n    models = list(\n      dt_rp = tree_rp_spec, \n      dt_pk = tree_pk_spec\n    ),\n    cross = TRUE\n  )\n```\n:::\n\n\n### Hyper-parameter tuning\n\nThis step tune hyper-parameters from the models (learners and balancing steps) using an ANOVA race.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntune_results <- wf_set %>%\n  workflow_map(\n    \"tune_race_anova\",\n    resamples = folds,\n    grid = 50,\n    control = control_race(parallel_over = \"everything\"),\n    verbose = TRUE\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ni 1 of 8 tuning:     upsample_dt_rp\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ 1 of 8 tuning:     upsample_dt_rp (8.4s)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ni 2 of 8 tuning:     upsample_dt_pk\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ 2 of 8 tuning:     upsample_dt_pk (4.5s)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ni 3 of 8 tuning:     rose_dt_rp\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ 3 of 8 tuning:     rose_dt_rp (7.8s)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ni 4 of 8 tuning:     rose_dt_pk\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ 4 of 8 tuning:     rose_dt_pk (7.3s)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ni 5 of 8 tuning:     smote_dt_rp\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ 5 of 8 tuning:     smote_dt_rp (8.8s)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ni 6 of 8 tuning:     smote_dt_pk\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ 6 of 8 tuning:     smote_dt_pk (8.2s)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ni 7 of 8 tuning:     adasyn_dt_rp\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ 7 of 8 tuning:     adasyn_dt_rp (8.3s)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\ni 8 of 8 tuning:     adasyn_dt_pk\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ 8 of 8 tuning:     adasyn_dt_pk (7.5s)\n```\n:::\n:::\n\n\n### Best workflow and model selection\n\nBased on the tuning results, this step identifies the best learner strategy and best model hyper-parameters based on the ROC-AUC metric.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbest_wf <- tune_results %>% \n  rank_results(rank_metric = \"roc_auc\") %>% \n  filter(.metric == \"roc_auc\") %>% \n  select(wflow_id, model, .config, accuracy = mean, rank) %>%\n  slice(1) %>%\n  pull(wflow_id)\n\nbest_tune <- tune_results %>%\n  extract_workflow_set_result(id = best_wf) %>%\n  select_best(metric = \"roc_auc\")\n```\n:::\n\n\n### Finalize workflow\n\nFinalizes the workflow with the choose learner and hyper-parameter combination, performing the last fit of the model with the entire dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfitted_wf <- tune_results %>%\n  extract_workflow(id = best_wf) %>%\n  finalize_workflow(best_tune) %>%\n  last_fit(split = res_split)\n```\n:::\n\n\n## Results\n\n### Decision tree plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nextracted_engine <-  fitted_wf %>% extract_fit_engine()\n\nif(class(extracted_engine)[1] == \"constparty\"){\n  plot(extracted_engine)\n} else (\n  rpart.plot(extracted_engine, roundint = FALSE)\n)\n```\n\n::: {.cell-output-display}\n![](dengue_weather_lag_class_v2_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n$obj\nn= 123 \n\nnode), split, n, loss, yval, (yprob)\n      * denotes terminal node\n\n 1) root 123 56 No (0.54471545 0.45528455)  \n   2) tmax_lag3< 29.10174 44  8 No (0.81818182 0.18181818)  \n     4) tmax>=27.50049 37  3 No (0.91891892 0.08108108) *\n     5) tmax< 27.50049 7  2 Yes (0.28571429 0.71428571) *\n   3) tmax_lag3>=29.10174 79 31 Yes (0.39240506 0.60759494)  \n     6) tmin>=21.57711 11  2 No (0.81818182 0.18181818) *\n     7) tmin< 21.57711 68 22 Yes (0.32352941 0.67647059)  \n      14) prec_lag1< 1.117271e+07 7  2 No (0.71428571 0.28571429) *\n      15) prec_lag1>=1.117271e+07 61 17 Yes (0.27868852 0.72131148)  \n        30) tmax_lag6>=32.09391 7  2 No (0.71428571 0.28571429) *\n        31) tmax_lag6< 32.09391 54 12 Yes (0.22222222 0.77777778) *\n\n$snipped.nodes\nNULL\n\n$xlim\n[1] 0 1\n\n$ylim\n[1] 0 1\n\n$x\n [1] 0.34832615 0.12664899 0.03331124 0.21998674 0.57000331 0.40666225\n [7] 0.73334438 0.59333775 0.87335101 0.78001326 0.96668876\n\n$y\n [1] 0.92656505 0.72655748 0.04653176 0.04653176 0.72655748 0.04653176\n [7] 0.52654992 0.04653176 0.32654235 0.04653176 0.04653176\n\n$branch.x\n       [,1]      [,2]       [,3]      [,4]      [,5]      [,6]      [,7]\nx 0.3483262 0.1266490 0.03331124 0.2199867 0.5700033 0.4066622 0.7333444\n         NA 0.1266490 0.03331124 0.2199867 0.5700033 0.4066622 0.7333444\n         NA 0.3483262 0.12664899 0.1266490 0.3483262 0.5700033 0.5700033\n       [,8]      [,9]     [,10]     [,11]\nx 0.5933378 0.8733510 0.7800133 0.9666888\n  0.5933378 0.8733510 0.7800133 0.9666888\n  0.7333444 0.7333444 0.8733510 0.8733510\n\n$branch.y\n      [,1]      [,2]      [,3]      [,4]      [,5]      [,6]      [,7]\ny 1.003897 0.8038890 0.1238633 0.1238633 0.8038890 0.1238633 0.6038814\n        NA 0.8409672 0.6409597 0.6409597 0.8409672 0.6409597 0.6409597\n        NA 0.8409672 0.6409597 0.6409597 0.8409672 0.6409597 0.6409597\n       [,8]      [,9]     [,10]     [,11]\ny 0.1238633 0.4038739 0.1238633 0.1238633\n  0.4409521 0.4409521 0.2409445 0.2409445\n  0.4409521 0.4409521 0.2409445 0.2409445\n\n$labs\n [1] \"No\\n0.46\\n100%\" \"No\\n0.18\\n36%\"  \"No\\n0.08\\n30%\"  \"Yes\\n0.71\\n6%\" \n [5] \"Yes\\n0.61\\n64%\" \"No\\n0.18\\n9%\"   \"Yes\\n0.68\\n55%\" \"No\\n0.29\\n6%\"  \n [9] \"Yes\\n0.72\\n50%\" \"No\\n0.29\\n6%\"   \"Yes\\n0.78\\n44%\"\n\n$cex\n[1] 0.865625\n\n$boxes\n$boxes$x1\n [1] 3.086955e-01 9.341035e-02 7.259996e-05 1.876004e-01 5.367647e-01\n [6] 3.742759e-01 7.001057e-01 5.609514e-01 8.401124e-01 7.476269e-01\n[11] 9.334501e-01\n\n$boxes$y1\n [1]  0.87369005  0.67368248 -0.00634324 -0.00634324  0.67368248 -0.00634324\n [7]  0.47367492 -0.00634324  0.27366735 -0.00634324 -0.00634324\n\n$boxes$x2\n [1] 0.38795683 0.15988763 0.06654987 0.25237311 0.60324195 0.43904861\n [7] 0.76658302 0.62572412 0.90658965 0.81239962 0.99992740\n\n$boxes$y2\n [1] 1.0038966 0.8038890 0.1238633 0.1238633 0.8038890 0.1238633 0.6038814\n [8] 0.1238633 0.4038739 0.1238633 0.1238633\n\n\n$split.labs\n[1] \"\"\n\n$split.cex\n [1] 1 1 1 1 1 1 1 1 1 1 1\n\n$split.box\n$split.box$x1\n [1] 0.25457615 0.05591035         NA         NA 0.50182150         NA\n [7] 0.62297506         NA 0.77278283         NA         NA\n\n$split.box$y1\n [1] 0.8165107 0.6165031        NA        NA 0.6165031        NA 0.4164956\n [8]        NA 0.2164880        NA        NA\n\n$split.box$x2\n [1] 0.4420762 0.1973876        NA        NA 0.6381851        NA 0.8437137\n [8]        NA 0.9739192        NA        NA\n\n$split.box$y2\n [1] 0.8654237 0.6654162        NA        NA 0.6654162        NA 0.4654086\n [8]        NA 0.2654010        NA        NA\n```\n:::\n:::\n\n\n### Confusion matrix\n\n\n::: {.cell}\n\n```{.r .cell-code}\naugment(fitted_wf) %>%\n  conf_mat(truth = anomaly, estimate = .pred_class)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          Truth\nPrediction No Yes\n       No  10   0\n       Yes 14   4\n```\n:::\n:::\n\n\n### Model performance metrics\n\n\n::: {.cell}\n\n```{.r .cell-code}\naugment(fitted_wf) %>%\n  metrics(truth = anomaly, estimate = .pred_class, .pred_Yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  .metric     .estimator .estimate\n  <chr>       <chr>          <dbl>\n1 accuracy    binary         0.5  \n2 kap         binary         0.169\n3 mn_log_loss binary         1.15 \n4 roc_auc     binary         0.271\n```\n:::\n:::\n\n\n### Variable importance plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfitted_wf %>% \n  extract_fit_engine() %>% \n  vip()\n```\n\n::: {.cell-output-display}\n![](dengue_weather_lag_class_v2_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n## Session info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] grid      parallel  stats     graphics  grDevices utils     datasets \n[8] methods   base     \n\nother attached packages:\n [1] ROSE_0.0-4         partykit_1.2-20    mvtnorm_1.2-4      libcoin_1.0-10    \n [5] rlang_1.1.3        doParallel_1.0.17  iterators_1.0.14   foreach_1.5.2     \n [9] vip_0.4.1          rpart.plot_3.1.1   rpart_4.1.23       timetk_2.9.0      \n[13] arrow_14.0.0.2     themis_1.0.2       bonsai_0.2.1       finetune_1.1.0    \n[17] DT_0.31            hotspots_1.0.3     ineq_0.2-13        lattice_0.22-5    \n[21] yardstick_1.3.0    workflowsets_1.0.1 workflows_1.1.3    tune_1.1.2        \n[25] rsample_1.2.0      recipes_1.0.9      parsnip_1.1.1      modeldata_1.3.0   \n[29] infer_1.0.5        dials_1.2.0        scales_1.3.0       broom_1.0.5       \n[33] tidymodels_1.1.1   lubridate_1.9.3    forcats_1.0.0      stringr_1.5.1     \n[37] dplyr_1.1.4        purrr_1.0.2        readr_2.1.5        tidyr_1.3.0       \n[41] tibble_3.2.1       ggplot2_3.4.4      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n [1] magrittr_2.0.3      furrr_0.3.1         compiler_4.3.2     \n [4] vctrs_0.6.5         lhs_1.1.6           pkgconfig_2.0.3    \n [7] fastmap_1.1.1       ellipsis_0.3.2      backports_1.4.1    \n[10] inum_1.0-5          labeling_0.4.3      utf8_1.2.4         \n[13] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n[16] nloptr_2.0.3        bit_4.0.5           xfun_0.41          \n[19] cachem_1.0.8        jsonlite_1.8.8      prettyunits_1.2.0  \n[22] R6_2.5.1            bslib_0.6.1         stringi_1.8.3      \n[25] boot_1.3-28         parallelly_1.36.0   jquerylib_0.1.4    \n[28] Rcpp_1.0.12         assertthat_0.2.1    knitr_1.45         \n[31] future.apply_1.11.1 zoo_1.8-12          Matrix_1.6-3       \n[34] splines_4.3.2       nnet_7.3-19         timechange_0.3.0   \n[37] tidyselect_1.2.0    rstudioapi_0.15.0   yaml_2.3.8         \n[40] timeDate_4032.109   codetools_0.2-19    listenv_0.9.0      \n[43] withr_3.0.0         evaluate_0.23       future_1.33.1      \n[46] survival_3.5-7      xts_0.13.2          pillar_1.9.0       \n[49] generics_0.1.3      hms_1.1.3           munsell_0.5.0      \n[52] minqa_1.2.6         globals_0.16.2      class_7.3-22       \n[55] glue_1.7.0          tools_4.3.2         data.table_1.14.10 \n[58] lme4_1.1-35.1       gower_1.0.1         crosstalk_1.2.1    \n[61] ipred_0.9-14        colorspace_2.1-0    nlme_3.1-163       \n[64] Formula_1.2-5       cli_3.6.2           DiceDesign_1.10    \n[67] fansi_1.0.6         lava_1.7.3          gtable_0.3.4       \n[70] GPfit_1.0-8         sass_0.4.8          digest_0.6.34      \n[73] farver_2.1.1        htmlwidgets_1.6.4   htmltools_0.5.7    \n[76] lifecycle_1.0.4     hardhat_1.3.0       bit64_4.0.5        \n[79] MASS_7.3-60        \n```\n:::\n:::\n",
    "supporting": [
      "dengue_weather_lag_class_v2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding-0.31/datatables.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
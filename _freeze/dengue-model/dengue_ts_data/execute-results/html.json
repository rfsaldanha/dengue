{
  "hash": "fd0a4a9452c4a65821ff3974bde8ec8a",
  "result": {
    "markdown": "---\ntitle: \"Data preparing\"\nauthor: \"Raphael Saldanha\"\ndate: last-modified\n---\n\n\n## Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(brpop)\nlibrary(tidymodels)\nlibrary(timetk)\n```\n:::\n\n\n## Data\n\n### Dengue\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue <- read_parquet(\"../dengue-data/parquet_aggregated/dengue_md.parquet\") %>%\n  group_by(mun) %>%\n  summarise_by_time(.date_var = date, .by = \"month\", freq = sum(freq, na.rm = TRUE)) %>%\n  ungroup() %>%\n  rename(cases = freq)\n```\n:::\n\n\n### Population\n\n\n::: {.cell}\n\n```{.r .cell-code}\npop <- mun_pop_totals() %>%\n  filter(year %in% seq(year(min(dengue$date)), year(max(dengue$date)))) %>%\n  mutate(mun = as.character(mun))\n```\n:::\n\n\n### Precipitation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprec <- open_dataset(sources = \"../weather-data/parquet/brdwgd/pr.parquet\") %>%\n  filter(name == \"pr_sum\") %>%\n  select(date, value) %>%\n  collect() %>%\n  filter(date >= min(dengue$date) & date <= max(dengue$date)) %>%\n  summarise_by_time(.date_var = date, .by = \"month\", value = sum(value, na.rm = TRUE)) %>%\n  rename(prec = value)\n```\n:::\n\n\n### Average maximum temperature\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmax <- open_dataset(sources = \"../weather-data/parquet/brdwgd/tmax.parquet\") %>%\n  filter(name == \"Tmax_mean\") %>%\n  select(date, value) %>%\n  collect() %>%\n  filter(date >= min(dengue$date) & date <= max(dengue$date)) %>%\n  summarise_by_time(.date_var = date, .by = \"month\", value = mean(value, na.rm = TRUE)) %>%\n  rename(tmax = value)\n```\n:::\n\n\n### Join data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntdengue <- dengue %>%\n  mutate(dengue_year = year(date)) %>%\n  inner_join(pop, by = c(\"dengue_year\" = \"year\", \"mun\")) %>%\n  select(-dengue_year) %>%\n  inner_join(prec, by = \"date\") %>%\n  inner_join(tmax, by = \"date\")\n\nrm(dengue, prec, tmax)\n```\n:::\n\n\n### Cleaning and basic features\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# List municipalities with moren than 100k inhab\nmun_vec <- pop %>%\n  filter(year == max(year)) %>%\n  filter(pop >= 100000) %>%\n  pull(mun)\n\nrm(pop)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntdengue <- tdengue %>%\n  # Remove municipalilities with zero population\n  filter(pop != 0) %>%\n  # Keep only municipalities in the list\n   filter(mun %in% mun_vec) %>%\n  # Compute dengue rate per population\n  mutate(cases = cases/pop*100000) %>%\n  # Remove population\n  select(-pop) %>%\n  # Round values\nmutate(across(c(cases, prec, tmax), ~ round(.x, digits = 2))) %>%\n  # Pad months \n  group_by(mun) %>%\n  pad_by_time(date, .by = \"month\", .pad_value = 0, .start_date = min(tdengue$date), .end_date = max(tdengue$date)) %>%\n  ungroup()\n```\n:::\n\n\nMunicipalities remaining at the dataset: 326\n\n### Standardize measures\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# tdengue <- tdengue %>%\n#   group_by(mun) %>%\n#   mutate(across(c(cases, prec, tmax), ~ standardize_vec(.x, silent = TRUE))) %>%\n#   ungroup()\n```\n:::\n\n\n### Lag and rolling lag variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntdengue <- tdengue %>%\n  group_by(mun) %>%\n  tk_augment_lags(.value = c(cases, prec, tmax), .lags = 1:12) %>%\n  # tk_augment_slidify(\n  #   .value = contains(\"_lag\"), \n  #   .period = c(2, 3, 4, 6, 8, 12), \n  #   .f = ~ mean(.x, na.rm = TRUE), \n  #   .partial = TRUE,\n  #   .align   = \"center\"\n  # ) %>%\n  ungroup()\n```\n:::\n\n\n## Overview\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(tdengue)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 37,490\nColumns: 41\n$ mun         <chr> \"110002\", \"110002\", \"110002\", \"110002\", \"110002\", \"110002\"…\n$ date        <date> 2011-01-01, 2011-02-01, 2011-03-01, 2011-04-01, 2011-05-0…\n$ cases       <dbl> 8.50, 7.44, 6.37, 2.12, 3.19, 0.00, 0.00, 0.00, 1.06, 0.00…\n$ prec        <dbl> 29442223, 27648413, 30775654, 22400880, 13694424, 8046289,…\n$ tmax        <dbl> 30.52, 30.57, 29.35, 28.96, 26.87, 26.17, 26.73, 28.43, 29…\n$ cases_lag1  <dbl> NA, 8.50, 7.44, 6.37, 2.12, 3.19, 0.00, 0.00, 0.00, 1.06, …\n$ prec_lag1   <dbl> NA, 29442223, 27648413, 30775654, 22400880, 13694424, 8046…\n$ tmax_lag1   <dbl> NA, 30.52, 30.57, 29.35, 28.96, 26.87, 26.17, 26.73, 28.43…\n$ cases_lag2  <dbl> NA, NA, 8.50, 7.44, 6.37, 2.12, 3.19, 0.00, 0.00, 0.00, 1.…\n$ prec_lag2   <dbl> NA, NA, 29442223, 27648413, 30775654, 22400880, 13694424, …\n$ tmax_lag2   <dbl> NA, NA, 30.52, 30.57, 29.35, 28.96, 26.87, 26.17, 26.73, 2…\n$ cases_lag3  <dbl> NA, NA, NA, 8.50, 7.44, 6.37, 2.12, 3.19, 0.00, 0.00, 0.00…\n$ prec_lag3   <dbl> NA, NA, NA, 29442223, 27648413, 30775654, 22400880, 136944…\n$ tmax_lag3   <dbl> NA, NA, NA, 30.52, 30.57, 29.35, 28.96, 26.87, 26.17, 26.7…\n$ cases_lag4  <dbl> NA, NA, NA, NA, 8.50, 7.44, 6.37, 2.12, 3.19, 0.00, 0.00, …\n$ prec_lag4   <dbl> NA, NA, NA, NA, 29442223, 27648413, 30775654, 22400880, 13…\n$ tmax_lag4   <dbl> NA, NA, NA, NA, 30.52, 30.57, 29.35, 28.96, 26.87, 26.17, …\n$ cases_lag5  <dbl> NA, NA, NA, NA, NA, 8.50, 7.44, 6.37, 2.12, 3.19, 0.00, 0.…\n$ prec_lag5   <dbl> NA, NA, NA, NA, NA, 29442223, 27648413, 30775654, 22400880…\n$ tmax_lag5   <dbl> NA, NA, NA, NA, NA, 30.52, 30.57, 29.35, 28.96, 26.87, 26.…\n$ cases_lag6  <dbl> NA, NA, NA, NA, NA, NA, 8.50, 7.44, 6.37, 2.12, 3.19, 0.00…\n$ prec_lag6   <dbl> NA, NA, NA, NA, NA, NA, 29442223, 27648413, 30775654, 2240…\n$ tmax_lag6   <dbl> NA, NA, NA, NA, NA, NA, 30.52, 30.57, 29.35, 28.96, 26.87,…\n$ cases_lag7  <dbl> NA, NA, NA, NA, NA, NA, NA, 8.50, 7.44, 6.37, 2.12, 3.19, …\n$ prec_lag7   <dbl> NA, NA, NA, NA, NA, NA, NA, 29442223, 27648413, 30775654, …\n$ tmax_lag7   <dbl> NA, NA, NA, NA, NA, NA, NA, 30.52, 30.57, 29.35, 28.96, 26…\n$ cases_lag8  <dbl> NA, NA, NA, NA, NA, NA, NA, NA, 8.50, 7.44, 6.37, 2.12, 3.…\n$ prec_lag8   <dbl> NA, NA, NA, NA, NA, NA, NA, NA, 29442223, 27648413, 307756…\n$ tmax_lag8   <dbl> NA, NA, NA, NA, NA, NA, NA, NA, 30.52, 30.57, 29.35, 28.96…\n$ cases_lag9  <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, 8.50, 7.44, 6.37, 2.12…\n$ prec_lag9   <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, 29442223, 27648413, 30…\n$ tmax_lag9   <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, 30.52, 30.57, 29.35, 2…\n$ cases_lag10 <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 8.50, 7.44, 6.37, …\n$ prec_lag10  <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 29442223, 27648413…\n$ tmax_lag10  <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 30.52, 30.57, 29.3…\n$ cases_lag11 <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 8.50, 7.44, 6.…\n$ prec_lag11  <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 29442223, 2764…\n$ tmax_lag11  <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 30.52, 30.57, …\n$ cases_lag12 <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 8.50, 7.44…\n$ prec_lag12  <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 29442223, …\n$ tmax_lag12  <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 30.52, 30.…\n```\n:::\n:::\n\n\n## Save result\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_parquet(x = tdengue, sink = \"tdengue.parquet\")\n```\n:::\n\n\n## Session info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.1.2 (2021-11-01)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0\nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] timetk_2.8.3       yardstick_1.2.0    workflowsets_1.0.1 workflows_1.1.3   \n [5] tune_1.1.1         rsample_1.1.1      recipes_1.0.6      parsnip_1.1.0     \n [9] modeldata_1.1.0    infer_1.0.4        dials_1.2.0        scales_1.2.1      \n[13] broom_1.0.5        tidymodels_1.1.0   brpop_0.3.0        arrow_12.0.1      \n[17] lubridate_1.9.2    forcats_1.0.0      stringr_1.5.0      dplyr_1.1.2       \n[21] purrr_1.0.1        readr_2.1.4        tidyr_1.3.0        tibble_3.2.1      \n[25] ggplot2_3.4.2      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n [1] xts_0.13.1          bit64_4.0.5         DiceDesign_1.9     \n [4] padr_0.6.2          tools_4.1.2         backports_1.4.1    \n [7] utf8_1.2.3          R6_2.5.1            rpart_4.1.16       \n[10] colorspace_2.1-0    nnet_7.3-17         withr_2.5.0        \n[13] tidyselect_1.2.0    bit_4.0.5           compiler_4.1.2     \n[16] cli_3.6.1           digest_0.6.32       rmarkdown_2.23     \n[19] pkgconfig_2.0.3     htmltools_0.5.5     parallelly_1.36.0  \n[22] lhs_1.1.6           fastmap_1.1.1       htmlwidgets_1.6.2  \n[25] rlang_1.1.1         rstudioapi_0.14     generics_0.1.3     \n[28] zoo_1.8-12          jsonlite_1.8.7      magrittr_2.0.3     \n[31] Matrix_1.5-4.1      Rcpp_1.0.10         munsell_0.5.0      \n[34] fansi_1.0.4         GPfit_1.0-8         lifecycle_1.0.3    \n[37] furrr_0.3.1         stringi_1.7.12      yaml_2.3.7         \n[40] MASS_7.3-55         grid_4.1.2          parallel_4.1.2     \n[43] listenv_0.9.0       lattice_0.20-45     splines_4.1.2      \n[46] hms_1.1.3           anytime_0.3.9       knitr_1.43         \n[49] pillar_1.9.0        future.apply_1.11.0 codetools_0.2-18   \n[52] glue_1.6.2          evaluate_0.21       data.table_1.14.8  \n[55] vctrs_0.6.3         tzdb_0.4.0          foreach_1.5.2      \n[58] gtable_0.3.3        future_1.33.0       assertthat_0.2.1   \n[61] xfun_0.39           gower_1.0.1         prodlim_2023.03.31 \n[64] class_7.3-20        survival_3.2-13     timeDate_4022.108  \n[67] iterators_1.0.14    hardhat_1.3.0       lava_1.7.2.1       \n[70] timechange_0.2.0    globals_0.16.2      ipred_0.9-14       \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "b46fe2f4ee6e9a2c102dda981e59d9bc",
  "result": {
    "markdown": "---\ntitle: \"Dengue case classification\"\nsubtitle: \"by symptoms and clinical condition\"\nauthor: Raphael Saldanha\ndate: last-modified\n---\n\n\nThe objective of this notebook is to predict a dengue suspected case based on its symptoms, clinical conditions and other patient related variables.\n\nThis trained model may be used to reclassify suspected dengue cases with inconclusive diagnosis.\n\n## Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(knitr)\nlibrary(lubridate)\nlibrary(tidymodels)\nlibrary(finetune)\nlibrary(bonsai)\nlibrary(tictoc)\nlibrary(vip)\n```\n:::\n\n\n## Data\n\n-   Data prior to 2016 does not have patient symptoms and clinical conditions.\n\n-   Cases classified as inconclusive are discarded for model training.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data sources\nfiles_list <- c(\n  \"../dengue-data/parquets/dengue_2016.parquet\",\n  \"../dengue-data/parquets/dengue_2017.parquet\",\n  \"../dengue-data/parquets/dengue_2018.parquet\",\n  \"../dengue-data/parquets/dengue_2019.parquet\",\n  \"../dengue-data/parquets/dengue_2020.parquet\",\n  \"../dengue-data/parquets/dengue_2021.parquet\"\n)\n\n# Independent variables\nx_vars <- c(\"FEBRE\", \"MIALGIA\", \"CEFALEIA\", \n            \"EXANTEMA\", \"VOMITO\", \"NAUSEA\", \n            \"DOR_COSTAS\", \"CONJUNTVIT\", \n            \"ARTRITE\", \"ARTRALGIA\", \"PETEQUIA_N\", \n            \"LEUCOPENIA\", \"LACO\", \"DOR_RETRO\", \n            \"DIABETES\", \"HEMATOLOG\", \"HEPATOPAT\", \n            \"HEPATOPAT\", \"RENAL\", \"HIPERTENSA\",\n            \"ACIDO_PEPT\", \"AUTO_IMUNE\")\n\n# Prepare data\ndengue <- arrow::open_dataset(sources = files_list) %>%\n  # Select variables\n  select(all_of(c(\"CLASSI_FIN\", \"COMUNINF\", \"IDADEanos\", \"DT_SIN_PRI\", x_vars))) %>%\n  # Filter out \"Inconclusivo\" cases\n  filter(CLASSI_FIN != \"Inconclusivo\") %>%\n  # Collect data from parquet files\n  collect() %>%\n  # Prepare variables\n  mutate(CLASSI_FIN = case_when(\n    CLASSI_FIN != \"Descartado\" ~ TRUE,\n    .default = FALSE\n  )) %>%\n  mutate(CLASSI_FIN = as.factor(CLASSI_FIN)) %>%\n  mutate(DT_SIN_PRI = as_date(DT_SIN_PRI)) %>%\n  mutate(COMUNINF = as.factor(COMUNINF)) %>%\n  mutate_at(.vars = x_vars, .funs = ~ . == \"Sim\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Smaller dataset for tests\ndengue <- sample_n(dengue, 500000)\n```\n:::\n\n\n## Modeling\n\n### Train and test dataset split\n\n-   Proportion between training and test: 3/4\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)\n\ndengue_split <- dengue %>%\n  initial_split(prop = 3/4, strata = CLASSI_FIN)\n\ndengue_train <- training(dengue_split)\ndengue_test <- testing(dengue_split)\n\nset.seed(234)\ndengue_folds <- vfold_cv(dengue_train, strata = CLASSI_FIN)\n```\n:::\n\n\n### Recipes\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue_rec_1 <- \n  recipe(CLASSI_FIN ~ . , data = dengue_train) %>%\n  step_rm(COMUNINF) %>%\n  step_rm(DT_SIN_PRI) %>%\n  #step_date(DT_SIN_PRI, features = c(\"month\", \"week\", \"semester\", \"quarter\"), keep_original_cols = FALSE) %>%\n  step_integer(all_predictors())\n```\n:::\n\n\n### Specifications\n\n#### XGB\n\n\n::: {.cell}\n\n```{.r .cell-code}\nxgb_spec <-\n  boost_tree(\n    trees = tune(),\n    min_n = tune(),\n    mtry = tune()\n  ) %>%\n  set_engine(\"xgboost\") %>%\n  set_mode(\"classification\")\n```\n:::\n\n\n#### Decision tree\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncart_spec <-\n  decision_tree(\n    cost_complexity = tune(), \n    min_n = tune()\n  ) %>% \n  set_engine(\"rpart\") %>% \n  set_mode(\"classification\")\n```\n:::\n\n\n### Workflows\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_workflows <- \n  workflow_set(\n    preproc = list(recipe_1 = dengue_rec_1),\n    models = list(xgb = xgb_spec, cart = cart_spec)\n  )\n```\n:::\n\n\n### Tuning\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndoParallel::registerDoParallel()\n\nrace_ctrl <- control_race(parallel_over = \"everything\")\n\ntic()\nrace_results <- \n  all_workflows %>%\n  workflow_map(\n    \"tune_race_anova\",\n    seed = 345,\n    resamples = dengue_folds,\n    grid = 10,\n    control = race_ctrl\n  )\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ni Creating pre-processing data to finalize unknown parameter: mtry\n```\n:::\n\n```{.r .cell-code}\ntoc()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n1867.215 sec elapsed\n```\n:::\n:::\n\n\n#### Race metrics\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_rank_results <- rank_results(race_results, rank_metric = \"roc_auc\")\n\ntrain_rank_results\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 9\n  wflow_id      .config     .metric  mean std_err     n preprocessor model  rank\n  <chr>         <chr>       <chr>   <dbl>   <dbl> <int> <chr>        <chr> <int>\n1 recipe_1_xgb  Preprocess… accura… 0.621 7.98e-4    10 recipe       boos…     1\n2 recipe_1_xgb  Preprocess… roc_auc 0.634 8.22e-4    10 recipe       boos…     1\n3 recipe_1_cart Preprocess… accura… 0.615 5.03e-4    10 recipe       deci…     2\n4 recipe_1_cart Preprocess… roc_auc 0.624 7.14e-4    10 recipe       deci…     2\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nautoplot(race_results, metric = \"roc_auc\")\n```\n\n::: {.cell-output-display}\n![](dengue_classification_symptoms_conditions_multi_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n### Last fit\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselection_train <- train_rank_results %>%\n  arrange(-mean) %>%\n  pull(wflow_id) %>%\n  first()\n\nselection_train\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"recipe_1_xgb\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbest_results <- race_results %>%\n  extract_workflow_set_result(selection_train) %>%\n  select_best(\"accuracy\")\n\nbest_results\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 4\n   mtry trees min_n .config              \n  <int> <int> <int> <chr>                \n1     3   174     8 Preprocessor1_Model02\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlast_fit <- race_results %>%\n  extract_workflow(selection_train) %>%\n  finalize_workflow(best_results) %>%\n  last_fit(dengue_split)\n```\n:::\n\n\n### Evaluate on test\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncollect_metrics(last_fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 4\n  .metric  .estimator .estimate .config             \n  <chr>    <chr>          <dbl> <chr>               \n1 accuracy binary         0.621 Preprocessor1_Model1\n2 roc_auc  binary         0.635 Preprocessor1_Model1\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncollect_predictions(last_fit) %>%\n    conf_mat(CLASSI_FIN, .pred_class)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          Truth\nPrediction FALSE  TRUE\n     FALSE 16535 10711\n     TRUE  36701 61054\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlast_fit %>%\n  extract_fit_engine() %>%\n  vip()\n```\n\n::: {.cell-output-display}\n![](dengue_classification_symptoms_conditions_multi_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n## Session info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.1.2 (2021-11-01)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0\nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] rpart_4.1.16       rlang_1.1.1        xgboost_1.7.5.1    vip_0.3.2         \n [5] tictoc_1.2         bonsai_0.2.1       finetune_1.1.0     yardstick_1.2.0   \n [9] workflowsets_1.0.1 workflows_1.1.3    tune_1.1.1         rsample_1.1.1     \n[13] recipes_1.0.6      parsnip_1.1.0      modeldata_1.1.0    infer_1.0.4       \n[17] dials_1.2.0        scales_1.2.1       broom_1.0.5        tidymodels_1.1.0  \n[21] knitr_1.43         arrow_12.0.1       lubridate_1.9.2    forcats_1.0.0     \n[25] stringr_1.5.0      dplyr_1.1.2        purrr_1.0.1        readr_2.1.4       \n[29] tidyr_1.3.0        tibble_3.2.1       ggplot2_3.4.2      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n [1] nlme_3.1-155        bit64_4.0.5         doParallel_1.0.17  \n [4] DiceDesign_1.9      tools_4.1.2         backports_1.4.1    \n [7] utf8_1.2.3          R6_2.5.1            colorspace_2.1-0   \n[10] nnet_7.3-17         withr_2.5.0         gridExtra_2.3      \n[13] tidyselect_1.2.0    bit_4.0.5           compiler_4.1.2     \n[16] cli_3.6.1           labeling_0.4.2      digest_0.6.33      \n[19] minqa_1.2.5         rmarkdown_2.23      pkgconfig_2.0.3    \n[22] htmltools_0.5.5     lme4_1.1-34         parallelly_1.36.0  \n[25] lhs_1.1.6           fastmap_1.1.1       htmlwidgets_1.6.2  \n[28] rstudioapi_0.15.0   farver_2.1.1        generics_0.1.3     \n[31] jsonlite_1.8.7      magrittr_2.0.3      Matrix_1.6-0       \n[34] Rcpp_1.0.11         munsell_0.5.0       fansi_1.0.4        \n[37] GPfit_1.0-8         lifecycle_1.0.3     furrr_0.3.1        \n[40] stringi_1.7.12      yaml_2.3.7          MASS_7.3-55        \n[43] grid_4.1.2          parallel_4.1.2      listenv_0.9.0      \n[46] lattice_0.20-45     splines_4.1.2       hms_1.1.3          \n[49] pillar_1.9.0        boot_1.3-28         future.apply_1.11.0\n[52] codetools_0.2-18    glue_1.6.2          evaluate_0.21      \n[55] data.table_1.14.8   nloptr_2.0.3        vctrs_0.6.3        \n[58] tzdb_0.4.0          foreach_1.5.2       gtable_0.3.3       \n[61] future_1.33.0       assertthat_0.2.1    xfun_0.39          \n[64] gower_1.0.1         prodlim_2023.03.31  class_7.3-20       \n[67] survival_3.2-13     timeDate_4022.108   iterators_1.0.14   \n[70] hardhat_1.3.0       lava_1.7.2.1        timechange_0.2.0   \n[73] globals_0.16.2      ellipsis_0.3.2      ipred_0.9-14       \n```\n:::\n:::\n",
    "supporting": [
      "dengue_classification_symptoms_conditions_multi_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
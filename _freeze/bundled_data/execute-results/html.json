{
  "hash": "e2fbd127ee882ad0676c71779214a0ad",
  "result": {
    "markdown": "---\ntitle: \"Bundled data\"\nauthor: \"Raphael Saldanha\"\ndate: last-modified\n---\n\n\nThis notebook prepares a data-set with dengue cases and covariates of interest per municipality.\n\n## Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(brpop)\nlibrary(tidymodels)\nlibrary(timetk)\nsource(\"functions.R\")\n```\n:::\n\n\n## Data\n\n### Dengue\n\nLoad dengue cases data and aggregate per week.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndengue <- read_parquet(data_dir(\"dengue_data/parquet_aggregated/dengue_md.parquet\")) %>%\n  group_by(mun) %>%\n  summarise_by_time(.date_var = date, .by = \"week\", freq = sum(freq, na.rm = TRUE)) %>%\n  ungroup() %>%\n  rename(cases = freq)\n```\n:::\n\n\n### Population\n\nLoad municipality population data for the years present at the dengue cases data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npop <- mun_pop_totals() %>%\n  filter(year %in% seq(year(min(dengue$date)), year(max(dengue$date)))) %>%\n  mutate(mun = as.character(mun))\n```\n:::\n\n\n### Weather variables\n\nLoad weather variables and group per week.\n\n#### Precipitation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprec <- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/pr.parquet\")) %>%\n  filter(name == \"pr_sum\") %>%\n  select(date, value) %>%\n  collect() %>%\n  filter(date >= min(dengue$date) & date <= max(dengue$date)) %>%\n  summarise_by_time(.date_var = date, .by = \"week\", value = sum(value, na.rm = TRUE)) %>%\n  rename(prec = value)\n```\n:::\n\n\n::: callout-note\nAs precipitation is a volume, the `sum` function is used.\n:::\n\n#### Average maximum temperature\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmax <- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/tmax.parquet\")) %>%\n  filter(name == \"Tmax_mean\") %>%\n  select(date, value) %>%\n  collect() %>%\n  filter(date >= min(dengue$date) & date <= max(dengue$date)) %>%\n  summarise_by_time(.date_var = date, .by = \"week\", value = mean(value, na.rm = TRUE)) %>%\n  rename(tmax = value)\n```\n:::\n\n\n#### Average minimum temperature\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntmin <- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/tmin.parquet\")) %>%\n  filter(name == \"Tmin_mean\") %>%\n  select(date, value) %>%\n  collect() %>%\n  filter(date >= min(dengue$date) & date <= max(dengue$date)) %>%\n  summarise_by_time(.date_var = date, .by = \"week\", value = mean(value, na.rm = TRUE)) %>%\n  rename(tmin = value)\n```\n:::\n\n\n### Join data\n\nJoin dengue cases, population and weather variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(dengue)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2400687       3\n```\n:::\n\n```{.r .cell-code}\ndim(pop)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 67152     3\n```\n:::\n\n```{.r .cell-code}\ndim(prec)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 501   2\n```\n:::\n\n```{.r .cell-code}\ndim(tmax)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 501   2\n```\n:::\n\n```{.r .cell-code}\ndim(tmin)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 501   2\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntdengue <- dengue %>%\n  mutate(dengue_year = year(date)) %>%\n  inner_join(pop, by = c(\"dengue_year\" = \"year\", \"mun\")) %>%\n  select(-dengue_year) %>%\n  inner_join(prec, by = \"date\") %>%\n  inner_join(tmax, by = \"date\") %>%\n  inner_join(tmin, by = \"date\")\n\nrm(dengue, prec, tmax, tmin)\n```\n:::\n\n\n::: callout-note\nThe population estimate is constant over each year.\n:::\n\n### Cleaning and basic features\n\nDue the sparsity of dengue cases, only municipalities with more than 100,000 inhabitants are filtered.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# List municipalities with moren than 10k inhab\nmun_vec <- pop %>%\n  filter(year == max(year)) %>%\n  filter(pop >= 100000) %>%\n  pull(mun)\n\nrm(pop)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntdengue <- tdengue %>%\n  # Remove municipalilities with zero population\n  filter(pop != 0) %>%\n  # Keep only municipalities in the list\n   filter(mun %in% mun_vec) %>%\n  # Compute dengue rate per population\n  # mutate(cases = cases/pop*100000) %>%\n  # Remove population\n  select(-pop) %>%\n  # Round values\n  mutate(across(c(cases, prec, tmax, tmin), ~ round(.x, digits = 2))) %>%\n  # Pad weeks \n  group_by(mun) %>%\n  pad_by_time(date, .by = \"week\", .pad_value = 0, .start_date = min(tdengue$date), .end_date = max(tdengue$date)) %>%\n  ungroup()\n```\n:::\n\n\nMunicipalities remaining at the dataset: 326\n\n::: callout-warning\nThe computation of dengue incidence (cases per population) is commented to keep the raw cases count.\n:::\n\n### Standardize measures\n\nCenter around mean with a unit standard deviation.\n\n$$\nx' = \\frac{x - \\mu}{\\sigma} \n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntdengue <- tdengue %>%\n  mutate(cases_raw = cases) %>%\n  group_by(mun) %>%\n  arrange(date) %>%\n  mutate(cases_cum_raw = cumsum(cases_raw)) %>%\n  mutate(cases_cum = cases_cum_raw) %>%\n  mutate(across(c(cases, cases_cum, prec, tmax, tmin), ~ standardize_vec(.x, silent = TRUE))) %>%\n  ungroup()\n```\n:::\n\n\n### Lag and rolling lag variables\n\nCreates lagged variables from standardized dengue cases and weather variables, from 1 to 6 weeks.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntdengue <- tdengue %>%\n  group_by(mun) %>%\n  tk_augment_lags(.value = c(cases, prec, tmax, tmin), .lags = 1:6) %>%\n  # tk_augment_slidify(\n  #   .value = contains(\"_lag\"), \n  #   .period = c(2, 4, 6), \n  #   .f = ~ mean(.x, na.rm = TRUE), \n  #   .partial = TRUE,\n  #   .align   = \"center\"\n  # ) %>%\n  ungroup()\n```\n:::\n\n\n::: callout-warning\nRolling window calculation procedure is commented out.\n:::\n\n## Overview\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(tdengue)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 163,326\nColumns: 33\n$ mun           <chr> \"110002\", \"110002\", \"110002\", \"110002\", \"110002\", \"11000…\n$ date          <date> 2010-12-26, 2011-01-02, 2011-01-09, 2011-01-16, 2011-01…\n$ cases         <dbl> -0.51044592, 0.66804904, 0.66804904, 0.07880156, 0.66804…\n$ prec          <dbl> -1.949441733, 1.595820245, 1.609000327, 1.566288162, 1.1…\n$ tmax          <dbl> -13.18226058, 0.28500953, 0.37007540, 0.49095848, 0.6969…\n$ tmin          <dbl> -8.3409156, 0.9663965, 1.0293750, 0.9933873, 0.9618981, …\n$ cases_raw     <dbl> 0, 2, 2, 1, 2, 5, 0, 1, 2, 1, 0, 2, 1, 2, 2, 0, 0, 0, 1,…\n$ cases_cum_raw <dbl> 0, 2, 4, 5, 7, 12, 12, 13, 15, 16, 16, 18, 19, 21, 23, 2…\n$ cases_cum     <dbl> -1.463959, -1.445297, -1.426635, -1.417304, -1.398642, -…\n$ cases_lag1    <dbl> NA, -0.51044592, 0.66804904, 0.66804904, 0.07880156, 0.6…\n$ prec_lag1     <dbl> NA, -1.949441733, 1.595820245, 1.609000327, 1.566288162,…\n$ tmax_lag1     <dbl> NA, -13.18226058, 0.28500953, 0.37007540, 0.49095848, 0.…\n$ tmin_lag1     <dbl> NA, -8.3409156, 0.9663965, 1.0293750, 0.9933873, 0.96189…\n$ cases_lag2    <dbl> NA, NA, -0.51044592, 0.66804904, 0.66804904, 0.07880156,…\n$ prec_lag2     <dbl> NA, NA, -1.949441733, 1.595820245, 1.609000327, 1.566288…\n$ tmax_lag2     <dbl> NA, NA, -13.18226058, 0.28500953, 0.37007540, 0.49095848…\n$ tmin_lag2     <dbl> NA, NA, -8.3409156, 0.9663965, 1.0293750, 0.9933873, 0.9…\n$ cases_lag3    <dbl> NA, NA, NA, -0.51044592, 0.66804904, 0.66804904, 0.07880…\n$ prec_lag3     <dbl> NA, NA, NA, -1.949441733, 1.595820245, 1.609000327, 1.56…\n$ tmax_lag3     <dbl> NA, NA, NA, -13.18226058, 0.28500953, 0.37007540, 0.4909…\n$ tmin_lag3     <dbl> NA, NA, NA, -8.3409156, 0.9663965, 1.0293750, 0.9933873,…\n$ cases_lag4    <dbl> NA, NA, NA, NA, -0.51044592, 0.66804904, 0.66804904, 0.0…\n$ prec_lag4     <dbl> NA, NA, NA, NA, -1.949441733, 1.595820245, 1.609000327, …\n$ tmax_lag4     <dbl> NA, NA, NA, NA, -13.18226058, 0.28500953, 0.37007540, 0.…\n$ tmin_lag4     <dbl> NA, NA, NA, NA, -8.3409156, 0.9663965, 1.0293750, 0.9933…\n$ cases_lag5    <dbl> NA, NA, NA, NA, NA, -0.51044592, 0.66804904, 0.66804904,…\n$ prec_lag5     <dbl> NA, NA, NA, NA, NA, -1.949441733, 1.595820245, 1.6090003…\n$ tmax_lag5     <dbl> NA, NA, NA, NA, NA, -13.18226058, 0.28500953, 0.37007540…\n$ tmin_lag5     <dbl> NA, NA, NA, NA, NA, -8.3409156, 0.9663965, 1.0293750, 0.…\n$ cases_lag6    <dbl> NA, NA, NA, NA, NA, NA, -0.51044592, 0.66804904, 0.66804…\n$ prec_lag6     <dbl> NA, NA, NA, NA, NA, NA, -1.9494417, 1.5958202, 1.6090003…\n$ tmax_lag6     <dbl> NA, NA, NA, NA, NA, NA, -13.18226058, 0.28500953, 0.3700…\n$ tmin_lag6     <dbl> NA, NA, NA, NA, NA, NA, -8.3409156, 0.9663965, 1.0293750…\n```\n:::\n:::\n\n\n## Save result\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_parquet(x = tdengue, sink = data_dir(\"bundled_data/tdengue.parquet\"))\n```\n:::\n\n\n## Session info\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: CentOS Linux 7 (Core)\n\nMatrix products: default\nBLAS/LAPACK: /home/raphaelfs/miniconda3/envs/quarto/lib/libopenblasp-r0.3.25.so;  LAPACK version 3.11.0\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=pt_BR.UTF-8        LC_COLLATE=pt_BR.UTF-8    \n [5] LC_MONETARY=pt_BR.UTF-8    LC_MESSAGES=pt_BR.UTF-8   \n [7] LC_PAPER=pt_BR.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=pt_BR.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: America/Sao_Paulo\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] timetk_2.8.2       yardstick_1.2.0    workflowsets_1.0.0 workflows_1.1.3   \n [5] tune_1.1.2         rsample_1.2.0      recipes_1.0.6      parsnip_1.1.0     \n [9] modeldata_1.1.0    infer_1.0.4        dials_1.2.0        scales_1.2.1      \n[13] broom_1.0.4        tidymodels_1.0.0   brpop_0.3.0        arrow_12.0.0      \n[17] lubridate_1.9.2    forcats_1.0.0      stringr_1.5.0      dplyr_1.1.2       \n[21] purrr_1.0.1        readr_2.1.4        tidyr_1.3.0        tibble_3.2.1      \n[25] ggplot2_3.4.2      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.0    timeDate_4022.108   fastmap_1.1.1      \n [4] digest_0.6.31       rpart_4.1.19        timechange_0.2.0   \n [7] lifecycle_1.0.3     survival_3.5-5      magrittr_2.0.3     \n[10] compiler_4.3.2      rlang_1.1.1         tools_4.3.2        \n[13] utf8_1.2.3          yaml_2.3.7          knitr_1.43         \n[16] htmlwidgets_1.6.2   bit_4.0.5           DiceDesign_1.9     \n[19] withr_2.5.0         nnet_7.3-19         grid_4.3.2         \n[22] fansi_1.0.4         xts_0.13.1          colorspace_2.1-0   \n[25] future_1.32.0       iterators_1.0.14    globals_0.16.2     \n[28] MASS_7.3-60         anytime_0.3.9       cli_3.6.1          \n[31] rmarkdown_2.22      generics_0.1.3      rstudioapi_0.14    \n[34] future.apply_1.11.0 tzdb_0.4.0          splines_4.3.2      \n[37] assertthat_0.2.1    parallel_4.3.2      vctrs_0.6.3        \n[40] hardhat_1.3.0       Matrix_1.5-4.1      jsonlite_1.8.5     \n[43] hms_1.1.3           bit64_4.0.5         listenv_0.9.0      \n[46] foreach_1.5.2       gower_1.0.1         glue_1.6.2         \n[49] parallelly_1.36.0   codetools_0.2-19    stringi_1.7.12     \n[52] gtable_0.3.3        munsell_0.5.0       GPfit_1.0-8        \n[55] pillar_1.9.0        furrr_0.3.1         htmltools_0.5.5    \n[58] ipred_0.9-13        lava_1.7.2.1        R6_2.5.1           \n[61] lhs_1.1.6           evaluate_0.21       lattice_0.21-8     \n[64] backports_1.4.1     class_7.3-22        Rcpp_1.0.10        \n[67] prodlim_2019.11.13  padr_0.6.2          xfun_0.39          \n[70] zoo_1.8-12          pkgconfig_2.0.3    \n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
[
  {
    "objectID": "presentations.html",
    "href": "presentations.html",
    "title": "Overview",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n  \n\n\n\n\nSpecialized AI Models for Predicting Dengue Disease\n\n\n[Short version]\n\n\n\n\n\n\n\n\n\nRaphael Saldanha et al.\n\n\n\n\n\n\n  \n\n\n\n\nSpecialized AI Models for Predicting Dengue Disease\n\n\n\n\n\n\n\n\n\n\n\n\nSaldanha, Raphael et al\n\n\n\n\n\n\n  \n\n\n\n\nA trajectory on health data and information\n\n\n\n\n\n\n\n\n\n\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nSubset Modelling: A Domain Partitioning Strategy for Data-efficient Machine-Learning\n\n\nPaper project for SIGMOD2025 conference\n\n\n\n\n\n\n\n\n\nFebruary 6, 2024 | 00:00:00 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_epi_year.html",
    "href": "dengue-cluster/cluster_mun_year_epi_year.html",
    "title": "Epi year time series",
    "section": "",
    "text": "This notebook aims to cluster the Brazilian municipalities by epidemiological yearly dengue cases time-series yearly (starting on September) by its similarities."
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_epi_year.html#packages",
    "href": "dengue-cluster/cluster_mun_year_epi_year.html#packages",
    "title": "Epi year time series",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_epi_year.html#load-data",
    "href": "dengue-cluster/cluster_mun_year_epi_year.html#load-data",
    "title": "Epi year time series",
    "section": "Load data",
    "text": "Load data\nLoad the aggregated data.\n\ndengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases = cases_raw) %&gt;%\n    collect()\n\ndim(dengue)\n\n[1] 340179      3\n\n\n\nPrepare data\nThe chunk bellow executes various steps to prepare the data for clustering.\n\ntdengue &lt;- dengue %&gt;%\n  # Create year variable\n  mutate(year = year(date)) %&gt;%\n  # Create week number\n  mutate(week = epiweek(date)) %&gt;%\n  # Summarise per year and isoweek\n  group_by(mun, year, week) %&gt;%\n  summarise(cases = sum(cases, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;%\n  # Center year on September\n  group_by(mun) %&gt;%\n  mutate(year = case_when(\n    week &lt; 40 ~ year -1,\n    .default = year\n  )) %&gt;%\n  ungroup() %&gt;% \n  # Scale cases\n  group_by(mun, year) %&gt;%\n  arrange(week) %&gt;%\n  mutate(cases = scale(cases)) %&gt;%\n  ungroup() %&gt;%\n  # Isolate municipality and year\n  mutate(mun = paste0(mun, \"_\", year)) %&gt;%\n  select(-year, week) %&gt;%\n  # Arrange data\n  arrange(mun, week) %&gt;%\n  # Prepare time series of municipalities by year\n  mutate(mun = paste0(\"m_\", mun)) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-week) %&gt;%\n  # Use zero value for years withot week 53\n  mutate(across(everything(), ~replace_na(.x, 0))) %&gt;%\n  # Transpose as matrix\n  t() %&gt;%\n  # Convert object\n  tslist()\n\n`summarise()` has grouped output by 'mun', 'year'. You can override using the\n`.groups` argument.\n\n\n\nlength(tdengue)\n\n[1] 6790"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_epi_year.html#clustering",
    "href": "dengue-cluster/cluster_mun_year_epi_year.html#clustering",
    "title": "Epi year time series",
    "section": "Clustering",
    "text": "Clustering\nSequence of k groups to be used.\n\nk_seq &lt;- 3:10\n\n\nSoft-DTW method\n\ntic()\nclust &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sdtw\",\n  seed = 13\n)\ntoc()\n\n225.712 sec elapsed\n\n\n\n\nCluster Validity Indices (CVI)\n\nnames(clust) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  kbl() %&gt;%\n  kable_styling()\n\n\n\n\nk\nSil\nSF\nCH\nDB\nDBstar\nD\nCOP\n\n\n\n\nk_3\n0.4236277\n0\n2999.3735\n1.168189\n1.168282\n-0.0057361\n0.2352750\n\n\nk_6\n0.3480234\n0\n1375.7026\n2.229967\n2.905979\n-0.0049021\n0.2231596\n\n\nk_5\n0.3460606\n0\n2007.4478\n1.560870\n1.705965\n-0.0049145\n0.1980175\n\n\nk_4\n0.3263641\n0\n1926.6526\n1.802736\n1.999546\n-0.0048282\n0.2468473\n\n\nk_10\n0.2904618\n0\n1508.5797\n1.866674\n2.426384\n-0.0066886\n0.1280983\n\n\nk_8\n0.1460479\n0\n974.4659\n2.134098\n3.911820\n-0.0076898\n0.2038406\n\n\nk_7\n0.1020749\n0\n1011.5053\n1.903904\n2.025179\n-0.0066451\n0.2378969\n\n\nk_9\n0.0409210\n0\n894.9294\n4.119276\n6.558124\n-0.0069325\n0.2179810\n\n\n\n\n\n\n\n\n\nCluster with higher Silhouette statistic\n\nsel_clust &lt;- clust[[res_cvi[[1,1]]]]\n\n\nplot(sel_clust)\n\n\n\n\n\nggsave(filename = \"cluster_mun_epiyear.pdf\")\n\nSaving 7 x 5 in image\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\nggsave(filename = \"cluster_mun_epiyear_centr.pdf\")\n\nSaving 7 x 5 in image\n\n\n\n\nCluster sizes\n\ntable(sel_clust@cluster)\n\n\n   1    2    3 \n 621 2123 4046"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_epi_year.html#session-info",
    "href": "dengue-cluster/cluster_mun_year_epi_year.html#session-info",
    "title": "Epi year time series",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] tictoc_1.2       kableExtra_1.3.4 dtwclust_5.5.12  dtw_1.23-1      \n [5] proxy_0.4-27     timetk_2.9.0     arrow_13.0.0.1   lubridate_1.9.3 \n [9] forcats_1.0.0    stringr_1.5.0    dplyr_1.1.3      purrr_1.0.2     \n[13] readr_2.1.4      tidyr_1.3.0      tibble_3.2.1     ggplot2_3.4.4   \n[17] tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rlang_1.1.2         magrittr_2.0.3      clue_0.3-65        \n  [4] furrr_0.3.1         flexclust_1.4-1     compiler_4.3.2     \n  [7] systemfonts_1.0.5   vctrs_0.6.4         reshape2_1.4.4     \n [10] rvest_1.0.3         lhs_1.1.6           tune_1.1.2         \n [13] pkgconfig_2.0.3     fastmap_1.1.1       ellipsis_0.3.2     \n [16] labeling_0.4.3      utf8_1.2.4          promises_1.2.1     \n [19] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n [22] ragg_1.2.6          bit_4.0.5           xfun_0.41          \n [25] modeltools_0.2-23   jsonlite_1.8.7      recipes_1.0.8      \n [28] highr_0.10          later_1.3.1         parallel_4.3.2     \n [31] cluster_2.1.4       R6_2.5.1            stringi_1.7.12     \n [34] rsample_1.2.0       parallelly_1.36.0   rpart_4.1.21       \n [37] Rcpp_1.0.11         assertthat_0.2.1    dials_1.2.0        \n [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.0\n [43] zoo_1.8-12          httpuv_1.6.12       Matrix_1.6-1.1     \n [46] splines_4.3.2       nnet_7.3-19         timechange_0.2.0   \n [49] tidyselect_1.2.0    rstudioapi_0.15.0   yaml_2.3.7         \n [52] timeDate_4022.108   codetools_0.2-19    listenv_0.9.0      \n [55] lattice_0.22-5      plyr_1.8.9          shiny_1.7.5.1      \n [58] withr_2.5.2         evaluate_0.23       future_1.33.0      \n [61] survival_3.5-7      RcppParallel_5.1.7  xml2_1.3.5         \n [64] xts_0.13.1          pillar_1.9.0        foreach_1.5.2      \n [67] stats4_4.3.2        shinyjs_2.1.0       generics_0.1.3     \n [70] hms_1.1.3           munsell_0.5.0       scales_1.2.1       \n [73] xtable_1.8-4        globals_0.16.2      class_7.3-22       \n [76] glue_1.6.2          tools_4.3.2         data.table_1.14.8  \n [79] RSpectra_0.16-1     webshot_0.5.5       gower_1.0.1        \n [82] grid_4.3.2          yardstick_1.2.0     ipred_0.9-14       \n [85] colorspace_2.1-0    cli_3.6.1           DiceDesign_1.9     \n [88] textshaping_0.3.7   workflows_1.1.3     parsnip_1.1.1      \n [91] fansi_1.0.5         viridisLite_0.4.2   svglite_2.1.2      \n [94] lava_1.7.3          gtable_0.3.4        GPfit_1.0-8        \n [97] digest_0.6.33       ggrepel_0.9.4       farver_2.1.1       \n[100] htmlwidgets_1.6.2   htmltools_0.5.7     lifecycle_1.0.4    \n[103] httr_1.4.7          hardhat_1.3.0       mime_0.12          \n[106] bit64_4.0.5         MASS_7.3-60"
  },
  {
    "objectID": "dengue-cluster/cluster_long.html",
    "href": "dengue-cluster/cluster_long.html",
    "title": "Raw cases",
    "section": "",
    "text": "This notebook aims to cluster the Brazilian municipalities considering dengue raw cases time-series similarities."
  },
  {
    "objectID": "dengue-cluster/cluster_long.html#packages",
    "href": "dengue-cluster/cluster_long.html#packages",
    "title": "Raw cases",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_long.html#load-data",
    "href": "dengue-cluster/cluster_long.html#load-data",
    "title": "Raw cases",
    "section": "Load data",
    "text": "Load data\nLoad the bundled data.\n\ntdengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases = cases_raw) %&gt;%\n    collect()\n\ndim(tdengue)\n\n[1] 340179      3\n\n\n\nPrepare data\nThe chunk bellow formats the dataset for tsclust use.\n\ntdengue &lt;- tdengue %&gt;%\n  # Prepare time series\n  arrange(mun) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-date) %&gt;%\n  t() %&gt;%\n  # Convert object\n  tslist()\n\n\nlength(tdengue)\n\n[1] 679"
  },
  {
    "objectID": "dengue-cluster/cluster_long.html#clustering",
    "href": "dengue-cluster/cluster_long.html#clustering",
    "title": "Raw cases",
    "section": "Clustering",
    "text": "Clustering\nSequence of k groups to be used.\n\nk_seq &lt;- 2:10\n\n\nDTW (basic)\n\ntic()\nclust_dtw &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"dtw_basic\",\n  seed = 13\n)\ntoc()\n\n46.292 sec elapsed\n\n\n\nnames(clust_dtw) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_dtw, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.563306808\n0\n243.13362\n2.777906\n2.777906\n4.033050e-03\n0.81493978\n    k_3\n0.500486555\n0\n179.80850\n2.589921\n8.236031\n3.463657e-03\n0.06040454\n    k_5\n0.234604708\n0\n102.69761\n2.868848\n23.661427\n7.946198e-04\n0.05528690\n    k_4\n0.221410311\n0\n122.82411\n2.535349\n24.240538\n7.813649e-04\n0.07362652\n    k_8\n0.047380416\n0\n71.53960\n3.385318\n105.686817\n3.503914e-04\n0.06330307\n    k_7\n0.018931701\n0\n66.01800\n3.523758\n87.921436\n2.131907e-04\n0.06658659\n    k_10\n-0.005982317\n0\n52.35818\n3.393992\n207.433508\n1.469383e-04\n0.03558253\n    k_9\n-0.011726942\n0\n64.19814\n3.436507\n244.767080\n1.527283e-04\n0.02848551\n    k_6\n-0.101115607\n0\n73.21168\n4.166345\n409.352091\n1.633515e-05\n0.06955750\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_dtw[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n187 492 \n\n\n\n\nSoft-DTW\n\ntic()\nclust_sdtw &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sdtw\",\n  seed = 13\n)\ntoc()\n\n231.662 sec elapsed\n\n\n\nnames(clust_sdtw) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_sdtw, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.9747238\n0\n610.6681\n0.7127038\n7.127038e-01\n6.394018e-03\n0.021962268\n    k_3\n0.8785473\n0\n339.7721\n1.3846248\n2.184955e+01\n6.047589e-05\n0.012882348\n    k_4\n0.7831408\n0\n367.3748\n1.0620911\n8.628989e+01\n3.151199e-05\n0.006517102\n    k_5\n0.5616851\n0\n287.9459\n1.6410825\n6.279292e+02\n3.508382e-06\n0.006502140\n    k_6\n0.4127518\n0\n232.3673\n1.8248896\n1.900511e+03\n1.029877e-06\n0.006496556\n    k_9\n0.3492449\n0\n161.4531\n2.1597151\n6.103722e+03\n5.179334e-07\n0.006423601\n    k_8\n0.3130712\n0\n165.0773\n2.5475305\n5.893653e+03\n6.826592e-07\n0.006458184\n    k_7\n0.1779085\n0\n192.9691\n2.0300445\n3.657527e+04\n1.456487e-07\n0.006500423\n    k_10\n0.1726132\n0\n130.6724\n1.9249465\n1.215560e+05\n7.778736e-08\n0.006444721\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_sdtw[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n 11 668 \n\n\n\n\nSBD\n\ntic()\nclust_sbd &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sbd\",\n  seed = 13\n)\ntoc()\n\n0.945 sec elapsed\n\n\n\nnames(clust_sbd) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_sbd, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.19232458\n0.43352764\n105.89969\n3.495106\n3.495106\n0.04758953\n0.3749125\n    k_6\n0.16139544\n0.14186007\n42.69029\n3.539215\n3.955084\n0.05571189\n0.3521767\n    k_5\n0.13008017\n0.20138965\n70.46372\n2.731617\n3.777455\n0.05647432\n0.3400697\n    k_10\n0.09211874\n0.04440823\n49.64036\n2.799473\n4.241962\n0.05073587\n0.3159727\n    k_3\n0.08978010\n0.31394588\n37.06136\n6.461761\n7.845973\n0.02136961\n0.3667538\n    k_9\n0.05631414\n0.06024602\n55.09867\n2.170914\n3.178624\n0.01656789\n0.3179895\n    k_4\n0.04322383\n0.28795370\n96.18451\n4.350614\n4.857858\n0.01715419\n0.3501107\n    k_8\n0.03766029\n0.08963975\n48.19501\n3.360877\n4.869244\n0.01731394\n0.3257173\n    k_7\n0.03553741\n0.11301210\n70.16402\n2.846658\n4.211674\n0.02132175\n0.3251809\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_sbd[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n511 168 \n\n\n\n\nGAK\n\ntic()\nclust_gak &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"gak\",\n  seed = 13\n)\ntoc()\n\n271.303 sec elapsed\n\n\n\nnames(clust_gak) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_gak, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.91204464\n0.6121344\n70.160389\n11.397435\n11.39743\n1.070841e-03\n0.024308301\n    k_3\n0.89063056\n0.6025345\n35.827115\n12.214961\n21.33743\n8.882340e-04\n0.017392584\n    k_8\n0.56673089\n0.5761049\n9.540570\n36.984617\n772.68089\n2.073418e-05\n0.009652511\n    k_4\n0.51422407\n0.6090642\n37.881634\n9.134131\n109.09898\n2.369289e-05\n0.023596187\n    k_7\n0.34615432\n0.5804793\n10.401018\n24.242925\n872.28716\n2.770548e-06\n0.012348716\n    k_5\n0.32153320\n0.5967512\n18.167789\n15.597700\n963.89750\n2.566534e-06\n0.017167921\n    k_10\n0.30902233\n0.5821542\n9.743672\n20.658947\n759.39685\n3.587207e-07\n0.011523184\n    k_9\n0.19782535\n0.5908109\n11.123215\n20.521645\n2053.75182\n3.399318e-07\n0.019667996\n    k_6\n0.09332721\n0.5976834\n24.094674\n9.259298\n1869.00352\n3.435826e-07\n0.016792580\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_gak[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n 32 647"
  },
  {
    "objectID": "dengue-cluster/cluster_long.html#session-info",
    "href": "dengue-cluster/cluster_long.html#session-info",
    "title": "Raw cases",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] tictoc_1.2       kableExtra_1.3.4 dtwclust_5.5.12  dtw_1.23-1      \n [5] proxy_0.4-27     timetk_2.9.0     arrow_13.0.0.1   lubridate_1.9.3 \n [9] forcats_1.0.0    stringr_1.5.0    dplyr_1.1.3      purrr_1.0.2     \n[13] readr_2.1.4      tidyr_1.3.0      tibble_3.2.1     ggplot2_3.4.4   \n[17] tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rlang_1.1.2         magrittr_2.0.3      clue_0.3-65        \n  [4] furrr_0.3.1         flexclust_1.4-1     compiler_4.3.2     \n  [7] systemfonts_1.0.5   vctrs_0.6.4         reshape2_1.4.4     \n [10] rvest_1.0.3         lhs_1.1.6           tune_1.1.2         \n [13] pkgconfig_2.0.3     fastmap_1.1.1       ellipsis_0.3.2     \n [16] labeling_0.4.3      utf8_1.2.4          promises_1.2.1     \n [19] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n [22] bit_4.0.5           xfun_0.41           modeltools_0.2-23  \n [25] jsonlite_1.8.7      recipes_1.0.8       later_1.3.1        \n [28] parallel_4.3.2      cluster_2.1.4       R6_2.5.1           \n [31] stringi_1.7.12      rsample_1.2.0       parallelly_1.36.0  \n [34] rpart_4.1.21        Rcpp_1.0.11         assertthat_0.2.1   \n [37] dials_1.2.0         iterators_1.0.14    knitr_1.45         \n [40] future.apply_1.11.0 zoo_1.8-12          httpuv_1.6.12      \n [43] Matrix_1.6-1.1      splines_4.3.2       nnet_7.3-19        \n [46] timechange_0.2.0    tidyselect_1.2.0    rstudioapi_0.15.0  \n [49] yaml_2.3.7          timeDate_4022.108   codetools_0.2-19   \n [52] listenv_0.9.0       lattice_0.22-5      plyr_1.8.9         \n [55] shiny_1.7.5.1       withr_2.5.2         evaluate_0.23      \n [58] future_1.33.0       survival_3.5-7      RcppParallel_5.1.7 \n [61] xml2_1.3.5          xts_0.13.1          pillar_1.9.0       \n [64] foreach_1.5.2       stats4_4.3.2        shinyjs_2.1.0      \n [67] generics_0.1.3      hms_1.1.3           munsell_0.5.0      \n [70] scales_1.2.1        xtable_1.8-4        globals_0.16.2     \n [73] class_7.3-22        glue_1.6.2          tools_4.3.2        \n [76] data.table_1.14.8   RSpectra_0.16-1     webshot_0.5.5      \n [79] gower_1.0.1         grid_4.3.2          yardstick_1.2.0    \n [82] ipred_0.9-14        colorspace_2.1-0    cli_3.6.1          \n [85] DiceDesign_1.9      workflows_1.1.3     parsnip_1.1.1      \n [88] fansi_1.0.5         viridisLite_0.4.2   gt_0.10.0          \n [91] svglite_2.1.2       lava_1.7.3          gtable_0.3.4       \n [94] GPfit_1.0-8         sass_0.4.7          digest_0.6.33      \n [97] ggrepel_0.9.4       farver_2.1.1        htmlwidgets_1.6.2  \n[100] htmltools_0.5.7     lifecycle_1.0.4     httr_1.4.7         \n[103] hardhat_1.3.0       mime_0.12           bit64_4.0.5        \n[106] MASS_7.3-60"
  },
  {
    "objectID": "dengue-cluster/cluster_multivariate_clim.html",
    "href": "dengue-cluster/cluster_multivariate_clim.html",
    "title": "Climate variables multivariate clustering",
    "section": "",
    "text": "This notebook aims to cluster the Brazilian municipalities considering only climate indicators with multivariate clustering techniques."
  },
  {
    "objectID": "dengue-cluster/cluster_multivariate_clim.html#packages",
    "href": "dengue-cluster/cluster_multivariate_clim.html#packages",
    "title": "Climate variables multivariate clustering",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nlibrary(sf)\nlibrary(DT)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_multivariate_clim.html#load-data",
    "href": "dengue-cluster/cluster_multivariate_clim.html#load-data",
    "title": "Climate variables multivariate clustering",
    "section": "Load data",
    "text": "Load data\nDaily, scaled cases, maximum temperature, minimum temperature and precipitation.\n\ntdengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n  select(mun, date, tmax, tmin, prec) %&gt;%\n  collect()\n\ndim(tdengue)\n\n[1] 331980      5\n\n\nData for maps.\n\nuf_sf &lt;- geobr::read_state(showProgress = FALSE)\n\nUsing year 2010\n\ncoords &lt;- geobr::read_municipality(showProgress = FALSE) %&gt;%\n  st_make_valid() %&gt;%\n  st_centroid()\n\nUsing year 2010\n\n\nWarning: st_centroid assumes attributes are constant over geometries"
  },
  {
    "objectID": "dengue-cluster/cluster_multivariate_clim.html#prepare-data",
    "href": "dengue-cluster/cluster_multivariate_clim.html#prepare-data",
    "title": "Climate variables multivariate clustering",
    "section": "Prepare data",
    "text": "Prepare data\nFor clustering, the data must be a list of data frames with climate data and without date.\n\ngdengue &lt;- tdengue %&gt;%\n  group_by(mun) %&gt;%\n  arrange(date) %&gt;%\n  select(-date)\n\nmdengue &lt;- group_split(gdengue, .keep = FALSE) %&gt;%\n  tslist(simplify = TRUE)\n\nnames(mdengue) &lt;- group_keys(gdengue)$mun\n\n\nglimpse(mdengue[1:3])\n\nList of 3\n $ 110002: num [1:1001, 1:3] -14.518 0.299 0.299 0.393 0.393 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:3] \"tmax\" \"tmin\" \"prec\"\n $ 110012: num [1:1001, 1:3] -14.518 0.299 0.299 0.393 0.393 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:3] \"tmax\" \"tmin\" \"prec\"\n $ 110020: num [1:1001, 1:3] -14.518 0.299 0.299 0.393 0.393 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:3] \"tmax\" \"tmin\" \"prec\""
  },
  {
    "objectID": "dengue-cluster/cluster_multivariate_clim.html#dtw-clustering",
    "href": "dengue-cluster/cluster_multivariate_clim.html#dtw-clustering",
    "title": "Climate variables multivariate clustering",
    "section": "DTW clustering",
    "text": "DTW clustering\nTry from 2 to 5 partitions.\n\ntic()\nstdw_clust &lt;- tsclust(\n  series = mdengue, \n  type = \"partitional\", k = 2:5, \n  distance = \"dtw_basic\", \n  seed = 13\n)\ntoc()\n\n30.191 sec elapsed\n\n\n\nCluster Validity Indices (CVI)\n\nnames(stdw_clust) &lt;- paste0(\"k_\", 2:5)\nres_cvi &lt;- sapply(stdw_clust, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\ndatatable(res_cvi)\n\n\n\n\n\n\n\nm_sel_clust &lt;- stdw_clust[[res_cvi[[1,1]]]]\n\nplot(m_sel_clust)\n\n\n\n\n\n\nPartitions size\n\ntable(m_sel_clust@cluster)\n\n\n  1   2   3   4   5 \n127  97  25  41  43 \n\n\n\n\nPartition results\n\ncoords &lt;- coords %&gt;%\n  mutate(code_muni = substr(code_muni, 0, 6))\n\n\nm_cluster_ids &lt;- tibble(\n  code_muni = names(mdengue),\n  group = as.character(m_sel_clust@cluster)\n) %&gt;% \n  left_join(coords, by = \"code_muni\") %&gt;%\n  arrange(group, name_muni) %&gt;%\n  st_as_sf()\n\n\nsaveRDS(object = m_cluster_ids, file = \"m_clim_cluster_ids.rds\")\n\n\nm_cluster_ids %&gt;%\n  select(group, name_muni, abbrev_state) %&gt;%\n  arrange(group, name_muni) %&gt;%\n  st_drop_geometry() %&gt;%\n  datatable()\n\n\n\n\n\n\n\nggplot() +\n  geom_sf(data = uf_sf, fill = \"lightgray\", color = \"grey20\", size=.15, show.legend = FALSE) +\n  geom_sf(data = m_cluster_ids, aes(color = group), size = 2) +\n  theme_minimal()"
  },
  {
    "objectID": "dengue-cluster/cluster_multivariate_clim.html#session-info",
    "href": "dengue-cluster/cluster_multivariate_clim.html#session-info",
    "title": "Climate variables multivariate clustering",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: CentOS Linux 7 (Core)\n\nMatrix products: default\nBLAS/LAPACK: /home/raphaelfs/miniconda3/envs/quarto/lib/libopenblasp-r0.3.25.so;  LAPACK version 3.11.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=pt_BR.UTF-8        LC_COLLATE=pt_BR.UTF-8    \n [5] LC_MONETARY=pt_BR.UTF-8    LC_MESSAGES=pt_BR.UTF-8   \n [7] LC_PAPER=pt_BR.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=pt_BR.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: America/Sao_Paulo\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] DT_0.28          sf_1.0-14        tictoc_1.2       kableExtra_1.3.4\n [5] dtwclust_5.5.12  dtw_1.23-1       proxy_0.4-27     timetk_2.8.2    \n [9] arrow_12.0.0     lubridate_1.9.2  forcats_1.0.0    stringr_1.5.0   \n[13] dplyr_1.1.2      purrr_1.0.1      readr_2.1.4      tidyr_1.3.0     \n[17] tibble_3.2.1     ggplot2_3.4.2    tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rstudioapi_0.14     jsonlite_1.8.5      wk_0.7.3           \n  [4] magrittr_2.0.3      modeltools_0.2-23   farver_2.1.1       \n  [7] rmarkdown_2.22      vctrs_0.6.3         webshot_0.5.4      \n [10] htmltools_0.5.5     dials_1.2.0         curl_5.0.2         \n [13] s2_1.1.4            sass_0.4.6          parallelly_1.36.0  \n [16] KernSmooth_2.23-21  bslib_0.4.2         htmlwidgets_1.6.2  \n [19] plyr_1.8.8          cachem_1.0.8        zoo_1.8-12         \n [22] mime_0.12           lifecycle_1.0.3     iterators_1.0.14   \n [25] pkgconfig_2.0.3     Matrix_1.5-4.1      R6_2.5.1           \n [28] fastmap_1.1.1       future_1.32.0       shiny_1.7.4        \n [31] tune_1.1.2          clue_0.3-64         digest_0.6.31      \n [34] colorspace_2.1-0    furrr_0.3.1         RSpectra_0.16-1    \n [37] crosstalk_1.2.0     labeling_0.4.2      fansi_1.0.4        \n [40] yardstick_1.2.0     timechange_0.2.0    httr_1.4.6         \n [43] compiler_4.3.2      bit64_4.0.5         withr_2.5.0        \n [46] DBI_1.1.3           MASS_7.3-60         lava_1.7.2.1       \n [49] classInt_0.4-9      tools_4.3.2         units_0.8-2        \n [52] httpuv_1.6.11       flexclust_1.4-1     future.apply_1.11.0\n [55] nnet_7.3-19         glue_1.6.2          promises_1.2.0.1   \n [58] grid_4.3.2          cluster_2.1.4       reshape2_1.4.4     \n [61] generics_0.1.3      recipes_1.0.6       gtable_0.3.3       \n [64] tzdb_0.4.0          class_7.3-22        data.table_1.14.8  \n [67] hms_1.1.3           rsample_1.2.0       xml2_1.3.4         \n [70] utf8_1.2.3          ggrepel_0.9.3       geobr_1.8.1        \n [73] foreach_1.5.2       pillar_1.9.0        later_1.3.1        \n [76] splines_4.3.2       lhs_1.1.6           lattice_0.21-8     \n [79] survival_3.5-5      bit_4.0.5           tidyselect_1.2.0   \n [82] knitr_1.43          svglite_2.1.1       stats4_4.3.2       \n [85] xfun_0.39           hardhat_1.3.0       timeDate_4022.108  \n [88] stringi_1.7.12      DiceDesign_1.9      yaml_2.3.7         \n [91] workflows_1.1.3     evaluate_0.21       codetools_0.2-19   \n [94] cli_3.6.1           RcppParallel_5.1.7  rpart_4.1.19       \n [97] xtable_1.8-4        systemfonts_1.0.4   jquerylib_0.1.4    \n[100] munsell_0.5.0       Rcpp_1.0.10         globals_0.16.2     \n[103] parallel_4.3.2      ellipsis_0.3.2      gower_1.0.1        \n[106] assertthat_0.2.1    parsnip_1.1.0       GPfit_1.0-8        \n[109] listenv_0.9.0       viridisLite_0.4.2   ipred_0.9-13       \n[112] scales_1.2.1        xts_0.13.1          prodlim_2019.11.13 \n[115] e1071_1.7-13        rlang_1.1.1         rvest_1.0.3        \n[118] shinyjs_2.1.0"
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum.html",
    "href": "dengue-cluster/cluster_long_cum.html",
    "title": "Raw cases, cumulative",
    "section": "",
    "text": "This notebook aims to cluster the Brazilian municipalities considering dengue raw cases time-series similarities."
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum.html#packages",
    "href": "dengue-cluster/cluster_long_cum.html#packages",
    "title": "Raw cases, cumulative",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum.html#load-data",
    "href": "dengue-cluster/cluster_long_cum.html#load-data",
    "title": "Raw cases, cumulative",
    "section": "Load data",
    "text": "Load data\nLoad the bundled data.\n\ntdengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases = cases_cum) %&gt;%\n    collect()\n\ndim(tdengue)\n\n[1] 340179      3\n\n\n\nPrepare data\nThe chunk bellow formats the dataset for tsclust use.\n\ntdengue &lt;- tdengue %&gt;%\n  # Prepare time series\n  arrange(mun) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-date) %&gt;%\n  t() %&gt;%\n  # Convert object\n  tslist()\n\n\nlength(tdengue)\n\n[1] 679"
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum.html#clustering",
    "href": "dengue-cluster/cluster_long_cum.html#clustering",
    "title": "Raw cases, cumulative",
    "section": "Clustering",
    "text": "Clustering\nSequence of k groups to be used.\n\nk_seq &lt;- 2:10\n\n\nDTW (basic)\n\ntic()\nclust_dtw &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"dtw_basic\",\n  seed = 13\n)\ntoc()\n\n37.391 sec elapsed\n\n\n\nnames(clust_dtw) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_dtw, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.3883485\n0\n219.03946\n1.134304\n1.134304\n0.008077949\n0.15430130\n    k_3\n0.3067752\n0\n310.90157\n1.635604\n1.775981\n0.006456940\n0.12341630\n    k_5\n0.2387272\n0\n162.71153\n1.759704\n2.280500\n0.006971102\n0.09710109\n    k_8\n0.2052530\n0\n116.02794\n1.497911\n2.157663\n0.010105561\n0.08426017\n    k_9\n0.1759150\n0\n110.48283\n1.982305\n3.102040\n0.007701467\n0.07432019\n    k_7\n0.1677298\n0\n116.57366\n1.604325\n2.207429\n0.010855206\n0.08933756\n    k_10\n0.1586523\n0\n80.28211\n2.273564\n3.023525\n0.006111798\n0.08597771\n    k_4\n0.1539778\n0\n147.65699\n2.473204\n3.436038\n0.005005953\n0.12329358\n    k_6\n0.1527731\n0\n126.08954\n2.013522\n2.576196\n0.005165569\n0.10876459\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_dtw[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n551 128 \n\n\n\n\nSoft-DTW\n\ntic()\nclust_sdtw &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sdtw\",\n  seed = 13\n)\ntoc()\n\n195.336 sec elapsed\n\n\n\nnames(clust_sdtw) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_sdtw, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_9\n4.6835404\n3.301961e-04\n-1198.16808\n0.4328621\n70.9687638\n-0.027622202\n-0.001783289\n    k_3\n0.5874870\n1.210092e-08\n241.76435\n0.4728893\n0.6095286\n-0.016428914\n0.017947639\n    k_2\n0.5526841\n1.864919e-08\n-157.74645\n0.6603416\n0.6603416\n-0.008343487\n0.076892143\n    k_7\n0.5143244\n2.926145e-06\n1776.33826\n3.5865645\n-11.8749979\n-0.024224946\n0.003868853\n    k_6\n0.5091103\n4.869410e-04\n463.73188\n2.1072188\n0.3291628\n-0.018669198\n0.005947036\n    k_10\n0.4865815\n8.516047e-01\n1744.16238\n2.2000345\n-13.7430978\n-0.020388668\n0.003773382\n    k_5\n0.4759798\n3.530744e-08\n219.42676\n1.0472748\n2.8079291\n-0.015917823\n0.007728450\n    k_4\n0.2085165\n1.043811e-05\n46.69006\n1.5530459\n-0.6703440\n-0.016278775\n0.027708772\n    k_8\n0.0811271\n1.595867e-05\n51191.47920\n3.6371109\n-5.0907762\n-0.024336278\n0.001610495\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_sdtw[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2   3   4   5   6   7   8   9 \n 74 106 102  83  89  78  44  81  22 \n\n\n\n\nSBD\n\ntic()\nclust_sbd &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sbd\",\n  seed = 13\n)\ntoc()\n\n0.75 sec elapsed\n\n\n\nnames(clust_sbd) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_sbd, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.4442625\n0.5940473\n345.3780\n1.035863\n1.035863\n0.008004787\n0.20201102\n    k_3\n0.4022197\n0.5792206\n346.5557\n1.239092\n1.387231\n0.001858214\n0.12732693\n    k_4\n0.3334983\n0.5737804\n245.6445\n1.121578\n1.815766\n0.002032385\n0.10409579\n    k_7\n0.3274548\n0.5339155\n190.7100\n1.212410\n2.079583\n0.004857007\n0.06826826\n    k_6\n0.3125595\n0.5426452\n206.1180\n1.239948\n2.105174\n0.008653764\n0.07328745\n    k_10\n0.2993463\n0.5225233\n168.3385\n1.828146\n3.486689\n0.002307383\n0.05626920\n    k_9\n0.2813463\n0.5244313\n182.8368\n1.213397\n1.947885\n0.002827627\n0.05685390\n    k_5\n0.2604179\n0.5603160\n209.0601\n1.290158\n1.825457\n0.003340171\n0.10155246\n    k_8\n0.1947688\n0.5344965\n148.8106\n1.642704\n3.682444\n0.002371686\n0.07799687\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_sbd[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n500 179 \n\n\n\n\nGAK\n\ntic()\nclust_gak &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"gak\",\n  seed = 13\n)\ntoc()\n\n276.125 sec elapsed\n\n\n\nnames(clust_gak) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_gak, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.4703437\n0.6318950\n346.9030\n0.7492626\n0.7492626\n0.002673344\n0.22610650\n    k_3\n0.4242503\n0.6317923\n350.9145\n1.1578518\n1.3150938\n0.001689423\n0.12032277\n    k_4\n0.3404306\n0.6317602\n248.3140\n1.0644928\n1.7873944\n0.001860028\n0.09770063\n    k_7\n0.3391378\n0.6315128\n204.6923\n1.2022774\n2.0564247\n0.003583292\n0.06365358\n    k_6\n0.3320730\n0.6315865\n228.3494\n1.1336897\n1.8636779\n0.004311562\n0.06847479\n    k_9\n0.3173288\n0.6314596\n178.8928\n1.1311449\n1.9720656\n0.004519858\n0.04981730\n    k_10\n0.3094439\n0.6314500\n177.1258\n1.7581411\n3.6257840\n0.001690421\n0.05150554\n    k_5\n0.2528416\n0.6316542\n190.1814\n1.5612030\n2.0839318\n0.001970852\n0.09056517\n    k_8\n0.2169763\n0.6315151\n152.0770\n1.7145901\n4.1675547\n0.001897451\n0.07208410\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_gak[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n535 144"
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum.html#session-info",
    "href": "dengue-cluster/cluster_long_cum.html#session-info",
    "title": "Raw cases, cumulative",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] tictoc_1.2       kableExtra_1.3.4 dtwclust_5.5.12  dtw_1.23-1      \n [5] proxy_0.4-27     timetk_2.9.0     arrow_13.0.0.1   lubridate_1.9.3 \n [9] forcats_1.0.0    stringr_1.5.0    dplyr_1.1.3      purrr_1.0.2     \n[13] readr_2.1.4      tidyr_1.3.0      tibble_3.2.1     ggplot2_3.4.4   \n[17] tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rlang_1.1.2         magrittr_2.0.3      clue_0.3-65        \n  [4] furrr_0.3.1         flexclust_1.4-1     compiler_4.3.2     \n  [7] systemfonts_1.0.5   vctrs_0.6.4         reshape2_1.4.4     \n [10] rvest_1.0.3         lhs_1.1.6           tune_1.1.2         \n [13] pkgconfig_2.0.3     fastmap_1.1.1       ellipsis_0.3.2     \n [16] labeling_0.4.3      utf8_1.2.4          promises_1.2.1     \n [19] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n [22] bit_4.0.5           xfun_0.41           modeltools_0.2-23  \n [25] jsonlite_1.8.7      recipes_1.0.8       later_1.3.1        \n [28] parallel_4.3.2      cluster_2.1.4       R6_2.5.1           \n [31] stringi_1.7.12      rsample_1.2.0       parallelly_1.36.0  \n [34] rpart_4.1.21        Rcpp_1.0.11         assertthat_0.2.1   \n [37] dials_1.2.0         iterators_1.0.14    knitr_1.45         \n [40] future.apply_1.11.0 zoo_1.8-12          httpuv_1.6.12      \n [43] Matrix_1.6-1.1      splines_4.3.2       nnet_7.3-19        \n [46] timechange_0.2.0    tidyselect_1.2.0    rstudioapi_0.15.0  \n [49] yaml_2.3.7          timeDate_4022.108   codetools_0.2-19   \n [52] listenv_0.9.0       lattice_0.22-5      plyr_1.8.9         \n [55] shiny_1.7.5.1       withr_2.5.2         evaluate_0.23      \n [58] future_1.33.0       survival_3.5-7      RcppParallel_5.1.7 \n [61] xml2_1.3.5          xts_0.13.1          pillar_1.9.0       \n [64] foreach_1.5.2       stats4_4.3.2        shinyjs_2.1.0      \n [67] generics_0.1.3      hms_1.1.3           munsell_0.5.0      \n [70] scales_1.2.1        xtable_1.8-4        globals_0.16.2     \n [73] class_7.3-22        glue_1.6.2          tools_4.3.2        \n [76] data.table_1.14.8   RSpectra_0.16-1     webshot_0.5.5      \n [79] gower_1.0.1         grid_4.3.2          yardstick_1.2.0    \n [82] ipred_0.9-14        colorspace_2.1-0    cli_3.6.1          \n [85] DiceDesign_1.9      workflows_1.1.3     parsnip_1.1.1      \n [88] fansi_1.0.5         viridisLite_0.4.2   gt_0.10.0          \n [91] svglite_2.1.2       lava_1.7.3          gtable_0.3.4       \n [94] GPfit_1.0-8         sass_0.4.7          digest_0.6.33      \n [97] ggrepel_0.9.4       farver_2.1.1        htmlwidgets_1.6.2  \n[100] htmltools_0.5.7     lifecycle_1.0.4     httr_1.4.7         \n[103] hardhat_1.3.0       mime_0.12           bit64_4.0.5        \n[106] MASS_7.3-60"
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum_scaled.html",
    "href": "dengue-cluster/cluster_long_cum_scaled.html",
    "title": "Scaled cases, cumulative",
    "section": "",
    "text": "This notebook aims to cluster the Brazilian municipalities considering scaled (standardized) dengue cases time-series similarities."
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum_scaled.html#packages",
    "href": "dengue-cluster/cluster_long_cum_scaled.html#packages",
    "title": "Scaled cases, cumulative",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum_scaled.html#load-data",
    "href": "dengue-cluster/cluster_long_cum_scaled.html#load-data",
    "title": "Scaled cases, cumulative",
    "section": "Load data",
    "text": "Load data\nLoad the aggregated data.\n\ntdengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases = cases_cum) %&gt;%\n    collect()\n\ndim(tdengue)\n\n[1] 340179      3\n\n\n\nPrepare data\nThe chunk bellow executes various steps to prepare the data for clustering.\n\ntdengue &lt;- tdengue %&gt;%\n  # Prepare time series\n  mutate(mun = paste0(\"m_\", mun)) %&gt;%\n  arrange(mun, date) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-date) %&gt;%\n  t() %&gt;%\n  tslist()\n\nsaveRDS(object = tdengue, file = \"tdengue.rds\")\n\n\nlength(tdengue)\n\n[1] 679"
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum_scaled.html#clustering",
    "href": "dengue-cluster/cluster_long_cum_scaled.html#clustering",
    "title": "Scaled cases, cumulative",
    "section": "Clustering",
    "text": "Clustering\nSequence of k groups to be used.\n\nk_seq &lt;- 2:10\n\n\nDTW (basic)\n\ntic()\nclust_dtw &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"dtw_basic\",\n  seed = 13\n)\ntoc()\n\n39.132 sec elapsed\n\n\n\nnames(clust_dtw) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_dtw, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.3883485\n0\n219.03946\n1.134304\n1.134304\n0.008077949\n0.15430130\n    k_3\n0.3067752\n0\n310.90157\n1.635604\n1.775981\n0.006456940\n0.12341630\n    k_5\n0.2387272\n0\n162.71153\n1.759704\n2.280500\n0.006971102\n0.09710109\n    k_8\n0.2052530\n0\n116.02794\n1.497911\n2.157663\n0.010105561\n0.08426017\n    k_9\n0.1759150\n0\n110.48283\n1.982305\n3.102040\n0.007701467\n0.07432019\n    k_7\n0.1677298\n0\n116.57366\n1.604325\n2.207429\n0.010855206\n0.08933756\n    k_10\n0.1586523\n0\n80.28211\n2.273564\n3.023525\n0.006111798\n0.08597771\n    k_4\n0.1539778\n0\n147.65699\n2.473204\n3.436038\n0.005005953\n0.12329358\n    k_6\n0.1527731\n0\n126.08954\n2.013522\n2.576196\n0.005165569\n0.10876459\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_dtw[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n551 128 \n\n\n\n\nSoft-DTW\n\ntic()\nclust_sdtw &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sdtw\",\n  seed = 13\n)\ntoc()\n\n193.822 sec elapsed\n\n\n\nnames(clust_sdtw) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_sdtw, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_9\n4.6835404\n3.301961e-04\n-1198.16808\n0.4328621\n70.9687638\n-0.027622202\n-0.001783289\n    k_3\n0.5874870\n1.210092e-08\n241.76435\n0.4728893\n0.6095286\n-0.016428914\n0.017947639\n    k_2\n0.5526841\n1.864919e-08\n-157.74645\n0.6603416\n0.6603416\n-0.008343487\n0.076892143\n    k_7\n0.5143244\n2.926145e-06\n1776.33826\n3.5865645\n-11.8749979\n-0.024224946\n0.003868853\n    k_6\n0.5091103\n4.869410e-04\n463.73188\n2.1072188\n0.3291628\n-0.018669198\n0.005947036\n    k_10\n0.4865815\n8.516047e-01\n1744.16238\n2.2000345\n-13.7430978\n-0.020388668\n0.003773382\n    k_5\n0.4759798\n3.530744e-08\n219.42676\n1.0472748\n2.8079291\n-0.015917823\n0.007728450\n    k_4\n0.2085165\n1.043811e-05\n46.69006\n1.5530459\n-0.6703440\n-0.016278775\n0.027708772\n    k_8\n0.0811271\n1.595867e-05\n51191.47920\n3.6371109\n-5.0907762\n-0.024336278\n0.001610495\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_sdtw[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2   3   4   5   6   7   8   9 \n 74 106 102  83  89  78  44  81  22 \n\n\n\ncluster_ids &lt;- tibble(\n  mun = names(tdengue) %&gt;% substr(3, 9),\n  group = as.character(sel_clust@cluster)\n) \n\nsaveRDS(object = cluster_ids, file = \"clust_sdtw_ids.rds\")\n\n\n\nSBD\n\ntic()\nclust_sbd &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sbd\",\n  seed = 13\n)\ntoc()\n\n0.756 sec elapsed\n\n\n\nnames(clust_sbd) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_sbd, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.4442625\n0.5940473\n345.3780\n1.035863\n1.035863\n0.008004787\n0.20201102\n    k_3\n0.4022197\n0.5792206\n346.5557\n1.239092\n1.387231\n0.001858214\n0.12732693\n    k_4\n0.3334983\n0.5737804\n245.6445\n1.121578\n1.815766\n0.002032385\n0.10409579\n    k_7\n0.3274548\n0.5339155\n190.7100\n1.212410\n2.079583\n0.004857007\n0.06826826\n    k_6\n0.3125595\n0.5426452\n206.1180\n1.239948\n2.105174\n0.008653764\n0.07328745\n    k_10\n0.2993463\n0.5225233\n168.3385\n1.828146\n3.486689\n0.002307383\n0.05626920\n    k_9\n0.2813463\n0.5244313\n182.8368\n1.213397\n1.947885\n0.002827627\n0.05685390\n    k_5\n0.2604179\n0.5603160\n209.0601\n1.290158\n1.825457\n0.003340171\n0.10155246\n    k_8\n0.1947688\n0.5344965\n148.8106\n1.642704\n3.682444\n0.002371686\n0.07799687\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_sbd[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n500 179 \n\n\n\n\nGAK\n\ntic()\nclust_gak &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"gak\",\n  seed = 13\n)\ntoc()\n\n280.382 sec elapsed\n\n\n\nnames(clust_gak) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_gak, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.4703437\n0.6318950\n346.9030\n0.7492626\n0.7492626\n0.002673344\n0.22610650\n    k_3\n0.4242503\n0.6317923\n350.9145\n1.1578518\n1.3150938\n0.001689423\n0.12032277\n    k_4\n0.3404306\n0.6317602\n248.3140\n1.0644928\n1.7873944\n0.001860028\n0.09770063\n    k_7\n0.3391378\n0.6315128\n204.6923\n1.2022774\n2.0564247\n0.003583292\n0.06365358\n    k_6\n0.3320730\n0.6315865\n228.3494\n1.1336897\n1.8636779\n0.004311562\n0.06847479\n    k_9\n0.3173288\n0.6314596\n178.8928\n1.1311449\n1.9720656\n0.004519858\n0.04981730\n    k_10\n0.3094439\n0.6314500\n177.1258\n1.7581411\n3.6257840\n0.001690421\n0.05150554\n    k_5\n0.2528416\n0.6316542\n190.1814\n1.5612030\n2.0839318\n0.001970852\n0.09056517\n    k_8\n0.2169763\n0.6315151\n152.0770\n1.7145901\n4.1675547\n0.001897451\n0.07208410\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_gak[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n535 144"
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum_scaled.html#session-info",
    "href": "dengue-cluster/cluster_long_cum_scaled.html#session-info",
    "title": "Scaled cases, cumulative",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] tictoc_1.2       kableExtra_1.3.4 dtwclust_5.5.12  dtw_1.23-1      \n [5] proxy_0.4-27     timetk_2.9.0     arrow_13.0.0.1   lubridate_1.9.3 \n [9] forcats_1.0.0    stringr_1.5.0    dplyr_1.1.3      purrr_1.0.2     \n[13] readr_2.1.4      tidyr_1.3.0      tibble_3.2.1     ggplot2_3.4.4   \n[17] tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rlang_1.1.2         magrittr_2.0.3      clue_0.3-65        \n  [4] furrr_0.3.1         flexclust_1.4-1     compiler_4.3.2     \n  [7] systemfonts_1.0.5   vctrs_0.6.4         reshape2_1.4.4     \n [10] rvest_1.0.3         lhs_1.1.6           tune_1.1.2         \n [13] pkgconfig_2.0.3     fastmap_1.1.1       ellipsis_0.3.2     \n [16] labeling_0.4.3      utf8_1.2.4          promises_1.2.1     \n [19] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n [22] bit_4.0.5           xfun_0.41           modeltools_0.2-23  \n [25] jsonlite_1.8.7      recipes_1.0.8       later_1.3.1        \n [28] parallel_4.3.2      cluster_2.1.4       R6_2.5.1           \n [31] stringi_1.7.12      rsample_1.2.0       parallelly_1.36.0  \n [34] rpart_4.1.21        Rcpp_1.0.11         assertthat_0.2.1   \n [37] dials_1.2.0         iterators_1.0.14    knitr_1.45         \n [40] future.apply_1.11.0 zoo_1.8-12          httpuv_1.6.12      \n [43] Matrix_1.6-1.1      splines_4.3.2       nnet_7.3-19        \n [46] timechange_0.2.0    tidyselect_1.2.0    rstudioapi_0.15.0  \n [49] yaml_2.3.7          timeDate_4022.108   codetools_0.2-19   \n [52] listenv_0.9.0       lattice_0.22-5      plyr_1.8.9         \n [55] shiny_1.7.5.1       withr_2.5.2         evaluate_0.23      \n [58] future_1.33.0       survival_3.5-7      RcppParallel_5.1.7 \n [61] xml2_1.3.5          xts_0.13.1          pillar_1.9.0       \n [64] foreach_1.5.2       stats4_4.3.2        shinyjs_2.1.0      \n [67] generics_0.1.3      hms_1.1.3           munsell_0.5.0      \n [70] scales_1.2.1        xtable_1.8-4        globals_0.16.2     \n [73] class_7.3-22        glue_1.6.2          tools_4.3.2        \n [76] data.table_1.14.8   RSpectra_0.16-1     webshot_0.5.5      \n [79] gower_1.0.1         grid_4.3.2          yardstick_1.2.0    \n [82] ipred_0.9-14        colorspace_2.1-0    cli_3.6.1          \n [85] DiceDesign_1.9      workflows_1.1.3     parsnip_1.1.1      \n [88] fansi_1.0.5         viridisLite_0.4.2   gt_0.10.0          \n [91] svglite_2.1.2       lava_1.7.3          gtable_0.3.4       \n [94] GPfit_1.0-8         sass_0.4.7          digest_0.6.33      \n [97] ggrepel_0.9.4       farver_2.1.1        htmlwidgets_1.6.2  \n[100] htmltools_0.5.7     lifecycle_1.0.4     httr_1.4.7         \n[103] hardhat_1.3.0       mime_0.12           bit64_4.0.5        \n[106] MASS_7.3-60"
  },
  {
    "objectID": "dengue-cluster/cluster_tsfeatures.html",
    "href": "dengue-cluster/cluster_tsfeatures.html",
    "title": "Time series features",
    "section": "",
    "text": "This notebook aims to explore time series features of dengue cases that may guide the clustering procedures. Time series features descriptions are quoted from Hyndman et al. (2022) ."
  },
  {
    "objectID": "dengue-cluster/cluster_tsfeatures.html#packages",
    "href": "dengue-cluster/cluster_tsfeatures.html#packages",
    "title": "Time series features",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(arrow)\nlibrary(tsfeatures)\nlibrary(broom)\nlibrary(DT)\nsource(\"../functions.R\")\n\n\nFunctions\nPerform Kolmogorov-Smirnorf tests between groups statistics.\n\n\nCode\nks_group_test &lt;- function(stat){\n  \n  tsf_group_split &lt;- tsf_group %&gt;%\n    # Select variables and statistic\n    select(group, statistic = !!stat) %&gt;%\n    # Split to list  \n    group_split(group) \n\n  # Matrix of possible combinations\n  comb &lt;- combn(x = unique(tsf_group$group), m = 2)\n\n  # Resuls data frame\n  ks_results &lt;- tibble()\n  \n  \n  # For each group combination, perform ks.test\n  for(i in 1:ncol(comb)){\n    g_a &lt;- comb[1,i]\n    g_b &lt;- comb[2,i]\n    \n    res &lt;- ks.test(\n      x = tsf_group_split[[g_a]]$statistic, \n      y =  tsf_group_split[[g_b]]$statistic\n    ) %&gt;% tidy()\n    \n    tmp &lt;- tibble(\n      g_a = g_a,\n      g_b = g_b,\n      statistic = round(res$statistic, 4),\n      pvalue = round(res$p.value, 4)\n    )\n    \n    ks_results &lt;- bind_rows(ks_results, tmp)\n  }\n  \n  ks_results %&gt;%\n    arrange(g_a, g_b)\n}"
  },
  {
    "objectID": "dengue-cluster/cluster_tsfeatures.html#load-data",
    "href": "dengue-cluster/cluster_tsfeatures.html#load-data",
    "title": "Time series features",
    "section": "Load data",
    "text": "Load data\nLoad the bundled data (679 municipalities, pop \\(\\geq\\) 50k inhab.) with standardized cases and keep only the municipality code, date and cases variables.\n\ntdengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases) %&gt;%\n    collect()"
  },
  {
    "objectID": "dengue-cluster/cluster_tsfeatures.html#prepare-data",
    "href": "dengue-cluster/cluster_tsfeatures.html#prepare-data",
    "title": "Time series features",
    "section": "Prepare data",
    "text": "Prepare data\nConvert panel data to a list of ts objects.\n\ntdengue_df &lt;- tdengue %&gt;%\n  arrange(mun, date) %&gt;%\n  select(-date) %&gt;%\n  nest(data = cases, .by = mun)\n\ntdengue_list &lt;- lapply(tdengue_df$data, ts)"
  },
  {
    "objectID": "dengue-cluster/cluster_tsfeatures.html#time-series-features",
    "href": "dengue-cluster/cluster_tsfeatures.html#time-series-features",
    "title": "Time series features",
    "section": "Time series features",
    "text": "Time series features\n\ntsf &lt;- tsfeatures(\n  tslist = tdengue_list, \n  features = c(\"entropy\", \"stability\",\n               \"lumpiness\", \"flat_spots\",\n               \"zero_proportion\", \"stl_features\",\n               \"acf_features\")\n)\n  \ntsf$mun &lt;- tdengue_df$mun\n\nAll features available at the tsfeatures package were computed. Bellow, details about some of them.\n\nShannon entropy\n\nMeasures the “forecastability” of a time series, where low values indicate a high signal-to-noise ratio, and large values occur when a series is difficult to forecast.\n\n\\[\n-\\int^\\pi_{-\\pi}\\hat{f}(\\lambda)\\log\\hat{f}(\\lambda) d\\lambda\n\\]\n\nggplot(tsf, aes(x = entropy)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\nStability & lumpiness\n\nStability and lumpiness are two time series features based on tiled (non-overlapping) windows. Means or variances are produced for all tiled windows. Then stability is the variance of the means, while lumpiness is the variance of the variances.\n\n\nggplot(tsf, aes(x = stability)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\nggplot(tsf, aes(x = lumpiness)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\nFlat spots\n\nFlat spots are computed by dividing the sample space of a time series into ten equal-sized intervals, and computing the maximum run length within any single interval.\n\n\nggplot(tsf, aes(x = flat_spots)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\nSTL features decomposition\n\nTrend\n\nggplot(tsf, aes(x = trend)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\nSpike\n\nggplot(tsf, aes(x = spike)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\nLinearity\n\nggplot(tsf, aes(x = linearity)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\nCurvature\n\nggplot(tsf, aes(x = curvature)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\nFirst autocorrelation coefficient\n\nggplot(tsf, aes(x = e_acf1)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\nSum of the first ten squared autocorrelation coefficients\n\nggplot(tsf, aes(x = e_acf10)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\n\nAutocorrelation function (ACF) features\n\nggplot(tsf, aes(x = x_acf1)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\nggplot(tsf, aes(x = x_acf10)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\nggplot(tsf, aes(x = diff1_acf1)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\nggplot(tsf, aes(x = diff1_acf10)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\nggplot(tsf, aes(x = diff2_acf1)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\nggplot(tsf, aes(x = diff2_acf10)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()"
  },
  {
    "objectID": "dengue-cluster/cluster_tsfeatures.html#clustering",
    "href": "dengue-cluster/cluster_tsfeatures.html#clustering",
    "title": "Time series features",
    "section": "Clustering",
    "text": "Clustering\nThis procedure goal is to cluster the municipalities considering time series features similarities.\n\nK-means clustering\nCluster the municipalities based solely on the time series features.\n\npoints &lt;- tsf %&gt;%\n  select(-mun)\n\nUses \\(k\\) from 2 to 10 for clustering.\n\nkclusts &lt;- \n  tibble(k = 2:10) %&gt;%\n  mutate(\n    kclust = map(k, ~kmeans(points, .x)),\n    tidied = map(kclust, tidy),\n    glanced = map(kclust, glance),\n    augmented = map(kclust, augment, points)\n  )\n\nIsolate results.\n\nclusters &lt;- \n  kclusts %&gt;%\n  unnest(cols = c(tidied))\n\nassignments &lt;- \n  kclusts %&gt;% \n  unnest(cols = c(augmented))\n\nclusterings &lt;- \n  kclusts %&gt;%\n  unnest(cols = c(glanced))\n\nThe total sum of squares is plotted. The $k=5$ seems to be a break point.\n\nggplot(clusterings, aes(k, tot.withinss)) +\n  geom_line() +\n  geom_point() +\n  theme_bw()\n\n\n\n\n\nsilhouette_score &lt;- function(k){\n  km &lt;- kmeans(points, centers = k, nstart=25)\n  ss &lt;- cluster::silhouette(km$cluster, dist(points))\n  mean(ss[, 3])\n}\nk &lt;- 2:10\navg_sil &lt;- sapply(k, silhouette_score)\nplot(k, type='b', avg_sil, xlab='Number of clusters', ylab='Average Silhouette Scores', frame=FALSE)\n\n\n\n\n\n\nIdentify municipalities and cluster id\nFinally, the cluster partition ID is added to the main dataset.\n\ncluster_ids &lt;- clusterings %&gt;%\n  filter(k == 5) %&gt;%\n  pull(augmented) %&gt;%\n  pluck(1) %&gt;%\n  select(group = .cluster) %&gt;%\n  mutate(mun = tdengue_df$mun)\n\n\n\nCluster sizes\n\ntable(cluster_ids$group)\n\n\n  1   2   3   4   5 \n 37 225  56 259 102 \n\n\n\n\nCluster time series plot\n\ninner_join(tdengue, cluster_ids, by = \"mun\") %&gt;%\n  ggplot(aes(x = date, y = cases, color = mun)) +\n  geom_line(alpha = .3) +\n  facet_wrap(~group) +\n  theme_bw() +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "dengue-cluster/cluster_tsfeatures.html#time-series-features-per-group",
    "href": "dengue-cluster/cluster_tsfeatures.html#time-series-features-per-group",
    "title": "Time series features",
    "section": "Time series features per group",
    "text": "Time series features per group\nAdd group Id to time series feautures.\n\ntsf_group &lt;- left_join(tsf, cluster_ids, by = \"mun\")\n\n\nShannon entropy\n\nggplot(tsf_group, aes(x = entropy, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"entropy\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nStability & lumpiness\n\nggplot(tsf_group, aes(x = stability, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"stability\") %&gt;% datatable()\n\n\n\n\n\n\n\nggplot(tsf_group, aes(x = lumpiness, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"lumpiness\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nFlat spots\n\nggplot(tsf_group, aes(x = flat_spots, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"flat_spots\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nZero proportion\n\nggplot(tsf_group, aes(x = zero_proportion, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"zero_proportion\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nSTL features decomposition\n\nTrend\n\nggplot(tsf_group, aes(x = trend, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"trend\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nSpike\n\nggplot(tsf_group, aes(x = spike, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"spike\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nLinearity\n\nggplot(tsf_group, aes(x = linearity, , fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"linearity\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nCurvature\n\nggplot(tsf_group, aes(x = curvature, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"curvature\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nFirst autocorrelation coefficient\n\nggplot(tsf_group, aes(x = e_acf1, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"e_acf1\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nSum of the first ten squared autocorrelation coefficients\n\nggplot(tsf_group, aes(x = e_acf10, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"e_acf10\") %&gt;% datatable()\n\n\n\n\n\n\n\n\n\nAutocorrelation function (ACF) features\n\nggplot(tsf_group, aes(x = x_acf1, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"x_acf1\") %&gt;% datatable()\n\n\n\n\n\n\n\nggplot(tsf_group, aes(x = x_acf10, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"x_acf10\") %&gt;% datatable()\n\n\n\n\n\n\n\nggplot(tsf_group, aes(x = diff1_acf1, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"diff1_acf1\") %&gt;% datatable()\n\n\n\n\n\n\n\nggplot(tsf_group, aes(x = diff1_acf10, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"diff1_acf10\") %&gt;% datatable()\n\n\n\n\n\n\n\nggplot(tsf_group, aes(x = diff2_acf1, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"diff2_acf1\") %&gt;% datatable()\n\n\n\n\n\n\n\nggplot(tsf_group, aes(x = diff2_acf10, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"diff2_acf10\") %&gt;% datatable()"
  },
  {
    "objectID": "dengue-cluster/cluster_tsfeatures.html#session-info",
    "href": "dengue-cluster/cluster_tsfeatures.html#session-info",
    "title": "Time series features",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] DT_0.30            tsfeatures_1.1.1   arrow_13.0.0.1     yardstick_1.2.0   \n [5] workflowsets_1.0.1 workflows_1.1.3    tune_1.1.2         rsample_1.2.0     \n [9] recipes_1.0.8      parsnip_1.1.1      modeldata_1.2.0    infer_1.0.5       \n[13] dials_1.2.0        scales_1.2.1       broom_1.0.5        tidymodels_1.1.1  \n[17] lubridate_1.9.3    forcats_1.0.0      stringr_1.5.0      dplyr_1.1.3       \n[21] purrr_1.0.2        readr_2.1.4        tidyr_1.3.0        tibble_3.2.1      \n[25] ggplot2_3.4.4      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n [1] rlang_1.1.2         magrittr_2.0.3      furrr_0.3.1        \n [4] tseries_0.10-54     compiler_4.3.2      vctrs_0.6.4        \n [7] lhs_1.1.6           quadprog_1.5-8      pkgconfig_2.0.3    \n[10] fastmap_1.1.1       ellipsis_0.3.2      backports_1.4.1    \n[13] labeling_0.4.3      utf8_1.2.4          rmarkdown_2.25     \n[16] prodlim_2023.08.28  tzdb_0.4.0          bit_4.0.5          \n[19] xfun_0.41           cachem_1.0.8        jsonlite_1.8.7     \n[22] cluster_2.1.4       parallel_4.3.2      R6_2.5.1           \n[25] bslib_0.5.1         stringi_1.7.12      parallelly_1.36.0  \n[28] rpart_4.1.21        jquerylib_0.1.4     lmtest_0.9-40      \n[31] Rcpp_1.0.11         assertthat_0.2.1    iterators_1.0.14   \n[34] knitr_1.45          future.apply_1.11.0 zoo_1.8-12         \n[37] Matrix_1.6-1.1      splines_4.3.2       nnet_7.3-19        \n[40] timechange_0.2.0    tidyselect_1.2.0    rstudioapi_0.15.0  \n[43] yaml_2.3.7          timeDate_4022.108   codetools_0.2-19   \n[46] curl_5.1.0          listenv_0.9.0       lattice_0.22-5     \n[49] quantmod_0.4.25     withr_2.5.2         urca_1.3-3         \n[52] evaluate_0.23       future_1.33.0       survival_3.5-7     \n[55] xts_0.13.1          pillar_1.9.0        foreach_1.5.2      \n[58] generics_0.1.3      TTR_0.24.3          forecast_8.21.1    \n[61] hms_1.1.3           munsell_0.5.0       globals_0.16.2     \n[64] class_7.3-22        glue_1.6.2          tools_4.3.2        \n[67] data.table_1.14.8   gower_1.0.1         grid_4.3.2         \n[70] crosstalk_1.2.0     ipred_0.9-14        colorspace_2.1-0   \n[73] nlme_3.1-163        fracdiff_1.5-2      cli_3.6.1          \n[76] DiceDesign_1.9      fansi_1.0.5         lava_1.7.3         \n[79] gtable_0.3.4        GPfit_1.0-8         sass_0.4.7         \n[82] digest_0.6.33       farver_2.1.1        htmlwidgets_1.6.2  \n[85] htmltools_0.5.7     lifecycle_1.0.4     hardhat_1.3.0      \n[88] bit64_4.0.5         MASS_7.3-60"
  },
  {
    "objectID": "cluster_analysis.html",
    "href": "cluster_analysis.html",
    "title": "Overview",
    "section": "",
    "text": "On this section there are notebooks that cluster municipalities time series of dengue cases with different strategies.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n  \n\n\n\n\nCases and climate variables multivariate clustering\n\n\n\n\n\n\n\n\n\n\n\n\nJanuary 29, 2024 | 14:13:45 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nTime series features\n\n\nwith scaled cases\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nScaled cases\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nScaled cases, cumulative\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nSDTW, cumulative and scaled long time series\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nRaw cases, cumulative\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nCumulative time series\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nClimate variables multivariate clustering\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nRaw cases\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nYearly time series\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nEpi year time series\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nHierarchical clustering\n\n\nwith scaled cases\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "bundled_data.html",
    "href": "bundled_data.html",
    "title": "Bundled data",
    "section": "",
    "text": "This notebook prepares a data-set with dengue cases and covariates of interest per municipality."
  },
  {
    "objectID": "bundled_data.html#packages",
    "href": "bundled_data.html#packages",
    "title": "Bundled data",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(brpop)\nlibrary(tidymodels)\nlibrary(timetk)\nsource(\"functions.R\")"
  },
  {
    "objectID": "bundled_data.html#data",
    "href": "bundled_data.html#data",
    "title": "Bundled data",
    "section": "Data",
    "text": "Data\n\nDengue\nLoad dengue cases data and aggregate per week.\n\ndengue &lt;- read_parquet(data_dir(\"dengue_data/parquet_aggregated/dengue_md.parquet\")) %&gt;%\n  group_by(mun) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"week\", freq = sum(freq, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;%\n  rename(cases = freq)\n\n\n\nPopulation\nLoad municipality population data for the years present at the dengue cases data.\n\npop &lt;- mun_pop_totals() %&gt;%\n  filter(year %in% seq(year(min(dengue$date)), year(max(dengue$date)))) %&gt;%\n  mutate(mun = as.character(mun))\n\n\n\nWeather variables\nLoad weather variables and group per week.\n\nPrecipitation\n\nprec &lt;- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/pr.parquet\")) %&gt;%\n  filter(name == \"pr_sum\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue$date) & date &lt;= max(dengue$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"week\", value = sum(value, na.rm = TRUE)) %&gt;%\n  rename(prec = value)\n\n\n\n\n\n\n\nNote\n\n\n\nAs precipitation is a volume, the sum function is used.\n\n\n\n\nAverage maximum temperature\n\ntmax &lt;- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/tmax.parquet\")) %&gt;%\n  filter(name == \"Tmax_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue$date) & date &lt;= max(dengue$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"week\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(tmax = value)\n\n\n\nAverage minimum temperature\n\ntmin &lt;- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/tmin.parquet\")) %&gt;%\n  filter(name == \"Tmin_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue$date) & date &lt;= max(dengue$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"week\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(tmin = value)\n\n\n\n\nJoin data\nJoin dengue cases, population and weather variables.\n\ntdengue &lt;- dengue %&gt;%\n  mutate(dengue_year = year(date)) %&gt;%\n  inner_join(pop, by = c(\"dengue_year\" = \"year\", \"mun\")) %&gt;%\n  select(-dengue_year) %&gt;%\n  inner_join(prec, by = \"date\") %&gt;%\n  inner_join(tmax, by = \"date\") %&gt;%\n  inner_join(tmin, by = \"date\")\n\nrm(dengue, prec, tmax, tmin)\n\n\n\n\n\n\n\nNote\n\n\n\nThe population estimate is constant over each year.\n\n\n\n\nCleaning and basic features\nDue the sparsity of dengue cases, only municipalities with more than 50,000 inhabitants are filtered.\n\n# List municipalities with moren than 50k inhab\nmun_vec &lt;- pop %&gt;%\n  filter(year == max(year)) %&gt;%\n  filter(pop &gt;= 50000) %&gt;%\n  pull(mun)\n\nrm(pop)\n\n\ntdengue &lt;- tdengue %&gt;%\n  # Remove municipalilities with zero population\n  filter(pop != 0) %&gt;%\n  # Keep only municipalities in the list\n   filter(mun %in% mun_vec) %&gt;%\n  # Compute dengue rate per population\n  # mutate(cases = cases/pop*100000) %&gt;%\n  # Remove population\n  select(-pop) %&gt;%\n  # Round values\n  mutate(across(c(cases, prec, tmax, tmin), ~ round(.x, digits = 2))) %&gt;%\n  # Pad weeks \n  group_by(mun) %&gt;%\n  pad_by_time(date, .by = \"week\", .pad_value = 0, .start_date = min(tdengue$date), .end_date = max(tdengue$date)) %&gt;%\n  ungroup()\n\nMunicipalities remaining at the dataset: 679\n\n\n\n\n\n\nWarning\n\n\n\nThe computation of dengue incidence (cases per population) is commented to keep the raw cases count.\n\n\n\n\nStandardize measures\nCenter around mean with a unit standard deviation.\n\\[\nx' = \\frac{x - \\mu}{\\sigma}\n\\]\n\ntdengue &lt;- tdengue %&gt;%\n  mutate(cases_raw = cases) %&gt;%\n  group_by(mun) %&gt;%\n  arrange(date) %&gt;%\n  mutate(cases_cum_raw = cumsum(cases_raw)) %&gt;%\n  mutate(cases_cum = cases_cum_raw) %&gt;%\n  mutate(across(c(cases, cases_cum, prec, tmax, tmin), ~ standardize_vec(.x, silent = TRUE))) %&gt;%\n  ungroup()\n\n\n\nLag and rolling lag variables\nCreates lagged variables from standardized dengue cases and weather variables, from 1 to 6 weeks.\n\ntdengue &lt;- tdengue %&gt;%\n  group_by(mun) %&gt;%\n  tk_augment_lags(.value = c(cases, prec, tmax, tmin), .lags = 1:6) %&gt;%\n  # tk_augment_slidify(\n  #   .value = contains(\"_lag\"), \n  #   .period = c(2, 4, 6), \n  #   .f = ~ mean(.x, na.rm = TRUE), \n  #   .partial = TRUE,\n  #   .align   = \"center\"\n  # ) %&gt;%\n  ungroup()\n\n\n\n\n\n\n\nWarning\n\n\n\nRolling window calculation procedure is commented out."
  },
  {
    "objectID": "bundled_data.html#overview",
    "href": "bundled_data.html#overview",
    "title": "Bundled data",
    "section": "Overview",
    "text": "Overview\n\nglimpse(tdengue)\n\nRows: 340,179\nColumns: 33\n$ mun           &lt;chr&gt; \"110002\", \"110002\", \"110002\", \"110002\", \"110002\", \"11000…\n$ date          &lt;date&gt; 2010-12-26, 2011-01-02, 2011-01-09, 2011-01-16, 2011-01…\n$ cases         &lt;dbl&gt; -0.51044592, 0.66804904, 0.66804904, 0.07880156, 0.66804…\n$ prec          &lt;dbl&gt; -1.949441733, 1.595820245, 1.609000327, 1.566288162, 1.1…\n$ tmax          &lt;dbl&gt; -13.18226058, 0.28500953, 0.37007540, 0.49095848, 0.6969…\n$ tmin          &lt;dbl&gt; -8.3409156, 0.9663965, 1.0293750, 0.9933873, 0.9618981, …\n$ cases_raw     &lt;dbl&gt; 0, 2, 2, 1, 2, 5, 0, 1, 2, 1, 0, 2, 1, 2, 2, 0, 0, 0, 1,…\n$ cases_cum_raw &lt;dbl&gt; 0, 2, 4, 5, 7, 12, 12, 13, 15, 16, 16, 18, 19, 21, 23, 2…\n$ cases_cum     &lt;dbl&gt; -1.463959, -1.445297, -1.426635, -1.417304, -1.398642, -…\n$ cases_lag1    &lt;dbl&gt; NA, -0.51044592, 0.66804904, 0.66804904, 0.07880156, 0.6…\n$ prec_lag1     &lt;dbl&gt; NA, -1.949441733, 1.595820245, 1.609000327, 1.566288162,…\n$ tmax_lag1     &lt;dbl&gt; NA, -13.18226058, 0.28500953, 0.37007540, 0.49095848, 0.…\n$ tmin_lag1     &lt;dbl&gt; NA, -8.3409156, 0.9663965, 1.0293750, 0.9933873, 0.96189…\n$ cases_lag2    &lt;dbl&gt; NA, NA, -0.51044592, 0.66804904, 0.66804904, 0.07880156,…\n$ prec_lag2     &lt;dbl&gt; NA, NA, -1.949441733, 1.595820245, 1.609000327, 1.566288…\n$ tmax_lag2     &lt;dbl&gt; NA, NA, -13.18226058, 0.28500953, 0.37007540, 0.49095848…\n$ tmin_lag2     &lt;dbl&gt; NA, NA, -8.3409156, 0.9663965, 1.0293750, 0.9933873, 0.9…\n$ cases_lag3    &lt;dbl&gt; NA, NA, NA, -0.51044592, 0.66804904, 0.66804904, 0.07880…\n$ prec_lag3     &lt;dbl&gt; NA, NA, NA, -1.949441733, 1.595820245, 1.609000327, 1.56…\n$ tmax_lag3     &lt;dbl&gt; NA, NA, NA, -13.18226058, 0.28500953, 0.37007540, 0.4909…\n$ tmin_lag3     &lt;dbl&gt; NA, NA, NA, -8.3409156, 0.9663965, 1.0293750, 0.9933873,…\n$ cases_lag4    &lt;dbl&gt; NA, NA, NA, NA, -0.51044592, 0.66804904, 0.66804904, 0.0…\n$ prec_lag4     &lt;dbl&gt; NA, NA, NA, NA, -1.949441733, 1.595820245, 1.609000327, …\n$ tmax_lag4     &lt;dbl&gt; NA, NA, NA, NA, -13.18226058, 0.28500953, 0.37007540, 0.…\n$ tmin_lag4     &lt;dbl&gt; NA, NA, NA, NA, -8.3409156, 0.9663965, 1.0293750, 0.9933…\n$ cases_lag5    &lt;dbl&gt; NA, NA, NA, NA, NA, -0.51044592, 0.66804904, 0.66804904,…\n$ prec_lag5     &lt;dbl&gt; NA, NA, NA, NA, NA, -1.949441733, 1.595820245, 1.6090003…\n$ tmax_lag5     &lt;dbl&gt; NA, NA, NA, NA, NA, -13.18226058, 0.28500953, 0.37007540…\n$ tmin_lag5     &lt;dbl&gt; NA, NA, NA, NA, NA, -8.3409156, 0.9663965, 1.0293750, 0.…\n$ cases_lag6    &lt;dbl&gt; NA, NA, NA, NA, NA, NA, -0.51044592, 0.66804904, 0.66804…\n$ prec_lag6     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, -1.9494417, 1.5958202, 1.6090003…\n$ tmax_lag6     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, -13.18226058, 0.28500953, 0.3700…\n$ tmin_lag6     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, -8.3409156, 0.9663965, 1.0293750…"
  },
  {
    "objectID": "bundled_data.html#save-result",
    "href": "bundled_data.html#save-result",
    "title": "Bundled data",
    "section": "Save result",
    "text": "Save result\n\nwrite_parquet(x = tdengue, sink = data_dir(\"bundled_data/tdengue.parquet\"))"
  },
  {
    "objectID": "bundled_data.html#session-info",
    "href": "bundled_data.html#session-info",
    "title": "Bundled data",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: CentOS Linux 7 (Core)\n\nMatrix products: default\nBLAS/LAPACK: /home/raphaelfs/miniconda3/envs/quarto/lib/libopenblasp-r0.3.25.so;  LAPACK version 3.11.0\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=pt_BR.UTF-8        LC_COLLATE=pt_BR.UTF-8    \n [5] LC_MONETARY=pt_BR.UTF-8    LC_MESSAGES=pt_BR.UTF-8   \n [7] LC_PAPER=pt_BR.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=pt_BR.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: America/Sao_Paulo\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] timetk_2.8.2       yardstick_1.2.0    workflowsets_1.0.0 workflows_1.1.3   \n [5] tune_1.1.2         rsample_1.2.0      recipes_1.0.6      parsnip_1.1.0     \n [9] modeldata_1.1.0    infer_1.0.4        dials_1.2.0        scales_1.2.1      \n[13] broom_1.0.4        tidymodels_1.0.0   brpop_0.3.0        arrow_12.0.0      \n[17] lubridate_1.9.2    forcats_1.0.0      stringr_1.5.0      dplyr_1.1.2       \n[21] purrr_1.0.1        readr_2.1.4        tidyr_1.3.0        tibble_3.2.1      \n[25] ggplot2_3.4.2      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.0    timeDate_4022.108   fastmap_1.1.1      \n [4] digest_0.6.31       rpart_4.1.19        timechange_0.2.0   \n [7] lifecycle_1.0.3     survival_3.5-5      magrittr_2.0.3     \n[10] compiler_4.3.2      rlang_1.1.1         tools_4.3.2        \n[13] utf8_1.2.3          yaml_2.3.7          knitr_1.43         \n[16] htmlwidgets_1.6.2   bit_4.0.5           DiceDesign_1.9     \n[19] withr_2.5.0         nnet_7.3-19         grid_4.3.2         \n[22] fansi_1.0.4         xts_0.13.1          colorspace_2.1-0   \n[25] future_1.32.0       iterators_1.0.14    globals_0.16.2     \n[28] MASS_7.3-60         anytime_0.3.9       cli_3.6.1          \n[31] rmarkdown_2.22      generics_0.1.3      rstudioapi_0.14    \n[34] future.apply_1.11.0 tzdb_0.4.0          splines_4.3.2      \n[37] assertthat_0.2.1    parallel_4.3.2      vctrs_0.6.3        \n[40] hardhat_1.3.0       Matrix_1.5-4.1      jsonlite_1.8.5     \n[43] hms_1.1.3           bit64_4.0.5         listenv_0.9.0      \n[46] foreach_1.5.2       gower_1.0.1         glue_1.6.2         \n[49] parallelly_1.36.0   codetools_0.2-19    stringi_1.7.12     \n[52] gtable_0.3.3        munsell_0.5.0       GPfit_1.0-8        \n[55] pillar_1.9.0        furrr_0.3.1         htmltools_0.5.5    \n[58] ipred_0.9-13        lava_1.7.2.1        R6_2.5.1           \n[61] lhs_1.1.6           evaluate_0.21       lattice_0.21-8     \n[64] backports_1.4.1     class_7.3-22        Rcpp_1.0.10        \n[67] prodlim_2019.11.13  padr_0.6.2          xfun_0.39          \n[70] zoo_1.8-12          pkgconfig_2.0.3"
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "Ribeiro, Vitor, Eduardo Pena, Raphael Saldanha, Reza Akbarinia, Patrick Valduriez, Falaah Khan, Julia Stoyanovich, and Fabio Porto. 2023. “Subset Modelling: A Domain Partitioning Strategy for Data-Efficient Machine-Learning.” In Anais Do XXXVIII Simpósio Brasileiro de Bancos de Dados, 318–23. Porto Alegre, RS, Brasil: SBC. https://doi.org/10.5753/sbbd.2023.232829."
  },
  {
    "objectID": "publications.html#published",
    "href": "publications.html#published",
    "title": "Publications",
    "section": "",
    "text": "Ribeiro, Vitor, Eduardo Pena, Raphael Saldanha, Reza Akbarinia, Patrick Valduriez, Falaah Khan, Julia Stoyanovich, and Fabio Porto. 2023. “Subset Modelling: A Domain Partitioning Strategy for Data-Efficient Machine-Learning.” In Anais Do XXXVIII Simpósio Brasileiro de Bancos de Dados, 318–23. Porto Alegre, RS, Brasil: SBC. https://doi.org/10.5753/sbbd.2023.232829."
  },
  {
    "objectID": "publications.html#submitted",
    "href": "publications.html#submitted",
    "title": "Publications",
    "section": "Submitted",
    "text": "Submitted\n\nData paper. Zonal statistics datasets of climate indicators for Brazilian municipalities."
  },
  {
    "objectID": "publications.html#work-in-progress",
    "href": "publications.html#work-in-progress",
    "title": "Publications",
    "section": "Work in progress",
    "text": "Work in progress\n\nResearch paper. Dengue profiles: clustering of time series of dengue cases per municipalities in Brazil.\nResearch paper. Dengue and weather covariates: a time lagged relationship analysis in Brazil.\nResearch paper. Inconclusive dengue cases diagnosis reclassification in Brazil by symptoms and clinical conditions.\nResearch paper. Dengue hidden epidemics: anomalies on different space-time scenarios in Brazil.\nResearch paper. Municipality climate features: indicators of anomalies and sequences of events"
  },
  {
    "objectID": "dengue-model/dengue_mts_all.html",
    "href": "dengue-model/dengue_mts_all.html",
    "title": "Multivariate clustering, all data model",
    "section": "",
    "text": "This notebooks aims to reproduce the methodology of the paper submitted to the SBD2023 conference, implementing the global and subset modelling with a multivariate approach.\nThis methodology aims to compare the performance of models trained with data from all municipalities time-series (global models) and models trained with subset of municipalities time-series (subset models).\nThose subsets were created by a clustering algorithm considering the cases and climate time-series."
  },
  {
    "objectID": "dengue-model/dengue_mts_all.html#packages",
    "href": "dengue-model/dengue_mts_all.html#packages",
    "title": "Multivariate clustering, all data model",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(tidymodels)\nlibrary(bonsai)\nlibrary(finetune)\nlibrary(modeltime)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nlibrary(geobr)\nlibrary(DT)\nlibrary(sf)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-model/dengue_mts_all.html#load-data",
    "href": "dengue-model/dengue_mts_all.html#load-data",
    "title": "Multivariate clustering, all data model",
    "section": "Load data",
    "text": "Load data\n\ntdengue &lt;- read_parquet(file = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n  select(mun, date, starts_with(c(\"cases\", \"tmax\", \"tmin\", \"prec\"))) %&gt;%\n  drop_na()\n\n\n\n\n\n\n\nNote\n\n\n\n\nNA values are created when the lagged variables were calculated. The rows containing those NA values are dropped due machine learning regressors constraints.\nCases, maximum temperature, minimum temperature, precipitation variables are loaded, and also their time-lagged variables (from 1 to 6 weeks).\n\n\n\n\nglimpse(tdengue)\n\nRows: 336,105\nColumns: 33\n$ mun           &lt;chr&gt; \"110002\", \"110002\", \"110002\", \"110002\", \"110002\", \"11000…\n$ date          &lt;date&gt; 2011-02-06, 2011-02-13, 2011-02-20, 2011-02-27, 2011-03…\n$ cases         &lt;dbl&gt; -0.51044592, 0.07880156, 0.66804904, 0.07880156, -0.5104…\n$ cases_raw     &lt;dbl&gt; 0, 1, 2, 1, 0, 2, 1, 2, 2, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0,…\n$ cases_cum_raw &lt;dbl&gt; 12, 13, 15, 16, 16, 18, 19, 21, 23, 23, 23, 23, 24, 24, …\n$ cases_cum     &lt;dbl&gt; -1.351987, -1.342656, -1.323995, -1.314664, -1.314664, -…\n$ cases_lag1    &lt;dbl&gt; 2.43579149, -0.51044592, 0.07880156, 0.66804904, 0.07880…\n$ cases_lag2    &lt;dbl&gt; 0.66804904, 2.43579149, -0.51044592, 0.07880156, 0.66804…\n$ cases_lag3    &lt;dbl&gt; 0.07880156, 0.66804904, 2.43579149, -0.51044592, 0.07880…\n$ cases_lag4    &lt;dbl&gt; 0.66804904, 0.07880156, 0.66804904, 2.43579149, -0.51044…\n$ cases_lag5    &lt;dbl&gt; 0.66804904, 0.66804904, 0.07880156, 0.66804904, 2.435791…\n$ cases_lag6    &lt;dbl&gt; -0.51044592, 0.66804904, 0.66804904, 0.07880156, 0.66804…\n$ tmax          &lt;dbl&gt; 0.66109021, 0.31634959, 0.60288725, -0.45372038, -0.0686…\n$ tmax_lag1     &lt;dbl&gt; 0.76854184, 0.66109021, 0.31634959, 0.60288725, -0.45372…\n$ tmax_lag2     &lt;dbl&gt; 0.69690742, 0.76854184, 0.66109021, 0.31634959, 0.602887…\n$ tmax_lag3     &lt;dbl&gt; 0.49095848, 0.69690742, 0.76854184, 0.66109021, 0.316349…\n$ tmax_lag4     &lt;dbl&gt; 0.37007540, 0.49095848, 0.69690742, 0.76854184, 0.661090…\n$ tmax_lag5     &lt;dbl&gt; 0.28500953, 0.37007540, 0.49095848, 0.69690742, 0.768541…\n$ tmax_lag6     &lt;dbl&gt; -13.18226058, 0.28500953, 0.37007540, 0.49095848, 0.6969…\n$ tmin          &lt;dbl&gt; 1.0203781, 0.8764274, 1.0338734, 0.7054859, 0.8494366, 0…\n$ tmin_lag1     &lt;dbl&gt; 0.9798919, 1.0203781, 0.8764274, 1.0338734, 0.7054859, 0…\n$ tmin_lag2     &lt;dbl&gt; 0.9618981, 0.9798919, 1.0203781, 0.8764274, 1.0338734, 0…\n$ tmin_lag3     &lt;dbl&gt; 0.9933873, 0.9618981, 0.9798919, 1.0203781, 0.8764274, 1…\n$ tmin_lag4     &lt;dbl&gt; 1.0293750, 0.9933873, 0.9618981, 0.9798919, 1.0203781, 0…\n$ tmin_lag5     &lt;dbl&gt; 0.9663965, 1.0293750, 0.9933873, 0.9618981, 0.9798919, 1…\n$ tmin_lag6     &lt;dbl&gt; -8.3409156, 0.9663965, 1.0293750, 0.9933873, 0.9618981, …\n$ prec          &lt;dbl&gt; 1.282894394, 2.012750560, 1.486983434, 2.376794838, 2.26…\n$ prec_lag1     &lt;dbl&gt; 0.947382180, 1.282894394, 2.012750560, 1.486983434, 2.37…\n$ prec_lag2     &lt;dbl&gt; 1.181934148, 0.947382180, 1.282894394, 2.012750560, 1.48…\n$ prec_lag3     &lt;dbl&gt; 1.566288162, 1.181934148, 0.947382180, 1.282894394, 2.01…\n$ prec_lag4     &lt;dbl&gt; 1.609000327, 1.566288162, 1.181934148, 0.947382180, 1.28…\n$ prec_lag5     &lt;dbl&gt; 1.595820245, 1.609000327, 1.566288162, 1.181934148, 0.94…\n$ prec_lag6     &lt;dbl&gt; -1.949441733, 1.595820245, 1.609000327, 1.566288162, 1.1…"
  },
  {
    "objectID": "dengue-model/dengue_mts_all.html#clustering",
    "href": "dengue-model/dengue_mts_all.html#clustering",
    "title": "Multivariate clustering, all data model",
    "section": "Clustering",
    "text": "Clustering\nHere we load the results from this clustering notebook.\n\nclust_res &lt;- readRDS(\"../dengue-cluster/m_cluster_ids.rds\") %&gt;%\n  st_drop_geometry() %&gt;%\n  select(mun = code_muni, group)\n\ntable(clust_res$group)\n\n\n  1   2   3   4 \n178 342  18 141 \n\n\nJoin clustering results with bundled dataset.\n\ntdengue &lt;- left_join(tdengue, clust_res, by = \"mun\") %&gt;%\n  relocate(group, .after = mun)\n\nCheck for NAs.\n\ntable(is.na(tdengue$group))\n\n\n FALSE \n336105"
  },
  {
    "objectID": "dengue-model/dengue_mts_all.html#train-and-test-split",
    "href": "dengue-model/dengue_mts_all.html#train-and-test-split",
    "title": "Multivariate clustering, all data model",
    "section": "Train and test split",
    "text": "Train and test split\nSplit the data into training and testing. The function time_series_split handles the time series, not shuffling them, and considering the panel data format, as depicted in the message about overlapping timestamps detected.\nThe last three years data will be used as the training set.\n\ntdengue_split &lt;- tdengue %&gt;%\n  time_series_split(\n    date_var = date, \n    assess = 52*3,\n    cumulative = TRUE\n  )\n\nData is not ordered by the 'date_var'. Resamples will be arranged by `date`.\n\n\nOverlapping Timestamps Detected. Processing overlapping time series together using sliding windows.\n\ntdengue_split\n\n&lt;Analysis/Assess/Total&gt;\n&lt;230181/105924/336105&gt;\n\n\n\nK-folds\nThe training set will be split into k folds.\n\ntdengue_split_folds &lt;- training(tdengue_split) %&gt;%\n  vfold_cv(v = 10)"
  },
  {
    "objectID": "dengue-model/dengue_mts_all.html#recipes",
    "href": "dengue-model/dengue_mts_all.html#recipes",
    "title": "Multivariate clustering, all data model",
    "section": "Recipes",
    "text": "Recipes\nThe global and subset models training specification are called recipes. The procedure bellow creates a list of those recipes.\n\nrecipes_list &lt;- list()\n\n\nGlobal model\nThe global training recipe uses data from all municipalities for training the models.\n\nThe date and group variables are removed prior training\nThe municipality identification variable is treated as an Id variable, taking no place as a predictor in the training process\n\n\nrecipe_global &lt;- recipe(cases ~ ., data = training(tdengue_split)) %&gt;%\n  step_rm(date, group) %&gt;%\n  update_role(mun, new_role = \"id variable\")\n\nrecipes_list &lt;- append(recipes_list, list(global = recipe_global))\n\nrm(recipe_global)\n\n\n\nGlobal model with subset ID (one-hot-encoding)\nThis global model has the group variable as a predictor, in one-hot encoding form.\n\nrecipe_globalHotID &lt;- recipe(cases ~ ., data = training(tdengue_split)) %&gt;%\n  step_rm(date) %&gt;%\n  step_dummy(group, one_hot = TRUE) %&gt;%\n  update_role(mun, new_role = \"id variable\")\n\nrecipes_list &lt;- append(recipes_list, list(globalHotID = recipe_globalHotID))\n\nrm(recipe_globalHotID)\n\n\n\nGlobal model with subset ID (factor)\nThis global model has the group variable as a predictor, as a factor.\n\nrecipe_globalID &lt;- recipe(cases ~ ., data = training(tdengue_split)) %&gt;%\n  step_rm(date) %&gt;%\n  step_mutate(group = as.factor(group)) %&gt;%\n  update_role(mun, new_role = \"id variable\")\n\nrecipes_list &lt;- append(recipes_list, list(globalID = recipe_globalID))\n\nrm(recipe_globalID)\n\n\n\nGroups\n\nFor each group created by the clustering process, a specific training recipe will be created. For this, the first step is to filter rows from the training set, keeping only the rows belonging to the group in the loop\nThe date and group variables are removed prior to training\nThe municipality identification variable is treated as an Id variable, taking no place as a predictor in the training process\n\n\nfor(g in unique(tdengue$group)){\n  tmp &lt;- recipe(cases ~ ., data = training(tdengue_split)) %&gt;%\n    step_filter(group == !!g) %&gt;%\n    step_rm(date, group) %&gt;%\n    update_role(mun, new_role = \"id variable\")\n  \n  tmp &lt;- list(tmp)\n  tmp &lt;- setNames(tmp, paste0(\"g\", g))\n  \n  recipes_list &lt;- append(recipes_list, tmp)\n  \n  rm(tmp)\n}"
  },
  {
    "objectID": "dengue-model/dengue_mts_all.html#regressors-specification",
    "href": "dengue-model/dengue_mts_all.html#regressors-specification",
    "title": "Multivariate clustering, all data model",
    "section": "Regressors specification",
    "text": "Regressors specification\n\nRandom forest\nA Random Forest specification using the ranger engine. The trees and min_n hyperparameters will be tuned.\n\nrf_spec &lt;- rand_forest(\n  trees = tune(),\n  min_n = tune()\n) %&gt;%\n  set_engine(\"ranger\", respect.unordered.factors = TRUE) %&gt;%\n  set_mode(\"regression\")\n\n\n\nWorkflow set\nThis step creates a workflow set, combining the training recipes and regressors specifications.\n\nall_workflows &lt;- workflow_set(\n  preproc = recipes_list, \n  models = list(rf = rf_spec), \n  cross = TRUE\n)"
  },
  {
    "objectID": "dengue-model/dengue_mts_all.html#tune",
    "href": "dengue-model/dengue_mts_all.html#tune",
    "title": "Multivariate clustering, all data model",
    "section": "Tune",
    "text": "Tune\nThis step tunes the training hyperparameters of each workflow.\n\ndoParallel::registerDoParallel()\n\ntic()\nrace_results &lt;- \n  all_workflows %&gt;%\n  workflow_map(\n    \"tune_race_anova\",\n    seed = 345,\n    resamples = tdengue_split_folds,\n    grid = 25,\n    control = control_race(parallel_over = \"everything\"),\n    verbose = TRUE\n  )\n\ni 1 of 7 tuning:     global_rf\n\n\n✔ 1 of 7 tuning:     global_rf (2h 46m 5.3s)\n\n\ni 2 of 7 tuning:     globalHotID_rf\n\n\n✔ 2 of 7 tuning:     globalHotID_rf (3h 57m 57.2s)\n\n\ni 3 of 7 tuning:     globalID_rf\n\n\n✔ 3 of 7 tuning:     globalID_rf (4h 41m 41.6s)\n\n\ni 4 of 7 tuning:     g2_rf\n\n\n✔ 4 of 7 tuning:     g2_rf (1h 33m 12.5s)\n\n\ni 5 of 7 tuning:     g1_rf\n\n\n✔ 5 of 7 tuning:     g1_rf (1h 20m 26.6s)\n\n\ni 6 of 7 tuning:     g4_rf\n\n\n✔ 6 of 7 tuning:     g4_rf (26m 59.7s)\n\n\ni 7 of 7 tuning:     g3_rf\n\n\n✔ 7 of 7 tuning:     g3_rf (1m 7.6s)\n\ntoc()\n\n53254.012 sec elapsed"
  },
  {
    "objectID": "dengue-model/dengue_mts_all.html#fit",
    "href": "dengue-model/dengue_mts_all.html#fit",
    "title": "Multivariate clustering, all data model",
    "section": "Fit",
    "text": "Fit\nEach workflow will be trained using the tuned hyperparameters, considering the RMSE metric as reference.\nThis procedure creates a list of trained models, containing the fit results and a list of the municipalities used on the training of each workflow.\nThe global workflow is trained with data from all municipalities and the subsets workflows are trained using the respective municipalities list given by the cluster algorithm.\n\ntic()\ntrained_models &lt;- list()\nfor(w in unique(race_results$wflow_id)){\n  best_tune &lt;- race_results %&gt;%\n    extract_workflow_set_result(w) %&gt;%\n    select_best(\"rmse\")\n  \n  final_fit &lt;- race_results %&gt;%\n    extract_workflow(w) %&gt;%\n    finalize_workflow(best_tune) %&gt;%\n    fit(training(tdengue_split))\n  \n  mold &lt;- extract_mold(final_fit)\n  train_ids &lt;- mold$extras$roles$`id variable` %&gt;%\n    distinct() %&gt;%\n    pull() %&gt;%\n    as.character()\n  \n  final_fit &lt;- list(\n    list(\n      \"final_fit\" = final_fit, \n      \"train_ids\" = train_ids\n    )\n  )\n  \n  final_fit &lt;- setNames(final_fit, paste0(w))\n  \n  trained_models &lt;- append(trained_models, final_fit)\n}\ntoc()\n\n3325.492 sec elapsed"
  },
  {
    "objectID": "dengue-model/dengue_mts_all.html#accuracy",
    "href": "dengue-model/dengue_mts_all.html#accuracy",
    "title": "Multivariate clustering, all data model",
    "section": "Accuracy",
    "text": "Accuracy\nAfter training each workflow, the accuracy of the models are obtained applying the fitted models on the testing set.\nFor the global model, all municipalities are using for testing. For the subsets models, only data from the subset’s municipalities are considered for testing.\nThe RMSE metric is obtained for each workflow and municipality.\n\nmodels_accuracy &lt;- tibble()\nfor(t in 1:length(trained_models)){\n  \n  model_tbl &lt;- modeltime_table(trained_models[[t]][[1]]) \n  testing_set &lt;- testing(tdengue_split) %&gt;%\n    filter(mun %in% trained_models[[t]][[2]])\n  \n  calib_tbl &lt;- model_tbl %&gt;%\n      modeltime_calibrate(\n        new_data = testing_set, \n        id       = \"mun\"\n      )\n  \n  res &lt;- calib_tbl %&gt;% \n      modeltime_accuracy(\n        acc_by_id = TRUE, \n        metric_set = metric_set(rmse)\n      )\n  \n  res$.model_id &lt;- word(names(trained_models[t]), 1, sep = \"_\")\n  \n  models_accuracy &lt;- bind_rows(models_accuracy, res)\n}\n\n\nsaveRDS(object = models_accuracy, file = \"mts_all_accuracy.rds\")\n\nThis plot presents the RMSE distribution across the workflows.\n\nggplot(data = models_accuracy, aes(x = .model_id, y = rmse, fill = .model_id)) +\n  geom_boxplot() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nBreakdown\n\nmun_names &lt;- lookup_muni(code_muni = \"all\") %&gt;%\n  mutate(code_muni = substr(code_muni, 0, 6)) %&gt;%\n  mutate(name_muni = paste0(name_muni, \", \", abbrev_state)) %&gt;%\n  select(code_muni, name_muni)\n\nUsing year 2010\n\nmodels_accuracy %&gt;% \n  left_join(mun_names, by = c(\"mun\" = \"code_muni\")) %&gt;%\n  select(.model_id, .model_desc, name_muni, rmse) %&gt;%\n  mutate(rmse = round(rmse, 2)) %&gt;%\n  arrange(.model_id, .model_desc, -rmse) %&gt;%\n  datatable(filter = \"top\")\n\n\n\n\n\n\n\n# models_accuracy %&gt;% \n#   left_join(mun_names, by = c(\"mun\" = \"code_muni\")) %&gt;%\n#   select(.model_id, .model_desc, name_muni, rmse) %&gt;%\n#   mutate(rmse = round(rmse, 2)) %&gt;%\n#   group_by(.model_desc) %&gt;%\n#   mutate(.model_id = case_when(\n#     .model_id != \"global\" ~ \"cluster\",\n#     .default = .model_id\n#   )) %&gt;%\n#   pivot_wider(names_from = .model_id, values_from = rmse) %&gt;%\n#   mutate(dif = round(global - cluster, 2)) %&gt;% \n#   ungroup() %&gt;%\n#   datatable(filter = \"top\")\n\n\n# models_accuracy %&gt;% \n#   left_join(mun_names, by = c(\"mun\" = \"code_muni\")) %&gt;%\n#   select(.model_id, .model_desc, name_muni, rmse) %&gt;%\n#   group_by(.model_desc) %&gt;%\n#   mutate(.model_id = case_when(\n#     .model_id != \"global\" ~ \"cluster\",\n#     .default = .model_id\n#   )) %&gt;%\n#   pivot_wider(names_from = .model_id, values_from = rmse) %&gt;%\n#   mutate(dif = round(global - cluster, 2)) %&gt;% \n#   arrange(.model_desc, dif) %&gt;%\n#   ggplot(aes(x = global, y = cluster, fill = .model_desc, color = dif)) +\n#   geom_point(size = 2, alpha = .3) +\n#   viridis::scale_color_viridis(option = \"inferno\") +\n#   theme_bw() +\n#   labs(x = \"Global model\", y = \"Subset models\", title = \"RMSE error obtained with global and subset training strategies\")"
  },
  {
    "objectID": "dengue-model/dengue_mts_all.html#session-info",
    "href": "dengue-model/dengue_mts_all.html#session-info",
    "title": "Multivariate clustering, all data model",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: CentOS Linux 7 (Core)\n\nMatrix products: default\nBLAS/LAPACK: /home/raphaelfs/miniconda3/envs/quarto/lib/libopenblasp-r0.3.25.so;  LAPACK version 3.11.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=pt_BR.UTF-8        LC_COLLATE=pt_BR.UTF-8    \n [5] LC_MONETARY=pt_BR.UTF-8    LC_MESSAGES=pt_BR.UTF-8   \n [7] LC_PAPER=pt_BR.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=pt_BR.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: America/Sao_Paulo\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] rlang_1.1.1        ranger_0.16.0      sf_1.0-14          DT_0.28           \n [5] geobr_1.8.1        tictoc_1.2         kableExtra_1.3.4   dtwclust_5.5.12   \n [9] dtw_1.23-1         proxy_0.4-27       timetk_2.8.2       modeltime_1.2.5   \n[13] finetune_1.1.0     bonsai_0.2.1       yardstick_1.2.0    workflowsets_1.0.0\n[17] workflows_1.1.3    tune_1.1.2         rsample_1.2.0      recipes_1.0.6     \n[21] parsnip_1.1.0      modeldata_1.1.0    infer_1.0.4        dials_1.2.0       \n[25] scales_1.2.1       broom_1.0.4        tidymodels_1.0.0   arrow_12.0.0      \n[29] lubridate_1.9.2    forcats_1.0.0      stringr_1.5.0      dplyr_1.1.2       \n[33] purrr_1.0.1        readr_2.1.4        tidyr_1.3.0        tibble_3.2.1      \n[37] ggplot2_3.4.2      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n  [1] rstudioapi_0.14     jsonlite_1.8.5      magrittr_2.0.3     \n  [4] modeltools_0.2-23   farver_2.1.1        nloptr_2.0.3       \n  [7] rmarkdown_2.22      vctrs_0.6.3         minqa_1.2.6        \n [10] webshot_0.5.4       htmltools_0.5.5     curl_5.0.2         \n [13] sass_0.4.6          parallelly_1.36.0   StanHeaders_2.26.26\n [16] bslib_0.4.2         KernSmooth_2.23-21  htmlwidgets_1.6.2  \n [19] plyr_1.8.8          cachem_1.0.8        zoo_1.8-12         \n [22] mime_0.12           lifecycle_1.0.3     iterators_1.0.14   \n [25] pkgconfig_2.0.3     Matrix_1.5-4.1      R6_2.5.1           \n [28] fastmap_1.1.1       future_1.32.0       shiny_1.7.4        \n [31] clue_0.3-64         digest_0.6.31       colorspace_2.1-0   \n [34] furrr_0.3.1         RSpectra_0.16-1     crosstalk_1.2.0    \n [37] labeling_0.4.2      fansi_1.0.4         timechange_0.2.0   \n [40] httr_1.4.6          compiler_4.3.2      doParallel_1.0.17  \n [43] bit64_4.0.5         withr_2.5.0         backports_1.4.1    \n [46] DBI_1.1.3           MASS_7.3-60         lava_1.7.2.1       \n [49] classInt_0.4-9      units_0.8-2         tools_4.3.2        \n [52] httpuv_1.6.11       flexclust_1.4-1     future.apply_1.11.0\n [55] nnet_7.3-19         glue_1.6.2          nlme_3.1-162       \n [58] promises_1.2.0.1    grid_4.3.2          cluster_2.1.4      \n [61] reshape2_1.4.4      generics_0.1.3      gtable_0.3.3       \n [64] tzdb_0.4.0          class_7.3-22        data.table_1.14.8  \n [67] hms_1.1.3           xml2_1.3.4          utf8_1.2.3         \n [70] ggrepel_0.9.3       foreach_1.5.2       pillar_1.9.0       \n [73] later_1.3.1         splines_4.3.2       lhs_1.1.6          \n [76] lattice_0.21-8      survival_3.5-5      bit_4.0.5          \n [79] tidyselect_1.2.0    knitr_1.43          svglite_2.1.1      \n [82] stats4_4.3.2        xfun_0.39           hardhat_1.3.0      \n [85] timeDate_4022.108   stringi_1.7.12      boot_1.3-28.1      \n [88] DiceDesign_1.9      yaml_2.3.7          evaluate_0.21      \n [91] codetools_0.2-19    cli_3.6.1           RcppParallel_5.1.7 \n [94] rpart_4.1.19        xtable_1.8-4        systemfonts_1.0.4  \n [97] jquerylib_0.1.4     munsell_0.5.0       Rcpp_1.0.10        \n[100] globals_0.16.2      parallel_4.3.2      ellipsis_0.3.2     \n[103] gower_1.0.1         assertthat_0.2.1    prettyunits_1.1.1  \n[106] lme4_1.1-35.1       GPfit_1.0-8         listenv_0.9.0      \n[109] viridisLite_0.4.2   ipred_0.9-13        e1071_1.7-13       \n[112] xts_0.13.1          prodlim_2019.11.13  rvest_1.0.3        \n[115] shinyjs_2.1.0"
  },
  {
    "objectID": "dengue-model/dengue_mts_all.html#useful-links",
    "href": "dengue-model/dengue_mts_all.html#useful-links",
    "title": "Multivariate clustering, all data model",
    "section": "Useful links",
    "text": "Useful links\n\nhttps://business-science.github.io/modeltime/articles/modeling-panel-data.html\nhttps://blog.bguarisma.com/series/time-series-forecasting"
  },
  {
    "objectID": "dengue-model/dengue_mts_climate.html",
    "href": "dengue-model/dengue_mts_climate.html",
    "title": "Multivariate clustering, climate model",
    "section": "",
    "text": "This notebooks aims to reproduce the methodology of the paper submitted to the SBD2023 conference, implementing the global and subset modelling with a multivariate approach.\nThis methodology aims to compare the performance of models trained with data from all municipalities time-series (global models) and models trained with subset of municipalities time-series (subset models).\nThose subsets were created by a clustering algorithm considering the climate time-series."
  },
  {
    "objectID": "dengue-model/dengue_mts_climate.html#packages",
    "href": "dengue-model/dengue_mts_climate.html#packages",
    "title": "Multivariate clustering, climate model",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(tidymodels)\nlibrary(bonsai)\nlibrary(finetune)\nlibrary(modeltime)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nlibrary(geobr)\nlibrary(DT)\nlibrary(sf)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-model/dengue_mts_climate.html#load-data",
    "href": "dengue-model/dengue_mts_climate.html#load-data",
    "title": "Multivariate clustering, climate model",
    "section": "Load data",
    "text": "Load data\n\ntdengue &lt;- read_parquet(file = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n  select(mun, date, starts_with(c(\"cases\", \"tmax\", \"tmin\", \"prec\"))) %&gt;%\n  drop_na()\n\n\n\n\n\n\n\nNote\n\n\n\n\nNA values are created when the lagged variables were calculated. The rows containing those NA values are dropped due machine learning regressors constraints.\nCases, maximum temperature, minimum temperature, precipitation variables are loaded, and also their time-lagged variables (from 1 to 6 weeks).\n\n\n\n\nglimpse(tdengue)\n\nRows: 329,982\nColumns: 33\n$ mun           &lt;chr&gt; \"110002\", \"110002\", \"110002\", \"110002\", \"110002\", \"11000…\n$ date          &lt;date&gt; 2011-01-16, 2011-01-23, 2011-01-23, 2011-01-30, 2011-01…\n$ cases         &lt;dbl&gt; 0.07830184, 0.66762618, 0.66762618, 2.43559920, 2.435599…\n$ cases_raw     &lt;dbl&gt; 1, 2, 2, 5, 5, 0, 0, 1, 1, 2, 2, 1, 1, 0, 0, 2, 2, 1, 1,…\n$ cases_cum_raw &lt;dbl&gt; 10, 12, 14, 19, 24, 24, 24, 25, 26, 28, 30, 31, 32, 32, …\n$ cases_cum     &lt;dbl&gt; -1.419910, -1.410558, -1.401206, -1.377827, -1.354447, -…\n$ cases_lag1    &lt;dbl&gt; 0.07830184, 0.07830184, 0.66762618, 0.66762618, 2.435599…\n$ cases_lag2    &lt;dbl&gt; 0.66762618, 0.07830184, 0.07830184, 0.66762618, 0.667626…\n$ cases_lag3    &lt;dbl&gt; 0.66762618, 0.66762618, 0.07830184, 0.07830184, 0.667626…\n$ cases_lag4    &lt;dbl&gt; 0.66762618, 0.66762618, 0.66762618, 0.07830184, 0.078301…\n$ cases_lag5    &lt;dbl&gt; 0.66762618, 0.66762618, 0.66762618, 0.66762618, 0.078301…\n$ cases_lag6    &lt;dbl&gt; -0.51102251, 0.66762618, 0.66762618, 0.66762618, 0.66762…\n$ tmax          &lt;dbl&gt; 0.52569297, 0.75229054, 0.75229054, 0.83110709, 0.831107…\n$ tmax_lag1     &lt;dbl&gt; 0.52569297, 0.52569297, 0.75229054, 0.75229054, 0.831107…\n$ tmax_lag2     &lt;dbl&gt; 0.39269005, 0.52569297, 0.52569297, 0.75229054, 0.752290…\n$ tmax_lag3     &lt;dbl&gt; 0.39269005, 0.39269005, 0.52569297, 0.52569297, 0.752290…\n$ tmax_lag4     &lt;dbl&gt; 0.29909540, 0.39269005, 0.39269005, 0.52569297, 0.525692…\n$ tmax_lag5     &lt;dbl&gt; 0.29909540, 0.29909540, 0.39269005, 0.39269005, 0.525692…\n$ tmax_lag6     &lt;dbl&gt; -14.51841512, 0.29909540, 0.29909540, 0.39269005, 0.3926…\n$ tmin          &lt;dbl&gt; 1.0212567, 0.9886102, 0.9886102, 1.0072654, 1.0072654, 1…\n$ tmin_lag1     &lt;dbl&gt; 1.0212567, 1.0212567, 0.9886102, 0.9886102, 1.0072654, 1…\n$ tmin_lag2     &lt;dbl&gt; 1.0585670, 1.0212567, 1.0212567, 0.9886102, 0.9886102, 1…\n$ tmin_lag3     &lt;dbl&gt; 1.0585670, 1.0585670, 1.0212567, 1.0212567, 0.9886102, 0…\n$ tmin_lag4     &lt;dbl&gt; 0.9932740, 1.0585670, 1.0585670, 1.0212567, 1.0212567, 0…\n$ tmin_lag5     &lt;dbl&gt; 0.9932740, 0.9932740, 1.0585670, 1.0585670, 1.0212567, 1…\n$ tmin_lag6     &lt;dbl&gt; -8.6560935, 0.9932740, 0.9932740, 1.0585670, 1.0585670, …\n$ prec          &lt;dbl&gt; 1.5673247, 1.1822375, 1.1822375, 0.9472381, 0.9472381, 1…\n$ prec_lag1     &lt;dbl&gt; 1.5673247, 1.5673247, 1.1822375, 1.1822375, 0.9472381, 0…\n$ prec_lag2     &lt;dbl&gt; 1.6101183, 1.5673247, 1.5673247, 1.1822375, 1.1822375, 0…\n$ prec_lag3     &lt;dbl&gt; 1.6101183, 1.6101183, 1.5673247, 1.5673247, 1.1822375, 1…\n$ prec_lag4     &lt;dbl&gt; 1.5969131, 1.6101183, 1.6101183, 1.5673247, 1.5673247, 1…\n$ prec_lag5     &lt;dbl&gt; 1.5969131, 1.5969131, 1.6101183, 1.6101183, 1.5673247, 1…\n$ prec_lag6     &lt;dbl&gt; -1.9551115, 1.5969131, 1.5969131, 1.6101183, 1.6101183, …"
  },
  {
    "objectID": "dengue-model/dengue_mts_climate.html#clustering",
    "href": "dengue-model/dengue_mts_climate.html#clustering",
    "title": "Multivariate clustering, climate model",
    "section": "Clustering",
    "text": "Clustering\nHere we load the results from this clustering notebook.\n\nclust_res &lt;- readRDS(\"../dengue-cluster/m_clim_cluster_ids.rds\") %&gt;%\n  st_drop_geometry() %&gt;%\n  select(mun = code_muni, group)\n\ntable(clust_res$group)\n\n\n  1   2   3   4   5 \n127  97  25  41  43 \n\n\nJoin clustering results with bundled dataset.\n\ntdengue &lt;- left_join(tdengue, clust_res, by = \"mun\") %&gt;%\n  relocate(group, .after = mun)\n\nCheck for NAs.\n\ntable(is.na(tdengue$group))\n\n\n FALSE \n329982"
  },
  {
    "objectID": "dengue-model/dengue_mts_climate.html#train-and-test-split",
    "href": "dengue-model/dengue_mts_climate.html#train-and-test-split",
    "title": "Multivariate clustering, climate model",
    "section": "Train and test split",
    "text": "Train and test split\nSplit the data into training and testing. The function time_series_split handles the time series, not shuffling them, and considering the panel data format, as depicted in the message about overlapping timestamps detected.\nThe last two years data will be used as the training set.\n\ntdengue_split &lt;- tdengue %&gt;%\n  time_series_split(\n    date_var = date, \n    assess = 52*2,\n    cumulative = TRUE\n  )\n\nData is not ordered by the 'date_var'. Resamples will be arranged by `date`.\n\n\nOverlapping Timestamps Detected. Processing overlapping time series together using sliding windows.\n\ntdengue_split\n\n&lt;Analysis/Assess/Total&gt;\n&lt;261123/68859/329982&gt;\n\n\n\nK-folds\nThe training set will be split into k folds.\n\ntdengue_split_folds &lt;- training(tdengue_split) %&gt;%\n  vfold_cv(v = 5)"
  },
  {
    "objectID": "dengue-model/dengue_mts_climate.html#recipes",
    "href": "dengue-model/dengue_mts_climate.html#recipes",
    "title": "Multivariate clustering, climate model",
    "section": "Recipes",
    "text": "Recipes\nThe global and subset models training specification are called recipes. The procedure bellow creates a list of those recipes.\n\nrecipes_list &lt;- list()\n\n\nGlobal\nThe global training recipe uses data from all municipalities for training the models.\n\nThe date and group variables are removed prior training\nThe municipality identification variable is treated as an Id variable, taking no place as a predictor in the training process\n\n\nrecipe_global &lt;- recipe(cases ~ ., data = training(tdengue_split)) %&gt;%\n  step_rm(date, group) %&gt;%\n  update_role(mun, new_role = \"id variable\")\n\nrecipes_list &lt;- append(recipes_list, list(global = recipe_global))\n\nrm(recipe_global)\n\n\n\nGroups\n\nFor each group created by the clustering process, a specific training recipe will be created. For this, the first step is to filter rows from the training set, keeping only the rows belonging to the group in the loop\nThe date and group variables are removed prior to training\nThe municipality identification variable is treated as an Id variable, taking no place as a predictor in the training process\n\n\nfor(g in unique(tdengue$group)){\n  tmp &lt;- recipe(cases ~ ., data = training(tdengue_split)) %&gt;%\n    step_filter(group == !!g) %&gt;%\n    step_rm(date, group) %&gt;%\n    update_role(mun, new_role = \"id variable\")\n  \n  tmp &lt;- list(tmp)\n  tmp &lt;- setNames(tmp, paste0(\"g\", g))\n  \n  recipes_list &lt;- append(recipes_list, tmp)\n  \n  rm(tmp)\n}"
  },
  {
    "objectID": "dengue-model/dengue_mts_climate.html#regressors-specification",
    "href": "dengue-model/dengue_mts_climate.html#regressors-specification",
    "title": "Multivariate clustering, climate model",
    "section": "Regressors specification",
    "text": "Regressors specification\n\nRandom forest\nA Random Forest specification using the ranger engine. The trees and min_n hyperparameters will be tuned.\n\nrf_spec &lt;- rand_forest(\n  trees = tune(),\n  min_n = tune()\n) %&gt;%\n  set_engine(\"ranger\") %&gt;%\n  set_mode(\"regression\")\n\n\n\nWorkflow set\nThis step creates a workflow set, combining the training recipes and regressors specifications.\n\nall_workflows &lt;- workflow_set(\n  preproc = recipes_list, \n  models = list(rf = rf_spec), \n  cross = TRUE\n)"
  },
  {
    "objectID": "dengue-model/dengue_mts_climate.html#tune",
    "href": "dengue-model/dengue_mts_climate.html#tune",
    "title": "Multivariate clustering, climate model",
    "section": "Tune",
    "text": "Tune\nThis step tunes the training hyperparameters of each workflow.\n\ndoParallel::registerDoParallel()\n\ntic()\nrace_results &lt;- \n  all_workflows %&gt;%\n  workflow_map(\n    \"tune_race_anova\",\n    seed = 345,\n    resamples = tdengue_split_folds,\n    grid = 10,\n    control = control_race(parallel_over = \"everything\"),\n    verbose = TRUE\n  )\n\ni 1 of 6 tuning:     global_rf\n\n\n✔ 1 of 6 tuning:     global_rf (2h 12m 49.1s)\n\n\ni 2 of 6 tuning:     g1_rf\n\n\n✔ 2 of 6 tuning:     g1_rf (31m 25.2s)\n\n\ni 3 of 6 tuning:     g2_rf\n\n\n✔ 3 of 6 tuning:     g2_rf (31m 8.5s)\n\n\ni 4 of 6 tuning:     g3_rf\n\n\n✔ 4 of 6 tuning:     g3_rf (3m 45.8s)\n\n\ni 5 of 6 tuning:     g4_rf\n\n\n✔ 5 of 6 tuning:     g4_rf (8m 5.6s)\n\n\ni 6 of 6 tuning:     g5_rf\n\n\n✔ 6 of 6 tuning:     g5_rf (8m 13.9s)\n\ntoc()\n\n12931.669 sec elapsed"
  },
  {
    "objectID": "dengue-model/dengue_mts_climate.html#fit",
    "href": "dengue-model/dengue_mts_climate.html#fit",
    "title": "Multivariate clustering, climate model",
    "section": "Fit",
    "text": "Fit\nEach workflow will be trained using the tuned hyperparameters, considering the RMSE metric as reference.\nThis procedure creates a list of trained models, containing the fit results and a list of the municipalities used on the training of each workflow.\nThe global workflow is trained with data from all municipalities and the subsets workflows are trained using the respective municipalities list given by the cluster algorithm.\n\ntic()\ntrained_models &lt;- list()\nfor(w in unique(race_results$wflow_id)){\n  best_tune &lt;- race_results %&gt;%\n    extract_workflow_set_result(w) %&gt;%\n    select_best(\"rmse\")\n  \n  final_fit &lt;- race_results %&gt;%\n    extract_workflow(w) %&gt;%\n    finalize_workflow(best_tune) %&gt;%\n    fit(training(tdengue_split))\n  \n  mold &lt;- extract_mold(final_fit)\n  train_ids &lt;- mold$extras$roles$`id variable` %&gt;%\n    distinct() %&gt;%\n    pull() %&gt;%\n    as.character()\n  \n  final_fit &lt;- list(\n    list(\n      \"final_fit\" = final_fit, \n      \"train_ids\" = train_ids\n    )\n  )\n  \n  final_fit &lt;- setNames(final_fit, paste0(w))\n  \n  trained_models &lt;- append(trained_models, final_fit)\n}\ntoc()\n\n5065.569 sec elapsed"
  },
  {
    "objectID": "dengue-model/dengue_mts_climate.html#accuracy",
    "href": "dengue-model/dengue_mts_climate.html#accuracy",
    "title": "Multivariate clustering, climate model",
    "section": "Accuracy",
    "text": "Accuracy\nAfter training each workflow, the accuracy of the models are obtained applying the fitted models on the testing set.\nFor the global model, all municipalities are using for testing. For the subsets models, only data from the subset’s municipalities are considered for testing.\nThe RMSE metric is obtained for each workflow and municipality.\n\nmodels_accuracy &lt;- tibble()\nfor(t in 1:length(trained_models)){\n  \n  model_tbl &lt;- modeltime_table(trained_models[[t]][[1]]) \n  testing_set &lt;- testing(tdengue_split) %&gt;%\n    filter(mun %in% trained_models[[t]][[2]])\n  \n  calib_tbl &lt;- model_tbl %&gt;%\n      modeltime_calibrate(\n        new_data = testing_set, \n        id       = \"mun\"\n      )\n  \n  res &lt;- calib_tbl %&gt;% \n      modeltime_accuracy(\n        acc_by_id = TRUE, \n        metric_set = metric_set(rmse, mape)\n      )\n  \n  res$.model_id &lt;- word(names(trained_models[t]), 1, sep = \"_\")\n  \n  models_accuracy &lt;- bind_rows(models_accuracy, res)\n}\n\nℹ We have detected a possible intermittent series, you can change the default metric set to the extended_forecast_accuracy_metric_set() containing the MAAPE metric, which is more appropriate for this type of series.\nℹ We have detected a possible intermittent series, you can change the default metric set to the extended_forecast_accuracy_metric_set() containing the MAAPE metric, which is more appropriate for this type of series.\n\n\nThis plot presents the RMSE distribution across the workflows.\n\nggplot(data = models_accuracy, aes(x = .model_id, y = rmse, fill = .model_desc)) +\n  geom_boxplot()\n\n\n\n\n\nBreakdown\n\nmun_names &lt;- lookup_muni(code_muni = \"all\") %&gt;%\n  mutate(code_muni = substr(code_muni, 0, 6)) %&gt;%\n  mutate(name_muni = paste0(name_muni, \", \", abbrev_state)) %&gt;%\n  select(code_muni, name_muni)\n\nUsing year 2010\n\nmodels_accuracy %&gt;% \n  left_join(mun_names, by = c(\"mun\" = \"code_muni\")) %&gt;%\n  select(.model_id, .model_desc, name_muni, rmse) %&gt;%\n  mutate(rmse = round(rmse, 2)) %&gt;%\n  arrange(.model_id, .model_desc, -rmse) %&gt;%\n  datatable(filter = \"top\")\n\n\n\n\n\n\n\nmodels_accuracy %&gt;% \n  left_join(mun_names, by = c(\"mun\" = \"code_muni\")) %&gt;%\n  select(.model_id, .model_desc, name_muni, rmse) %&gt;%\n  mutate(rmse = round(rmse, 2)) %&gt;%\n  group_by(.model_desc) %&gt;%\n  mutate(.model_id = case_when(\n    .model_id != \"global\" ~ \"cluster\",\n    .default = .model_id\n  )) %&gt;%\n  pivot_wider(names_from = .model_id, values_from = rmse) %&gt;%\n  mutate(dif = round(global - cluster, 2)) %&gt;% \n  ungroup() %&gt;%\n  datatable(filter = \"top\")\n\n\n\n\n\n\n\nmodels_accuracy %&gt;% \n  left_join(mun_names, by = c(\"mun\" = \"code_muni\")) %&gt;%\n  select(.model_id, .model_desc, name_muni, rmse) %&gt;%\n  group_by(.model_desc) %&gt;%\n  mutate(.model_id = case_when(\n    .model_id != \"global\" ~ \"cluster\",\n    .default = .model_id\n  )) %&gt;%\n  pivot_wider(names_from = .model_id, values_from = rmse) %&gt;%\n  mutate(dif = round(global - cluster, 2)) %&gt;% \n  arrange(.model_desc, dif) %&gt;%\n  ggplot(aes(x = global, y = cluster, fill = .model_desc, color = dif)) +\n  geom_point(size = 2, alpha = .3) +\n  viridis::scale_color_viridis(option = \"inferno\") +\n  theme_bw() +\n  labs(x = \"Global model\", y = \"Subset models\", title = \"RMSE error obtained with global and subset training strategies\")"
  },
  {
    "objectID": "dengue-model/dengue_mts_climate.html#session-info",
    "href": "dengue-model/dengue_mts_climate.html#session-info",
    "title": "Multivariate clustering, climate model",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: CentOS Linux 7 (Core)\n\nMatrix products: default\nBLAS/LAPACK: /home/raphaelfs/miniconda3/envs/quarto/lib/libopenblasp-r0.3.25.so;  LAPACK version 3.11.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=pt_BR.UTF-8        LC_COLLATE=pt_BR.UTF-8    \n [5] LC_MONETARY=pt_BR.UTF-8    LC_MESSAGES=pt_BR.UTF-8   \n [7] LC_PAPER=pt_BR.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=pt_BR.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: America/Sao_Paulo\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] rlang_1.1.1        ranger_0.16.0      sf_1.0-14          DT_0.28           \n [5] geobr_1.8.1        tictoc_1.2         kableExtra_1.3.4   dtwclust_5.5.12   \n [9] dtw_1.23-1         proxy_0.4-27       timetk_2.8.2       modeltime_1.2.5   \n[13] finetune_1.1.0     bonsai_0.2.1       yardstick_1.2.0    workflowsets_1.0.0\n[17] workflows_1.1.3    tune_1.1.2         rsample_1.2.0      recipes_1.0.6     \n[21] parsnip_1.1.0      modeldata_1.1.0    infer_1.0.4        dials_1.2.0       \n[25] scales_1.2.1       broom_1.0.4        tidymodels_1.0.0   arrow_12.0.0      \n[29] lubridate_1.9.2    forcats_1.0.0      stringr_1.5.0      dplyr_1.1.2       \n[33] purrr_1.0.1        readr_2.1.4        tidyr_1.3.0        tibble_3.2.1      \n[37] ggplot2_3.4.2      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n  [1] rstudioapi_0.14     jsonlite_1.8.5      magrittr_2.0.3     \n  [4] modeltools_0.2-23   farver_2.1.1        nloptr_2.0.3       \n  [7] rmarkdown_2.22      vctrs_0.6.3         minqa_1.2.6        \n [10] webshot_0.5.4       htmltools_0.5.5     curl_5.0.2         \n [13] sass_0.4.6          parallelly_1.36.0   StanHeaders_2.26.26\n [16] bslib_0.4.2         KernSmooth_2.23-21  htmlwidgets_1.6.2  \n [19] plyr_1.8.8          cachem_1.0.8        zoo_1.8-12         \n [22] mime_0.12           lifecycle_1.0.3     iterators_1.0.14   \n [25] pkgconfig_2.0.3     Matrix_1.5-4.1      R6_2.5.1           \n [28] fastmap_1.1.1       future_1.32.0       shiny_1.7.4        \n [31] clue_0.3-64         digest_0.6.31       colorspace_2.1-0   \n [34] furrr_0.3.1         RSpectra_0.16-1     crosstalk_1.2.0    \n [37] labeling_0.4.2      fansi_1.0.4         timechange_0.2.0   \n [40] httr_1.4.6          compiler_4.3.2      doParallel_1.0.17  \n [43] bit64_4.0.5         withr_2.5.0         backports_1.4.1    \n [46] viridis_0.6.3       DBI_1.1.3           MASS_7.3-60        \n [49] lava_1.7.2.1        classInt_0.4-9      units_0.8-2        \n [52] tools_4.3.2         httpuv_1.6.11       flexclust_1.4-1    \n [55] future.apply_1.11.0 nnet_7.3-19         glue_1.6.2         \n [58] nlme_3.1-162        promises_1.2.0.1    grid_4.3.2         \n [61] cluster_2.1.4       reshape2_1.4.4      generics_0.1.3     \n [64] gtable_0.3.3        tzdb_0.4.0          class_7.3-22       \n [67] data.table_1.14.8   hms_1.1.3           xml2_1.3.4         \n [70] utf8_1.2.3          ggrepel_0.9.3       foreach_1.5.2      \n [73] pillar_1.9.0        later_1.3.1         splines_4.3.2      \n [76] lhs_1.1.6           lattice_0.21-8      survival_3.5-5     \n [79] bit_4.0.5           tidyselect_1.2.0    knitr_1.43         \n [82] gridExtra_2.3       svglite_2.1.1       stats4_4.3.2       \n [85] xfun_0.39           hardhat_1.3.0       timeDate_4022.108  \n [88] stringi_1.7.12      boot_1.3-28.1       DiceDesign_1.9     \n [91] yaml_2.3.7          evaluate_0.21       codetools_0.2-19   \n [94] cli_3.6.1           RcppParallel_5.1.7  rpart_4.1.19       \n [97] xtable_1.8-4        systemfonts_1.0.4   jquerylib_0.1.4    \n[100] munsell_0.5.0       Rcpp_1.0.10         globals_0.16.2     \n[103] parallel_4.3.2      ellipsis_0.3.2      gower_1.0.1        \n[106] assertthat_0.2.1    prettyunits_1.1.1   lme4_1.1-35.1      \n[109] GPfit_1.0-8         listenv_0.9.0       viridisLite_0.4.2  \n[112] ipred_0.9-13        e1071_1.7-13        xts_0.13.1         \n[115] prodlim_2019.11.13  rvest_1.0.3         shinyjs_2.1.0"
  },
  {
    "objectID": "dengue-model/dengue_mts_climate.html#useful-links",
    "href": "dengue-model/dengue_mts_climate.html#useful-links",
    "title": "Multivariate clustering, climate model",
    "section": "Useful links",
    "text": "Useful links\n\nhttps://business-science.github.io/modeltime/articles/modeling-panel-data.html\nhttps://blog.bguarisma.com/series/time-series-forecasting"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_class.html",
    "href": "dengue-model/dengue_weather_lag_class.html",
    "title": "Classification task",
    "section": "",
    "text": "This notebook models the relationship between dengue cases and weather variables using a classification of dengue cases as outbreak level (anomaly) or base level."
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_class.html#packages",
    "href": "dengue-model/dengue_weather_lag_class.html#packages",
    "title": "Classification task",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(rpart.plot)\nlibrary(vip)"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_class.html#dengue-data",
    "href": "dengue-model/dengue_weather_lag_class.html#dengue-data",
    "title": "Classification task",
    "section": "Dengue data",
    "text": "Dengue data\n\nSubset and aggregate\nRio de Janeiro, RJ, aggregated by month.\n\ndengue_rj &lt;- open_dataset(\"../dengue-data/parquet_aggregated/dengue_md.parquet\") %&gt;%\n  filter(mun == 330455) %&gt;%\n  collect() %&gt;%\n  summarise_by_time(.date_var = date, .by = \"month\", freq = sum(freq, na.rm = TRUE))\n\n\nplot_time_series(.data = dengue_rj, .date_var = date, .value = freq, .smooth = FALSE, .title = \"Dengue, absolute number of cases\")"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_class.html#classify",
    "href": "dengue-model/dengue_weather_lag_class.html#classify",
    "title": "Classification task",
    "section": "Classify",
    "text": "Classify\n\nplot_anomaly_diagnostics(.data = dengue_rj, .date_var = date, .value = freq, .alpha = 0.10, .max_anomalies = 1, .legend_show = FALSE)\n\nfrequency = 12 observations per 1 year\n\n\ntrend = 60 observations per 5 years\n\n\n\n\n\n\n\ndengue_rj_anom &lt;- tk_anomaly_diagnostics(.data = dengue_rj, .date_var = date, .value = freq, .alpha = 0.10, .max_anomalies = 1) %&gt;%\n  select(date, anomaly) %&gt;%\n  mutate(anomaly = as.factor(anomaly))\n\nfrequency = 12 observations per 1 year\n\n\ntrend = 60 observations per 5 years\n\n\n\ndengue_rj &lt;- inner_join(dengue_rj, dengue_rj_anom) \n\nJoining with `by = join_by(date)`\n\n\n\nprop.table(table(dengue_rj$anomaly))\n\n\n       No       Yes \n0.8257576 0.1742424"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_class.html#weather-data",
    "href": "dengue-model/dengue_weather_lag_class.html#weather-data",
    "title": "Classification task",
    "section": "Weather data",
    "text": "Weather data\n\ntmax &lt;- open_dataset(sources = \"../weather-data/parquet/brdwgd/tmax.parquet\") %&gt;%\n  filter(code_muni == 3304557) %&gt;%\n  filter(name == \"Tmax_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue_rj$date) & date &lt;= max(dengue_rj$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"month\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(tmax = value)\n\nprec &lt;- open_dataset(sources = \"../weather-data/parquet/brdwgd/pr.parquet\") %&gt;%\n  filter(code_muni == 3304557) %&gt;%\n  filter(name == \"pr_sum\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue_rj$date) & date &lt;= max(dengue_rj$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"month\", value = sum(value, na.rm = TRUE)) %&gt;%\n  rename(prec = value)\n\nprec_avg &lt;- open_dataset(sources = \"../weather-data/parquet/brdwgd/pr.parquet\") %&gt;%\n  filter(code_muni == 3304557) %&gt;%\n  filter(name == \"pr_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue_rj$date) & date &lt;= max(dengue_rj$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"month\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(prec_avg = value)\n\nrh &lt;- open_dataset(sources = \"../weather-data/parquet/brdwgd/rh.parquet\") %&gt;%\n  filter(code_muni == 3304557) %&gt;%\n  filter(name == \"RH_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue_rj$date) & date &lt;= max(dengue_rj$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"month\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(rh = value)\n\nwind &lt;- open_dataset(sources = \"../weather-data/parquet/brdwgd/u2.parquet\") %&gt;%\n  filter(code_muni == 3304557) %&gt;%\n  filter(name == \"u2_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue_rj$date) & date &lt;= max(dengue_rj$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"month\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(wind = value)\n\n\nplot_time_series(.data = tmax, .date_var = date, .value = tmax, .smooth = FALSE, .title = \"Max temp, average\")\n\n\n\n\n\n\nplot_time_series(.data = prec, .date_var = date, .value = prec, .smooth = FALSE, .title = \"Precipitation, sum\")\n\n\n\n\n\n\nplot_time_series(.data = prec_avg, .date_var = date, .value = prec_avg, .smooth = FALSE, .title = \"Precipitation, average\")\n\n\n\n\n\n\nplot_time_series(.data = rh, .date_var = date, .value = rh, .smooth = FALSE, .title = \"Relative humidity, average\")\n\n\n\n\n\n\nplot_time_series(.data = wind, .date_var = date, .value = wind, .smooth = FALSE, .title = \"Wind, average\")"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_class.html#join-data",
    "href": "dengue-model/dengue_weather_lag_class.html#join-data",
    "title": "Classification task",
    "section": "Join data",
    "text": "Join data\n\nres &lt;- inner_join(x = dengue_rj, y = tmax, by = \"date\") %&gt;%\n  inner_join(prec, by = \"date\") %&gt;%\n  inner_join(prec_avg, by = \"date\") %&gt;%\n  inner_join(rh, by = \"date\") %&gt;%\n  inner_join(wind, by = \"date\") %&gt;%\n  select(date, anomaly, tmax, prec, rh, wind)"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_class.html#decision-tree",
    "href": "dengue-model/dengue_weather_lag_class.html#decision-tree",
    "title": "Classification task",
    "section": "Decision tree",
    "text": "Decision tree\n\nPrepare data\n\nRemove date\nLag variables: 12 months\n\n\nres_prep &lt;- res %&gt;%\n  select(-date) %&gt;%\n  tk_augment_lags(.value = c(tmax, prec, rh, wind), .lags = 1:12)\n\n\n\nParameters\n\ntree_spec &lt;- decision_tree() %&gt;%\n  set_engine(\"rpart\") %&gt;%\n  set_mode(\"classification\")"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_class.html#fit-model",
    "href": "dengue-model/dengue_weather_lag_class.html#fit-model",
    "title": "Classification task",
    "section": "Fit model",
    "text": "Fit model\n\nfit1 &lt;- tree_spec %&gt;%\n  fit(anomaly ~ ., data = res_prep, model = TRUE)\n\n\nfit1 %&gt;% extract_fit_engine() %&gt;%\n  rpart.plot(roundint = FALSE)\n\n\n\n\n\naugment(fit1, new_data = res_prep) %&gt;%\n    conf_mat(truth = anomaly, estimate = .pred_class)\n\n          Truth\nPrediction No Yes\n       No  86   7\n       Yes  6  16\n\n\n\naugment(fit1, new_data = res_prep) %&gt;%\n    accuracy(truth = anomaly, estimate = .pred_class)\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy binary         0.887\n\n\n\nfit1 %&gt;% \n  extract_fit_engine() %&gt;% \n  vip()"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_class.html#session-info",
    "href": "dengue-model/dengue_weather_lag_class.html#session-info",
    "title": "Classification task",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.1.2 (2021-11-01)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0\nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] vip_0.3.2          rpart.plot_3.1.1   rpart_4.1.16       timetk_2.8.3      \n [5] arrow_12.0.1       yardstick_1.2.0    workflowsets_1.0.1 workflows_1.1.3   \n [9] tune_1.1.1         rsample_1.1.1      recipes_1.0.6      parsnip_1.1.0     \n[13] modeldata_1.1.0    infer_1.0.4        dials_1.2.0        scales_1.2.1      \n[17] broom_1.0.5        tidymodels_1.1.0   lubridate_1.9.2    forcats_1.0.0     \n[21] stringr_1.5.0      dplyr_1.1.2        purrr_1.0.1        readr_2.1.4       \n[25] tidyr_1.3.0        tibble_3.2.1       ggplot2_3.4.2      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n [1] xts_0.13.1          bit64_4.0.5         httr_1.4.6         \n [4] DiceDesign_1.9      tools_4.1.2         backports_1.4.1    \n [7] utf8_1.2.3          R6_2.5.1            lazyeval_0.2.2     \n[10] colorspace_2.1-0    nnet_7.3-17         withr_2.5.0        \n[13] gridExtra_2.3       tidyselect_1.2.0    bit_4.0.5          \n[16] compiler_4.1.2      cli_3.6.1           plotly_4.10.2      \n[19] labeling_0.4.2      digest_0.6.32       rmarkdown_2.23     \n[22] pkgconfig_2.0.3     htmltools_0.5.5     parallelly_1.36.0  \n[25] lhs_1.1.6           fastmap_1.1.1       htmlwidgets_1.6.2  \n[28] rlang_1.1.1         rstudioapi_0.14     farver_2.1.1       \n[31] generics_0.1.3      zoo_1.8-12          jsonlite_1.8.7     \n[34] crosstalk_1.2.0     magrittr_2.0.3      Matrix_1.5-4.1     \n[37] Rcpp_1.0.10         munsell_0.5.0       fansi_1.0.4        \n[40] GPfit_1.0-8         lifecycle_1.0.3     furrr_0.3.1        \n[43] stringi_1.7.12      yaml_2.3.7          MASS_7.3-55        \n[46] grid_4.1.2          parallel_4.1.2      listenv_0.9.0      \n[49] lattice_0.20-45     splines_4.1.2       hms_1.1.3          \n[52] knitr_1.43          pillar_1.9.0        future.apply_1.11.0\n[55] codetools_0.2-18    glue_1.6.2          evaluate_0.21      \n[58] data.table_1.14.8   vctrs_0.6.3         tzdb_0.4.0         \n[61] foreach_1.5.2       gtable_0.3.3        future_1.33.0      \n[64] assertthat_0.2.1    xfun_0.39           gower_1.0.1        \n[67] prodlim_2023.03.31  viridisLite_0.4.2   class_7.3-20       \n[70] survival_3.2-13     timeDate_4022.108   iterators_1.0.14   \n[73] hardhat_1.3.0       lava_1.7.2.1        timechange_0.2.0   \n[76] globals_0.16.2      ellipsis_0.3.2      ipred_0.9-14"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_reg.html",
    "href": "dengue-model/dengue_weather_lag_reg.html",
    "title": "Regression task",
    "section": "",
    "text": "This notebook models the relationship between dengue cases and weather variables using the nominal value of dengue cases."
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_reg.html#packages",
    "href": "dengue-model/dengue_weather_lag_reg.html#packages",
    "title": "Regression task",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(bonsai)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(rpart.plot)\nlibrary(vip)"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_reg.html#dengue-data",
    "href": "dengue-model/dengue_weather_lag_reg.html#dengue-data",
    "title": "Regression task",
    "section": "Dengue data",
    "text": "Dengue data\n\nSubset and aggregate\nRio de Janeiro, RJ, aggregated by month.\n\ndengue_rj &lt;- open_dataset(\"../dengue-data/parquet_aggregated/dengue_md.parquet\") %&gt;%\n  filter(mun == 330455) %&gt;%\n  collect() %&gt;%\n  summarise_by_time(.date_var = date, .by = \"month\", freq = sum(freq, na.rm = TRUE))\n\n\nplot_time_series(.data = dengue_rj, .date_var = date, .value = freq, .smooth = FALSE, .title = \"Dengue, absolute number of cases\")"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_reg.html#weather-data",
    "href": "dengue-model/dengue_weather_lag_reg.html#weather-data",
    "title": "Regression task",
    "section": "Weather data",
    "text": "Weather data\n\ntmax &lt;- open_dataset(sources = \"../weather-data/parquet/brdwgd/tmax.parquet\") %&gt;%\n  filter(code_muni == 3304557) %&gt;%\n  filter(name == \"Tmax_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue_rj$date) & date &lt;= max(dengue_rj$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"month\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(tmax = value)\n\nprec &lt;- open_dataset(sources = \"../weather-data/parquet/brdwgd/pr.parquet\") %&gt;%\n  filter(code_muni == 3304557) %&gt;%\n  filter(name == \"pr_sum\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue_rj$date) & date &lt;= max(dengue_rj$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"month\", value = sum(value, na.rm = TRUE)) %&gt;%\n  rename(prec = value)\n\nprec_avg &lt;- open_dataset(sources = \"../weather-data/parquet/brdwgd/pr.parquet\") %&gt;%\n  filter(code_muni == 3304557) %&gt;%\n  filter(name == \"pr_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue_rj$date) & date &lt;= max(dengue_rj$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"month\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(prec_avg = value)\n\nrh &lt;- open_dataset(sources = \"../weather-data/parquet/brdwgd/rh.parquet\") %&gt;%\n  filter(code_muni == 3304557) %&gt;%\n  filter(name == \"RH_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue_rj$date) & date &lt;= max(dengue_rj$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"month\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(rh = value)\n\nwind &lt;- open_dataset(sources = \"../weather-data/parquet/brdwgd/u2.parquet\") %&gt;%\n  filter(code_muni == 3304557) %&gt;%\n  filter(name == \"u2_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue_rj$date) & date &lt;= max(dengue_rj$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"month\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(wind = value)\n\n\nplot_time_series(.data = tmax, .date_var = date, .value = tmax, .smooth = FALSE, .title = \"Max temp, average\")\n\n\n\n\n\n\nplot_time_series(.data = prec, .date_var = date, .value = prec, .smooth = FALSE, .title = \"Precipitation, sum\")\n\n\n\n\n\n\nplot_time_series(.data = prec_avg, .date_var = date, .value = prec_avg, .smooth = FALSE, .title = \"Precipitation, average\")\n\n\n\n\n\n\nplot_time_series(.data = rh, .date_var = date, .value = rh, .smooth = FALSE, .title = \"Relative humidity, average\")\n\n\n\n\n\n\nplot_time_series(.data = wind, .date_var = date, .value = wind, .smooth = FALSE, .title = \"Wind, average\")"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_reg.html#join-data",
    "href": "dengue-model/dengue_weather_lag_reg.html#join-data",
    "title": "Regression task",
    "section": "Join data",
    "text": "Join data\n\nres &lt;- inner_join(x = dengue_rj, y = tmax, by = \"date\") %&gt;%\n  inner_join(prec, by = \"date\") %&gt;%\n  inner_join(prec_avg, by = \"date\") %&gt;%\n  inner_join(rh, by = \"date\") %&gt;%\n  inner_join(wind, by = \"date\") %&gt;%\n  select(date, cases = freq, tmax, prec, rh, wind)"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_reg.html#decision-tree",
    "href": "dengue-model/dengue_weather_lag_reg.html#decision-tree",
    "title": "Regression task",
    "section": "Decision tree",
    "text": "Decision tree\n\nPrepare data\n\nRemove date\nLag variables: 6 months\n\n\nres_prep &lt;- res %&gt;%\n  select(-date) %&gt;%\n  tk_augment_lags(.value = c(tmax, prec, wind, rh), .lags = 1:6)\n\n\n\nParameters\n\ntree_spec &lt;- decision_tree() %&gt;%\n  set_engine(\"partykit\") %&gt;%\n  set_mode(\"regression\")"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_reg.html#fit-model",
    "href": "dengue-model/dengue_weather_lag_reg.html#fit-model",
    "title": "Regression task",
    "section": "Fit model",
    "text": "Fit model\n\nfit1 &lt;- tree_spec %&gt;%\n  fit(cases ~ ., data = res_prep)\n\n\nfit1 %&gt;% extract_fit_engine() %&gt;%\n  plot()\n\n\n\n\n\naugment(fit1, new_data = res_prep) %&gt;%\n    mae(truth = cases, estimate = .pred)\n\n# A tibble: 1 × 3\n  .metric .estimator .estimate\n  &lt;chr&gt;   &lt;chr&gt;          &lt;dbl&gt;\n1 mae     standard       1597.\n\n\n\naugment(fit1, new_data = res_prep) %&gt;%\n  select(cases, .pred) %&gt;%\n  mutate(t = row_number()) %&gt;%\n  pivot_longer(cols = c(\"cases\", \".pred\")) %&gt;%\n  ggplot(aes(x = t, y = value, color = name)) +\n  geom_line() +\n  theme_bw()\n\n\n\n\n\nfit1 %&gt;% \n  extract_fit_engine() %&gt;% \n  vip()"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_reg.html#session-info",
    "href": "dengue-model/dengue_weather_lag_reg.html#session-info",
    "title": "Regression task",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.1.2 (2021-11-01)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0\nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] vip_0.3.2          rpart.plot_3.1.1   rpart_4.1.16       timetk_2.8.3      \n [5] arrow_12.0.1       bonsai_0.2.1       yardstick_1.2.0    workflowsets_1.0.1\n [9] workflows_1.1.3    tune_1.1.1         rsample_1.1.1      recipes_1.0.6     \n[13] parsnip_1.1.0      modeldata_1.1.0    infer_1.0.4        dials_1.2.0       \n[17] scales_1.2.1       broom_1.0.5        tidymodels_1.1.0   lubridate_1.9.2   \n[21] forcats_1.0.0      stringr_1.5.0      dplyr_1.1.2        purrr_1.0.1       \n[25] readr_2.1.4        tidyr_1.3.0        tibble_3.2.1       ggplot2_3.4.2     \n[29] tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n [1] colorspace_2.1-0    ellipsis_0.3.2      class_7.3-20       \n [4] rstudioapi_0.14     farver_2.1.1        listenv_0.9.0      \n [7] furrr_0.3.1         bit64_4.0.5         mvtnorm_1.2-2      \n[10] prodlim_2023.03.31  fansi_1.0.4         codetools_0.2-18   \n[13] splines_4.1.2       libcoin_1.0-9       knitr_1.43         \n[16] Formula_1.2-5       jsonlite_1.8.7      compiler_4.1.2     \n[19] httr_1.4.6          backports_1.4.1     assertthat_0.2.1   \n[22] Matrix_1.5-4.1      fastmap_1.1.1       lazyeval_0.2.2     \n[25] cli_3.6.1           htmltools_0.5.5     tools_4.1.2        \n[28] partykit_1.2-20     gtable_0.3.3        glue_1.6.2         \n[31] Rcpp_1.0.10         DiceDesign_1.9      vctrs_0.6.3        \n[34] iterators_1.0.14    crosstalk_1.2.0     inum_1.0-5         \n[37] timeDate_4022.108   gower_1.0.1         xfun_0.39          \n[40] globals_0.16.2      timechange_0.2.0    lifecycle_1.0.3    \n[43] future_1.33.0       MASS_7.3-55         zoo_1.8-12         \n[46] ipred_0.9-14        hms_1.1.3           parallel_4.1.2     \n[49] yaml_2.3.7          gridExtra_2.3       stringi_1.7.12     \n[52] foreach_1.5.2       lhs_1.1.6           hardhat_1.3.0      \n[55] lava_1.7.2.1        rlang_1.1.1         pkgconfig_2.0.3    \n[58] evaluate_0.21       lattice_0.20-45     htmlwidgets_1.6.2  \n[61] labeling_0.4.2      bit_4.0.5           tidyselect_1.2.0   \n[64] parallelly_1.36.0   magrittr_2.0.3      R6_2.5.1           \n[67] generics_0.1.3      pillar_1.9.0        withr_2.5.0        \n[70] xts_0.13.1          survival_3.2-13     nnet_7.3-17        \n[73] future.apply_1.11.0 utf8_1.2.3          plotly_4.10.2      \n[76] tzdb_0.4.0          rmarkdown_2.23      grid_4.1.2         \n[79] data.table_1.14.8   digest_0.6.32       GPfit_1.0-8        \n[82] munsell_0.5.0       viridisLite_0.4.2"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset.html",
    "href": "dengue-model/dengue_ts_global_subset.html",
    "title": "SBD clustering",
    "section": "",
    "text": "This notebooks aims to reproduce the metodology of the paper submitted to the SBD2023 conference, implementing the global and subset modelling.\nThis methodology aims to compare the perfomance of models trained with data from all municipalities time-series (global models) and models trained with subset of munipalities time-series (subset models).\nThose subset will be created by a clustering algorithm considering the municipalities cases time-series."
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset.html#packages",
    "href": "dengue-model/dengue_ts_global_subset.html#packages",
    "title": "SBD clustering",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(tidymodels)\nlibrary(bonsai)\nlibrary(finetune)\nlibrary(modeltime)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nlibrary(geobr)\nlibrary(DT)"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset.html#load-data",
    "href": "dengue-model/dengue_ts_global_subset.html#load-data",
    "title": "SBD clustering",
    "section": "Load data",
    "text": "Load data\n\ntdengue &lt;- read_parquet(file = \"../tdengue.parquet\") %&gt;%\n  drop_na() %&gt;%\n  select(mun, date, starts_with(\"cases\"))\n\n\n\n\n\n\n\nNote\n\n\n\n\nNA values are created when the lagged variables were calculated. The rows containing those NA values are dropped due machine learning regressors constraints.\nFor validation purposes, only the cases and cases_lag* covariates variables are keep.\n\n\n\n\nglimpse(tdengue)\n\nRows: 161,370\nColumns: 9\n$ mun        &lt;chr&gt; \"110002\", \"110002\", \"110002\", \"110002\", \"110002\", \"110002\",…\n$ date       &lt;date&gt; 2011-02-06, 2011-02-13, 2011-02-20, 2011-02-27, 2011-03-06…\n$ cases      &lt;dbl&gt; -0.51044592, 0.07880156, 0.66804904, 0.07880156, -0.5104459…\n$ cases_lag1 &lt;dbl&gt; 2.43579149, -0.51044592, 0.07880156, 0.66804904, 0.07880156…\n$ cases_lag2 &lt;dbl&gt; 0.66804904, 2.43579149, -0.51044592, 0.07880156, 0.66804904…\n$ cases_lag3 &lt;dbl&gt; 0.07880156, 0.66804904, 2.43579149, -0.51044592, 0.07880156…\n$ cases_lag4 &lt;dbl&gt; 0.66804904, 0.07880156, 0.66804904, 2.43579149, -0.51044592…\n$ cases_lag5 &lt;dbl&gt; 0.66804904, 0.66804904, 0.07880156, 0.66804904, 2.43579149,…\n$ cases_lag6 &lt;dbl&gt; -0.51044592, 0.66804904, 0.66804904, 0.07880156, 0.66804904…"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset.html#clustering",
    "href": "dengue-model/dengue_ts_global_subset.html#clustering",
    "title": "SBD clustering",
    "section": "Clustering",
    "text": "Clustering\nThis procedure goal is to cluster the municipalities considering the cases time series similarities between them.\n\nPrepare data\nPrepare the data for use with the dtwclust package, pivoting the panel data to a wide format and matrix object.\n\ncdengue &lt;- tdengue %&gt;%\n  select(mun, date, cases) %&gt;%\n  mutate(mun = paste0(\"m_\", mun)) %&gt;%\n  arrange(mun, date) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-date) %&gt;%\n  t() %&gt;%\n  tslist()\n\n\n\nSBD method\nThe SBD method is used to cluster the municipalities, considering a shape-bases distance (k-Shape clustering algorithm) (Paparrizos and Gravano 2015).\n326 municipalities will be clustered.\nThe clustering algorithm is applied with a varying number of \\(k\\) partitions from 3 to 8.\n\nk_seq &lt;- 3:8\n\ntic()\nclust &lt;- tsclust(\n  series = cdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sbd\",\n  seed = 123\n)\ntoc()\n\n0.257 sec elapsed\n\n\n\n\nCluster Validity Indices (CVI)\nTo choose the number of partitions, the Silhouette statistic is observed.\n\nnames(clust) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  kbl() %&gt;%\n  kable_styling()\n\n\n\n\nk\nSil\nSF\nCH\nDB\nDBstar\nD\nCOP\n\n\n\n\nk_3\n0.1747336\n0.3501838\n36.98758\n2.260992\n2.400068\n0.0805315\n0.3705055\n\n\nk_4\n0.1669509\n0.2526978\n34.15648\n4.050796\n4.597881\n0.0676247\n0.3688632\n\n\nk_7\n0.1625835\n0.1135484\n20.46483\n2.802248\n3.289527\n0.0805315\n0.3497498\n\n\nk_8\n0.1294623\n0.1012342\n20.25096\n1.906407\n2.268955\n0.0660755\n0.3456895\n\n\nk_6\n0.0914225\n0.1541329\n29.42529\n4.230747\n7.206356\n0.0280277\n0.3317256\n\n\nk_5\n0.0517861\n0.1915811\n27.11958\n3.855824\n5.374118\n0.0353306\n0.3523987\n\n\n\n\n\n\n\n\n\nSelect cluster with higher Silhouette statistic\n\nsel_clust &lt;- clust[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\n\n\n\nCluster sizes\n\ntable(sel_clust@cluster)\n\n\n  1   2   3 \n 34 251  41 \n\n\n\n\nIdentify municipalities and cluster id\nFinally, the cluster partition ID is added to the main dataset.\n\ncluster_ids &lt;- tibble(\n  mun = names(cdengue) %&gt;% substr(3, 9),\n  group = as.character(sel_clust@cluster)\n) \n\n\ntdengue &lt;- left_join(tdengue, cluster_ids, by = \"mun\")"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset.html#train-and-test-split",
    "href": "dengue-model/dengue_ts_global_subset.html#train-and-test-split",
    "title": "SBD clustering",
    "section": "Train and test split",
    "text": "Train and test split\nSplit the data into training and testing. The function time_series_split handles the time series, not shuffling them, and considering the panel data format, as depicted in the message about overlapping timestamps detected.\nThe last two years data will be used as the training set.\n\ntdengue_split &lt;- tdengue %&gt;%\n  time_series_split(\n    date_var = date, \n    assess = 52*2,\n    cumulative = TRUE\n  )\n\nData is not ordered by the 'date_var'. Resamples will be arranged by `date`.\n\n\nOverlapping Timestamps Detected. Processing overlapping time series together using sliding windows.\n\ntdengue_split\n\n&lt;Analysis/Assess/Total&gt;\n&lt;127466/33904/161370&gt;\n\n\n\nK-folds\nThe training set will be split into k folds.\n\ntdengue_split_folds &lt;- training(tdengue_split) %&gt;%\n  vfold_cv(v = 5)"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset.html#recipes",
    "href": "dengue-model/dengue_ts_global_subset.html#recipes",
    "title": "SBD clustering",
    "section": "Recipes",
    "text": "Recipes\nThe global and subset models training specification are called recipes. The procedure bellow creates a list of those recipes.\n\nrecipes_list &lt;- list()\n\n\nGlobal\nThe global training recipe uses data from all municipalities for training the models.\n\nThe date and group variables are removed prior training\nThe municipality identification variable is treated as an Id variable, taking no place as a predictor in the training process\n\n\nrecipe_global &lt;- recipe(cases ~ ., data = training(tdengue_split)) %&gt;%\n  step_rm(date, group) %&gt;%\n  update_role(mun, new_role = \"id variable\")\n\nrecipes_list &lt;- append(recipes_list, list(global = recipe_global))\n\nrm(recipe_global)\n\n\n\nGroups\n\nFor each group created by the clustering process, a specific training recipe will be created. For this, the first step is to filter rows from the training set, keep only the rows belonging to the group in the loop\nThe date and group variables are removed prior training\nThe municipality identification variable is treated as an Id variable, taking no place as a predictor in the training process\n\n\nfor(g in unique(tdengue$group)){\n  tmp &lt;- recipe(cases ~ ., data = training(tdengue_split)) %&gt;%\n    step_filter(group == !!g) %&gt;%\n    step_rm(date, group) %&gt;%\n    update_role(mun, new_role = \"id variable\")\n  \n  tmp &lt;- list(tmp)\n  tmp &lt;- setNames(tmp, paste0(\"g\", g))\n  \n  recipes_list &lt;- append(recipes_list, tmp)\n  \n  rm(tmp)\n}"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset.html#regressors-specification",
    "href": "dengue-model/dengue_ts_global_subset.html#regressors-specification",
    "title": "SBD clustering",
    "section": "Regressors specification",
    "text": "Regressors specification\n\nRandom forest\nA Random Forest specification using the ranger engine. The trees and min_n hyperparameters will be tuned.\n\nrf_spec &lt;- rand_forest(\n  trees = tune(),\n  min_n = tune()\n) %&gt;%\n  set_engine(\"ranger\") %&gt;%\n  set_mode(\"regression\")\n\n\n\nLightGBM\n\n# lgbm_spec &lt;- boost_tree(\n#   trees = tune(),\n#   min_n = tune(),\n#   tree_depth = tune()\n# ) %&gt;%\n#   set_engine(\"lightgbm\") %&gt;%\n#   set_mode(\"regression\")"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset.html#workflow-set",
    "href": "dengue-model/dengue_ts_global_subset.html#workflow-set",
    "title": "SBD clustering",
    "section": "Workflow set",
    "text": "Workflow set\nThis step creates a workflow set, combining the training recipes and regressors specifications.\n\nall_workflows &lt;- workflow_set(\n  preproc = recipes_list, \n  models = list(rf = rf_spec), \n  cross = TRUE\n)"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset.html#tune",
    "href": "dengue-model/dengue_ts_global_subset.html#tune",
    "title": "SBD clustering",
    "section": "Tune",
    "text": "Tune\nThis step tunes the training hyperparameters of each workflow.\n\ndoParallel::registerDoParallel()\n\ntic()\nrace_results &lt;- \n  all_workflows %&gt;%\n  workflow_map(\n    \"tune_race_anova\",\n    seed = 345,\n    resamples = tdengue_split_folds,\n    grid = 10,\n    control = control_race(parallel_over = \"everything\"),\n    verbose = TRUE\n  )\n\ni 1 of 4 tuning:     global_rf\n\n\nWarning in mclapply(argsList, FUN, mc.preschedule = preschedule, mc.set.seed =\nset.seed, : scheduled core 5 did not deliver a result, all values of the job\nwill be affected\n\n\n✔ 1 of 4 tuning:     global_rf (25m 1.5s)\n\n\ni 2 of 4 tuning:     g3_rf\n\n\n✔ 2 of 4 tuning:     g3_rf (2m 24s)\n\n\ni 3 of 4 tuning:     g1_rf\n\n\n✔ 3 of 4 tuning:     g1_rf (1m 19.9s)\n\n\ni 4 of 4 tuning:     g2_rf\n\n\n✔ 4 of 4 tuning:     g2_rf (18m 47.6s)\n\ntoc()\n\n2853.792 sec elapsed"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset.html#fit",
    "href": "dengue-model/dengue_ts_global_subset.html#fit",
    "title": "SBD clustering",
    "section": "Fit",
    "text": "Fit\nEach workflow will be trained using the tuned hyperparameters, considering the RMSE metric as reference.\nThis procedure creates a list of trained models, containing the fit results and a list of the municipalities used on the training of each workflow.\nThe global workflow is trained with data from all municipalities and the subsets workflows are trained using the respective municipalities list given by the cluster algorithm.\n\ntic()\ntrained_models &lt;- list()\nfor(w in unique(race_results$wflow_id)){\n  best_tune &lt;- race_results %&gt;%\n    extract_workflow_set_result(w) %&gt;%\n    select_best(\"rmse\")\n  \n  final_fit &lt;- race_results %&gt;%\n    extract_workflow(w) %&gt;%\n    finalize_workflow(best_tune) %&gt;%\n    fit(training(tdengue_split))\n  \n  mold &lt;- extract_mold(final_fit)\n  train_ids &lt;- mold$extras$roles$`id variable` %&gt;%\n    distinct() %&gt;%\n    pull() %&gt;%\n    as.character()\n  \n  final_fit &lt;- list(\n    list(\n      \"final_fit\" = final_fit, \n      \"train_ids\" = train_ids\n    )\n  )\n  \n  final_fit &lt;- setNames(final_fit, paste0(w))\n  \n  trained_models &lt;- append(trained_models, final_fit)\n}\ntoc()\n\n369.351 sec elapsed"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset.html#accuracy",
    "href": "dengue-model/dengue_ts_global_subset.html#accuracy",
    "title": "SBD clustering",
    "section": "Accuracy",
    "text": "Accuracy\nAfter training each workflow, the accuracy of the models are obtained applying the fitted models on the testing set.\nFor the global model, all municipalities are using for testing. For the subsets models, only data from the subset’s municipalities are considered for testing.\nThe RMSE metric is obtained for each workflow and municipality.\n\nmodels_accuracy &lt;- tibble()\nfor(t in 1:length(trained_models)){\n  \n  model_tbl &lt;- modeltime_table(trained_models[[t]][[1]]) \n  testing_set &lt;- testing(tdengue_split) %&gt;%\n    filter(mun %in% trained_models[[t]][[2]])\n  \n\n  calib_tbl &lt;- model_tbl %&gt;%\n      modeltime_calibrate(\n        new_data = testing_set, \n        id       = \"mun\"\n      )\n  \n  res &lt;- calib_tbl %&gt;% \n      modeltime_accuracy(\n        acc_by_id = TRUE, \n        metric_set = metric_set(rmse)\n      )\n  \n  res$.model_id &lt;- word(names(trained_models[t]), 1, sep = \"_\")\n  \n  models_accuracy &lt;- bind_rows(models_accuracy, res)\n}\n\nThis plot presents the RMSE distribution across the workflows.\n\nggplot(data = models_accuracy, aes(x = .model_id, y = rmse, fill = .model_desc)) +\n  geom_boxplot()\n\n\n\n\n\nBreakdown\n\nmun_names &lt;- lookup_muni(code_muni = \"all\") %&gt;%\n  mutate(code_muni = substr(code_muni, 0, 6)) %&gt;%\n  mutate(name_muni = paste0(name_muni, \", \", abbrev_state)) %&gt;%\n  select(code_muni, name_muni)\n\nUsing year 2010\n\nmodels_accuracy %&gt;% \n  left_join(mun_names, by = c(\"mun\" = \"code_muni\")) %&gt;%\n  select(.model_id, .model_desc, name_muni, rmse) %&gt;%\n  mutate(rmse = round(rmse, 2)) %&gt;%\n  arrange(.model_id, .model_desc, -rmse) %&gt;%\n  datatable(filter = \"top\")\n\n\n\n\n\n\n\nmodels_accuracy %&gt;% \n  left_join(mun_names, by = c(\"mun\" = \"code_muni\")) %&gt;%\n  select(.model_id, .model_desc, name_muni, rmse) %&gt;%\n  mutate(rmse = round(rmse, 2)) %&gt;%\n  group_by(.model_desc) %&gt;%\n  mutate(.model_id = case_when(\n    .model_id != \"global\" ~ \"cluster\",\n    .default = .model_id\n  )) %&gt;%\n  pivot_wider(names_from = .model_id, values_from = rmse) %&gt;%\n  mutate(dif = round(global - cluster, 2)) %&gt;% \n  ungroup() %&gt;%\n  datatable(filter = \"top\")\n\n\n\n\n\n\n\nmodels_accuracy %&gt;% \n  left_join(mun_names, by = c(\"mun\" = \"code_muni\")) %&gt;%\n  select(.model_id, .model_desc, name_muni, rmse) %&gt;%\n  group_by(.model_desc) %&gt;%\n  mutate(.model_id = case_when(\n    .model_id != \"global\" ~ \"cluster\",\n    .default = .model_id\n  )) %&gt;%\n  pivot_wider(names_from = .model_id, values_from = rmse) %&gt;%\n  mutate(dif = round(global - cluster, 2)) %&gt;% \n  arrange(.model_desc, dif) %&gt;%\n  ggplot(aes(x = global, y = cluster, fill = .model_desc, color = dif)) +\n  geom_point(size = 2, alpha = .3) +\n  viridis::scale_color_viridis(option = \"inferno\") +\n  theme_bw() +\n  labs(x = \"Global model\", y = \"Subset models\", title = \"RMSE error obtained with global and subset training strategies\")"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset.html#session-info",
    "href": "dengue-model/dengue_ts_global_subset.html#session-info",
    "title": "SBD clustering",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.1.2 (2021-11-01)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0\nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] rlang_1.1.1        ranger_0.15.1      DT_0.28            geobr_1.7.0       \n [5] tictoc_1.2         kableExtra_1.3.4   dtwclust_5.5.12    dtw_1.23-1        \n [9] proxy_0.4-27       timetk_2.8.3       modeltime_1.2.7    finetune_1.1.0    \n[13] bonsai_0.2.1       yardstick_1.2.0    workflowsets_1.0.1 workflows_1.1.3   \n[17] tune_1.1.1         rsample_1.1.1      recipes_1.0.6      parsnip_1.1.0     \n[21] modeldata_1.1.0    infer_1.0.4        dials_1.2.0        scales_1.2.1      \n[25] broom_1.0.5        tidymodels_1.1.0   arrow_12.0.1.1     lubridate_1.9.2   \n[29] forcats_1.0.0      stringr_1.5.0      dplyr_1.1.2        purrr_1.0.1       \n[33] readr_2.1.4        tidyr_1.3.0        tibble_3.2.1       ggplot2_3.4.2     \n[37] tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n  [1] backports_1.4.1     systemfonts_1.0.4   plyr_1.8.8         \n  [4] splines_4.1.2       crosstalk_1.2.0     listenv_0.9.0      \n  [7] digest_0.6.33       foreach_1.5.2       htmltools_0.5.5    \n [10] viridis_0.6.3       fansi_1.0.4         magrittr_2.0.3     \n [13] doParallel_1.0.17   cluster_2.1.2       tzdb_0.4.0         \n [16] globals_0.16.2      gower_1.0.1         RcppParallel_5.1.7 \n [19] xts_0.13.1          svglite_2.1.1       hardhat_1.3.0      \n [22] timechange_0.2.0    prettyunits_1.1.1   colorspace_2.1-0   \n [25] rvest_1.0.3         ggrepel_0.9.3       xfun_0.39          \n [28] jsonlite_1.8.7      lme4_1.1-34         survival_3.2-13    \n [31] zoo_1.8-12          iterators_1.0.14    glue_1.6.2         \n [34] gtable_0.3.3        ipred_0.9-14        webshot_0.5.5      \n [37] future.apply_1.11.0 DBI_1.1.3           Rcpp_1.0.11        \n [40] viridisLite_0.4.2   xtable_1.8-4        units_0.8-2        \n [43] clue_0.3-64         GPfit_1.0-8         bit_4.0.5          \n [46] stats4_4.1.2        lava_1.7.2.1        StanHeaders_2.26.27\n [49] prodlim_2023.03.31  htmlwidgets_1.6.2   httr_1.4.6         \n [52] modeltools_0.2-23   ellipsis_0.3.2      farver_2.1.1       \n [55] pkgconfig_2.0.3     sass_0.4.7          nnet_7.3-17        \n [58] utf8_1.2.3          labeling_0.4.2      tidyselect_1.2.0   \n [61] DiceDesign_1.9      reshape2_1.4.4      later_1.3.1        \n [64] cachem_1.0.8        munsell_0.5.0       tools_4.1.2        \n [67] cli_3.6.1           generics_0.1.3      evaluate_0.21      \n [70] fastmap_1.1.1       yaml_2.3.7          knitr_1.43         \n [73] bit64_4.0.5         nlme_3.1-155        future_1.33.0      \n [76] mime_0.12           xml2_1.3.5          flexclust_1.4-1    \n [79] compiler_4.1.2      rstudioapi_0.15.0   curl_5.0.1         \n [82] e1071_1.7-13        lhs_1.1.6           bslib_0.5.0        \n [85] stringi_1.7.12      highr_0.10          RSpectra_0.16-1    \n [88] lattice_0.20-45     Matrix_1.6-0        nloptr_2.0.3       \n [91] classInt_0.4-9      shinyjs_2.1.0       vctrs_0.6.3        \n [94] pillar_1.9.0        lifecycle_1.0.3     furrr_0.3.1        \n [97] jquerylib_0.1.4     data.table_1.14.8   httpuv_1.6.11      \n[100] R6_2.5.1            promises_1.2.0.1    gridExtra_2.3      \n[103] KernSmooth_2.23-20  parallelly_1.36.0   codetools_0.2-18   \n[106] boot_1.3-28         MASS_7.3-55         assertthat_0.2.1   \n[109] withr_2.5.0         parallel_4.1.2      hms_1.1.3          \n[112] grid_4.1.2          rpart_4.1.16        timeDate_4022.108  \n[115] minqa_1.2.5         class_7.3-20        rmarkdown_2.23     \n[118] sf_1.0-14           shiny_1.7.4.1"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset.html#references",
    "href": "dengue-model/dengue_ts_global_subset.html#references",
    "title": "SBD clustering",
    "section": "References",
    "text": "References\n\nhttps://business-science.github.io/modeltime/articles/modeling-panel-data.html\nhttps://blog.bguarisma.com/series/time-series-forecasting"
  },
  {
    "objectID": "socioeconomic-data/socioeconomic_data.html",
    "href": "socioeconomic-data/socioeconomic_data.html",
    "title": "Socio economic data",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\nlibrary(arrow)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "socioeconomic-data/socioeconomic_data.html#packages",
    "href": "socioeconomic-data/socioeconomic_data.html#packages",
    "title": "Socio economic data",
    "section": "",
    "text": "library(tidyverse)\nlibrary(janitor)\nlibrary(arrow)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "socioeconomic-data/socioeconomic_data.html#hdi",
    "href": "socioeconomic-data/socioeconomic_data.html#hdi",
    "title": "Socio economic data",
    "section": "HDI",
    "text": "HDI\n\nhdi &lt;- read_delim(\n  file = data_dir(\"socioeconomic_data/idhm.csv\"),\n  delim = \",\", locale=locale(decimal_mark = \".\"), \n  na = \"-\",\n  col_types = cols(\n    CD_GEOCMU = col_character(),\n    Município = col_character(),\n    CodEstado = col_character(),\n    Estado = col_character(),\n    IDHM1991 = col_double(),\n    IDHMR1991 = col_double(),\n    IDHML1991 = col_double(),\n    IDHME1991 = col_double(),\n    R1991 = col_double(),\n    IDHM2000 = col_double(),\n    IDHMR2000 = col_double(),\n    IDHML2000 = col_double(),\n    IDHME2000 = col_double(),\n    R2000 = col_double(),\n    IDHM2010 = col_double(),\n    IDHMR2010 = col_double(),\n    IDHML2010 = col_double(),\n    IDHME2010 = col_double(),\n    R2010 = col_double(),\n    NM_MUNNICIP = col_character()\n  )\n) %&gt;%\n  clean_names() %&gt;%\n  rename(code_muni = cd_geocmu, name_muni = municipio, code_uf = cod_estado, uf = estado) %&gt;%\n  select(-nm_munnicip) %&gt;%\n  mutate(code_muni = substr(code_muni, 0, 6))"
  },
  {
    "objectID": "socioeconomic-data/socioeconomic_data.html#export",
    "href": "socioeconomic-data/socioeconomic_data.html#export",
    "title": "Socio economic data",
    "section": "Export",
    "text": "Export\n\nwrite_parquet(x = hdi, sink = data_dir(\"socioeconomic_data/hdi.parquet\"))"
  },
  {
    "objectID": "socioeconomic-data/socioeconomic_data.html#session-info",
    "href": "socioeconomic-data/socioeconomic_data.html#session-info",
    "title": "Socio economic data",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.2.3 (2023-03-15)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: CentOS Linux 7 (Core)\n\nMatrix products: default\nBLAS/LAPACK: /home/raphaelfs/miniconda3/envs/quarto/lib/libopenblasp-r0.3.23.so\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=pt_BR.UTF-8        LC_COLLATE=pt_BR.UTF-8    \n [5] LC_MONETARY=pt_BR.UTF-8    LC_MESSAGES=pt_BR.UTF-8   \n [7] LC_PAPER=pt_BR.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=pt_BR.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] arrow_12.0.0    janitor_2.2.0   lubridate_1.9.2 forcats_1.0.0  \n [5] stringr_1.5.0   dplyr_1.1.2     purrr_1.0.1     readr_2.1.4    \n [9] tidyr_1.3.0     tibble_3.2.1    ggplot2_3.4.2   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] compiler_4.2.3    pillar_1.9.0      tools_4.2.3       bit_4.0.5        \n [5] digest_0.6.31     timechange_0.2.0  jsonlite_1.8.5    evaluate_0.21    \n [9] lifecycle_1.0.3   gtable_0.3.3      pkgconfig_2.0.3   rlang_1.1.1      \n[13] cli_3.6.1         rstudioapi_0.14   parallel_4.2.3    yaml_2.3.7       \n[17] xfun_0.39         fastmap_1.1.1     withr_2.5.0       knitr_1.43       \n[21] generics_0.1.3    vctrs_0.6.3       htmlwidgets_1.6.2 hms_1.1.3        \n[25] bit64_4.0.5       grid_4.2.3        tidyselect_1.2.0  snakecase_0.11.0 \n[29] glue_1.6.2        R6_2.5.1          fansi_1.0.4       vroom_1.6.3      \n[33] rmarkdown_2.22    tzdb_0.4.0        magrittr_2.0.3    scales_1.2.1     \n[37] htmltools_0.5.5   assertthat_0.2.1  colorspace_2.1-0  utf8_1.2.3       \n[41] stringi_1.7.12    munsell_0.5.0     crayon_1.5.2"
  },
  {
    "objectID": "presentations/short_project_presentation.html#context",
    "href": "presentations/short_project_presentation.html#context",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Context",
    "text": "Context\n\nRaphael SALDANHA: Degrees on Geography, Statistics, Public Health and Health Information\nPostdoc call from International Relations Department of Inria. Duration of 24 months (2023-2024)\nSupervisors: Prof. Reza Akbarinia (Inria) and Prof. Fabio Porto (LNCC)"
  },
  {
    "objectID": "presentations/short_project_presentation.html#arboviruses",
    "href": "presentations/short_project_presentation.html#arboviruses",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Arboviruses",
    "text": "Arboviruses\n\nDengue, Zika, Chikungunya, and other arboviruses imposes a significant burden over populations health\nEndemic vector borne disease (Aedes mosquitoes)\nImpacts all geographic regions in Brazil, with its continental extension\nFollow spatial and seasonal trends"
  },
  {
    "objectID": "presentations/short_project_presentation.html#modeling-dengue-outbreaks",
    "href": "presentations/short_project_presentation.html#modeling-dengue-outbreaks",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Modeling dengue outbreaks",
    "text": "Modeling dengue outbreaks\n\nDengue cases as target variable\nPredictors\n\nTemperature, droughts, rainfall, floods, land use, deforestation\nLiving conditions, urban environment\nWater supply, water rationing\nMosquito infestation? Only few and localized data available."
  },
  {
    "objectID": "presentations/short_project_presentation.html#territory-diversity",
    "href": "presentations/short_project_presentation.html#territory-diversity",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Territory diversity",
    "text": "Territory diversity\n\nOn rainy season, water accumulates on cans, pots and litter present at backyards, junkyards and on the streets.\n\n \nFortaleza, jan. 2016."
  },
  {
    "objectID": "presentations/short_project_presentation.html#territory-diversity-1",
    "href": "presentations/short_project_presentation.html#territory-diversity-1",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Territory diversity",
    "text": "Territory diversity\n\nOn dry season or droughts, water is stored on open drums.\nThe same predictor (ie. rain) may have different signal, in respect to other conditions."
  },
  {
    "objectID": "presentations/short_project_presentation.html#modeling-considerations",
    "href": "presentations/short_project_presentation.html#modeling-considerations",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Modeling considerations",
    "text": "Modeling considerations\n\nGeneral models tend to ignore the diversity of the territory\nLocal models are basically restricted, not useful for different regions and dengue transmission regimes\nA single machine-learning model is not a good option due the Brazilian diversity"
  },
  {
    "objectID": "presentations/short_project_presentation.html#global-and-subsets-models",
    "href": "presentations/short_project_presentation.html#global-and-subsets-models",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Global and subsets models",
    "text": "Global and subsets models\nConsider each square as a municipality"
  },
  {
    "objectID": "presentations/short_project_presentation.html#subsets-approach",
    "href": "presentations/short_project_presentation.html#subsets-approach",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Subsets approach",
    "text": "Subsets approach\n\nModel 1: global model, with all municipalities data\nModel 2: subset models\n\nGroup Brazilian municipalities into clusters\nTrain several ML models for each cluster\nCompare the accuracy with the global model\n\nPredict cases using the model with best accuracy"
  },
  {
    "objectID": "presentations/short_project_presentation.html#workflow",
    "href": "presentations/short_project_presentation.html#workflow",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Workflow",
    "text": "Workflow\nAbbreviated version\n\n\n\n\nflowchart LR\nA[All data] --&gt; G[Global Model]\nA --&gt; C(Clustering)\nC --&gt; K1[Model Cluster 1]\nC --&gt; K2[Model Cluster 1]\nC --&gt; Kn[Model Cluster n]\nG --&gt; P1[Predictions]\nK1 --&gt; P2[Predictions]\nK2 --&gt; P2\nKn --&gt; P2\nP1 --&gt; AC[Accuracy comparison]\nP2 --&gt; AC"
  },
  {
    "objectID": "presentations/short_project_presentation.html#key-decisions",
    "href": "presentations/short_project_presentation.html#key-decisions",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Key decisions",
    "text": "Key decisions\n\nHow to cluster municipalities based on time series data?\n\nOutcome (dengue cases)\nPredictors\n\nWhat are the best predictors for forecast?\n\nChoice of lags and rolling windows\n\nWhat are the best ML algorithms to forecast dengue cases?"
  },
  {
    "objectID": "presentations/short_project_presentation.html#expected-results",
    "href": "presentations/short_project_presentation.html#expected-results",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Expected results",
    "text": "Expected results\n\nMore precise predictions for regions\nLess dependency on specific data availability for each municipality\nProvide health managers with tools, predictions and scenarios adequate to different scales of health surveillance, preparedness and field action\nContribute to public health policies formulation and implementation"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "Summary",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nRaw files, chikungunya\n\n\n\n\n\n\n\n\n\n\n\n\nFebruary 5, 2024 | 15:52:12 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nRaw files, chikungunya\n\n\n\n\n\n\n\n\n\n\n\n\nFebruary 5, 2024 | 15:48:10 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nRaw files, chikungunya\n\n\n\n\n\n\n\n\n\n\n\n\nFebruary 5, 2024 | 15:48:08 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nCases and climate variables multivariate clustering\n\n\n\n\n\n\n\n\n\n\n\n\nFebruary 5, 2024 | 15:39:06 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nMultivariate clustering, all data model\n\n\n\n\n\n\n\n\n\n\n\n\nFebruary 1, 2024 | 09:05:51 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nDenque and weather lags\n\n\n\n\n\n\n\n\n\n\n\n\nJanuary 25, 2024 | 15:18:06 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nImputation\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nMissing data analysis\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nRaw files\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nCase classification analysis\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nExport aggregated database\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nTime series features\n\n\nwith scaled cases\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nScaled cases\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nScaled cases, cumulative\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nSDTW, cumulative and scaled long time series\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nRaw cases, cumulative\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nCumulative time series\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nClimate variables multivariate clustering\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nRaw cases\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nYearly time series\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nEpi year time series\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nHierarchical clustering\n\n\nwith scaled cases\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nTime series features clustering\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nSBD clustering\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nRegression task\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nDengue case classification\n\n\nby symptoms and clinical condition\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nClassification task\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nTime series features clustering, with robust sparse k-means\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nMultivariate clustering, climate model\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nGlobal and subset models workflow\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\nNo matching items\n\n\n  \n\n Back to top"
  },
  {
    "objectID": "dengue-data/aggregated_database.html",
    "href": "dengue-data/aggregated_database.html",
    "title": "Export aggregated database",
    "section": "",
    "text": "This notebook aims to create a database with aggregated counts of positive dengue cases for spatial and time units.\nThe aggregation will be on municipalities and time will be date and epidemiological week."
  },
  {
    "objectID": "dengue-data/aggregated_database.html#context",
    "href": "dengue-data/aggregated_database.html#context",
    "title": "Export aggregated database",
    "section": "",
    "text": "This notebook aims to create a database with aggregated counts of positive dengue cases for spatial and time units.\nThe aggregation will be on municipalities and time will be date and epidemiological week."
  },
  {
    "objectID": "dengue-data/aggregated_database.html#packages",
    "href": "dengue-data/aggregated_database.html#packages",
    "title": "Export aggregated database",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(lubridate)\nsource(\"../functions.R\")\n\n\nExecution node\n\nnode_name()\n\n[1] \"fatnode\""
  },
  {
    "objectID": "dengue-data/aggregated_database.html#load-data",
    "href": "dengue-data/aggregated_database.html#load-data",
    "title": "Export aggregated database",
    "section": "Load data",
    "text": "Load data\nLazy evaluation.\n\ndengue &lt;- arrow::read_parquet(file = data_dir(\"dengue_data/parquet_improved/dengue_improved.parquet\"))\n\ntally(dengue)\n\n         n\n1 19180457"
  },
  {
    "objectID": "dengue-data/aggregated_database.html#filter-valid-dates",
    "href": "dengue-data/aggregated_database.html#filter-valid-dates",
    "title": "Export aggregated database",
    "section": "Filter valid dates",
    "text": "Filter valid dates\n\nvalid_interval &lt;- interval(ymd(\"2011-01-01\"), ymd(\"2021-12-31\"))\n\ndengue &lt;- dengue %&gt;%\n  mutate(DT_SIN_PRI = ymd(DT_SIN_PRI)) %&gt;%\n  filter(DT_SIN_PRI %within% valid_interval)\n\ntally(dengue)\n\n         n\n1 15561929"
  },
  {
    "objectID": "dengue-data/aggregated_database.html#filter-positive-cases-of-dengue",
    "href": "dengue-data/aggregated_database.html#filter-positive-cases-of-dengue",
    "title": "Export aggregated database",
    "section": "Filter positive cases of dengue",
    "text": "Filter positive cases of dengue\n\ndengue_classifications &lt;- c(\"Febre hemorrágica do dengue\", \"Síndrome do choque do dengue\", \"Dengue com sinais de alarme\",\n  \"Dengue clássico\", \"Dengue com complicações\", \"Dengue\",\n  \"Dengue grave\")\n\n\ndengue &lt;- dengue %&gt;%\n  filter(CLASSI_FIN %in% dengue_classifications)\n\ntally(dengue)\n\n        n\n1 8125611"
  },
  {
    "objectID": "dengue-data/aggregated_database.html#aggregation",
    "href": "dengue-data/aggregated_database.html#aggregation",
    "title": "Export aggregated database",
    "section": "Aggregation",
    "text": "Aggregation\n\nMunicipality and date (“md”)\nIncluding the step to fill the time series with zero values when certain dates do not have cases.\n\ndengue_md &lt;- dengue %&gt;%\n  group_by(mun = ID_MN_RESI, date = DT_SIN_PRI) %&gt;%\n  summarise(freq = n()) %&gt;%\n  arrange(date) %&gt;%\n  complete(\n    date = seq.Date(min(date), max(date), by = \"day\"),\n    fill = list(freq = 0)\n  ) %&gt;%\n  ungroup() %&gt;%\n  collect()\n\n`summarise()` has grouped output by 'mun'. You can override using the `.groups`\nargument.\n\n\n\nglimpse(dengue_md)\n\nRows: 16,772,737\nColumns: 3\n$ mun  &lt;chr&gt; \"110000\", \"110000\", \"110000\", \"110000\", \"110000\", \"110000\", \"1100…\n$ date &lt;date&gt; 2015-12-29, 2015-12-30, 2015-12-31, 2016-01-01, 2016-01-02, 2016…\n$ freq &lt;int&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n\n\n\ndengue_md %&gt;%\n  write_parquet(sink = data_dir(\"dengue_data/parquet_aggregated/dengue_md.parquet\"))\n\n\n\nMunicipality and epidemiological week (“mw”)\n\ndengue_mw &lt;- dengue_md %&gt;%\n  mutate(epi_week = paste0(epiyear(date), \"-\", str_pad(epiweek(date), 2, pad = \"0\"))) %&gt;%\n  group_by(mun, epi_week) %&gt;%\n  summarise(freq = n()) %&gt;%\n  arrange(epi_week) %&gt;%\n  ungroup() %&gt;%\n  collect()\n\n`summarise()` has grouped output by 'mun'. You can override using the `.groups`\nargument.\n\n\n\nglimpse(dengue_mw)\n\nRows: 2,400,687\nColumns: 3\n$ mun      &lt;chr&gt; \"110005\", \"110006\", \"110014\", \"110034\", \"110140\", \"120017\", \"…\n$ epi_week &lt;chr&gt; \"2010-52\", \"2010-52\", \"2010-52\", \"2010-52\", \"2010-52\", \"2010-…\n$ freq     &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n\n\n\ndengue_mw %&gt;%\n  write_parquet(sink = data_dir(\"dengue_data/parquet_aggregated/dengue_mw.parquet\"))"
  },
  {
    "objectID": "dengue-data/aggregated_database.html#session-info",
    "href": "dengue-data/aggregated_database.html#session-info",
    "title": "Export aggregated database",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.2.3 (2023-03-15)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: CentOS Linux 7 (Core)\n\nMatrix products: default\nBLAS/LAPACK: /home/raphaelfs/miniconda3/envs/quarto/lib/libopenblasp-r0.3.23.so\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=pt_BR.UTF-8        LC_COLLATE=pt_BR.UTF-8    \n [5] LC_MONETARY=pt_BR.UTF-8    LC_MESSAGES=pt_BR.UTF-8   \n [7] LC_PAPER=pt_BR.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=pt_BR.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] arrow_12.0.0    lubridate_1.9.2 forcats_1.0.0   stringr_1.5.0  \n [5] dplyr_1.1.2     purrr_1.0.1     readr_2.1.4     tidyr_1.3.0    \n [9] tibble_3.2.1    ggplot2_3.4.2   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] compiler_4.2.3    pillar_1.9.0      tools_4.2.3       bit_4.0.5        \n [5] digest_0.6.31     timechange_0.2.0  jsonlite_1.8.5    evaluate_0.21    \n [9] lifecycle_1.0.3   gtable_0.3.3      pkgconfig_2.0.3   rlang_1.1.1      \n[13] cli_3.6.1         rstudioapi_0.14   yaml_2.3.7        xfun_0.39        \n[17] fastmap_1.1.1     withr_2.5.0       knitr_1.43        generics_0.1.3   \n[21] vctrs_0.6.3       htmlwidgets_1.6.2 hms_1.1.3         bit64_4.0.5      \n[25] grid_4.2.3        tidyselect_1.2.0  glue_1.6.2        R6_2.5.1         \n[29] fansi_1.0.4       rmarkdown_2.22    tzdb_0.4.0        magrittr_2.0.3   \n[33] scales_1.2.1      htmltools_0.5.5   assertthat_0.2.1  colorspace_2.1-0 \n[37] utf8_1.2.3        stringi_1.7.12    munsell_0.5.0"
  },
  {
    "objectID": "dengue-data/raw_files.html",
    "href": "dengue-data/raw_files.html",
    "title": "Raw files",
    "section": "",
    "text": "This notebook presents the process of downloading SINAN Dengue raw data files from DataSUS, pre-processing steps using the {microdatasus} package and exporting the raw files to parquet files."
  },
  {
    "objectID": "dengue-data/raw_files.html#packages",
    "href": "dengue-data/raw_files.html#packages",
    "title": "Raw files",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\n# remotes::install_github(\"rfsaldanha/microdatasus\")\nlibrary(microdatasus)\nlibrary(arrow)\nsource(\"../functions.R\")\n\n\nExecution node\n\nnode_name()\n\n[1] \"fatnode\""
  },
  {
    "objectID": "dengue-data/raw_files.html#data-download",
    "href": "dengue-data/raw_files.html#data-download",
    "title": "Raw files",
    "section": "Data download",
    "text": "Data download\n\n# for(a in 2011:2021){\n#   tmp &lt;- fetch_datasus(\n#     year_start = a, year_end = a,\n#     information_system = \"SINAN-DENGUE\"\n#   )\n# \n#   write_parquet(x = tmp, sink = paste0(\"parquets_raw/raw_dengue_\", a, \".parquet\"))\n#   \n#   tmp &lt;- process_sinan_dengue(data = tmp)\n#   \n#   write_parquet(x = tmp, sink = paste0(\"parquets/dengue_\", a, \".parquet\"))\n#   \n#   rm(tmp)\n# }\n\n\n\n\n\n\n\nWarning\n\n\n\nThis code chunk is commented to avoid unnecessary download again the raw DBC files from DataSUS."
  },
  {
    "objectID": "dengue-data/raw_files.html#overview",
    "href": "dengue-data/raw_files.html#overview",
    "title": "Raw files",
    "section": "Overview",
    "text": "Overview\n\ndengue &lt;- open_dataset(sources = data_dir(\"dengue_data/parquets\"))\n\n\ndengue %&gt;% glimpse()\n\nFileSystemDataset with 15 Parquet files\n19,180,457 rows x 75 columns\n$ TP_NOT       &lt;string&gt; \"Individual\", \"Individual\", \"Individual\", \"Individual\", …\n$ ID_AGRAVO    &lt;string&gt; \"A90\", \"A90\", \"A90\", \"A90\", \"A90\", \"A90\", \"A90\", \"A90\", …\n$ DT_NOTIFIC   &lt;string&gt; \"2007-02-12\", \"2007-02-12\", \"2007-02-26\", \"2007-02-12\", …\n$ SEM_NOT      &lt;string&gt; \"200707\", \"200707\", \"200709\", \"200707\", \"200706\", \"20070…\n$ NU_ANO       &lt;string&gt; \"2007\", \"2007\", \"2007\", \"2007\", \"2007\", \"2007\", \"2007\", …\n$ SG_UF_NOT    &lt;string&gt; \"Maranhão\", \"Maranhão\", \"Pernambuco\", \"Bahia\", \"Bahia\", …\n$ ID_MUNICIP   &lt;string&gt; \"210780\", \"210780\", \"260640\", \"292150\", \"292150\", \"29215…\n$ ID_REGIONA   &lt;string&gt; \"1577\", \"1577\", \"1499\", \"1410\", \"1410\", \"1410\", \"1410\", …\n$ ID_UNIDADE   &lt;string&gt; \"2454793\", \"2454793\", \"2436027\", \"3340392\", \"3340392\", \"…\n$ DT_SIN_PRI   &lt;string&gt; \"2007-02-09\", \"2007-02-10\", \"2007-02-21\", \"2007-01-28\", …\n$ SEM_PRI      &lt;string&gt; \"200706\", \"200706\", \"200708\", \"200705\", \"200703\", \"20070…\n$ CS_SEXO      &lt;string&gt; \"Feminino\", \"Feminino\", \"Masculino\", \"Feminino\", \"Mascul…\n$ CS_GESTANT   &lt;string&gt; \"Ignorado\", \"Ignorado\", \"Não se aplica\", \"Não se aplica\"…\n$ CS_RACA      &lt;string&gt; \"Parda\", \"Parda\", \"Branca\", \"Branca\", \"Parda\", \"Parda\", …\n$ CS_ESCOL_N   &lt;string&gt; \"5a à 8a série incompleta do EF (antigo ginásio ou 1o gr…\n$ SG_UF        &lt;string&gt; \"Maranhão\", \"Maranhão\", \"Pernambuco\", \"Bahia\", \"Bahia\", …\n$ ID_MN_RESI   &lt;string&gt; \"210780\", \"210780\", \"260640\", \"292150\", \"292150\", \"29215…\n$ ID_RG_RESI   &lt;string&gt; \"1577\", \"1577\", \"1499\", \"1410\", \"1410\", \"1410\", \"1410\", …\n$ ID_PAIS      &lt;string&gt; \"BRASIL\", \"BRASIL\", \"BRASIL\", \"BRASIL\", \"BRASIL\", \"BRASI…\n$ NDUPLIC_N    &lt;string&gt; \"Não identificado\", \"Não identificado\", NA, NA, NA, NA, …\n$ DT_DIGITA    &lt;string&gt; NA, NA, \"2007-03-08\", \"2007-05-22\", \"2007-05-02\", \"2007-…\n$ CS_FLXRET    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ FLXRECEBI    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ MIGRADO_W    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ DT_INVEST    &lt;string&gt; \"2007-02-12\", \"2007-02-12\", \"2007-02-26\", \"2007-02-12\", …\n$ ID_OCUPA_N   &lt;string&gt; \"Nao informada\", \"Nao informada\", NA, \"Nao informada\", \"…\n$ DT_SORO      &lt;string&gt; NA, NA, \"2007-02-26\", \"2007-02-01\", \"2007-02-09\", NA, NA…\n$ RESUL_SORO   &lt;string&gt; \"Não realizado\", \"Não realizado\", \"Não reagente\", \"Reage…\n$ HISTOPA_N    &lt;string&gt; \"Não realizado\", \"Não realizado\", \"Não realizado\", \"Não …\n$ DT_VIRAL     &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, \"2007-02-14\", NA, NA, NA…\n$ RESUL_VI_N   &lt;string&gt; \"Não realizado\", \"Não realizado\", NA, \"Não realizado\", \"…\n$ SOROTIPO     &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, \"DEN 3\", NA, NA, NA, NA,…\n$ IMUNOH_N     &lt;string&gt; \"Não realizado\", \"Não realizado\", \"Não realizado\", \"Não …\n$ DT_PCR       &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ RESUL_PCR_   &lt;string&gt; \"Não realizado\", \"Não realizado\", NA, \"Não realizado\", \"…\n$ CLASSI_FIN   &lt;string&gt; \"Dengue clássico\", \"Dengue clássico\", \"Descartado\", \"Den…\n$ CRITERIO     &lt;string&gt; \"Clínico epidemiológico\", \"Clínico epidemiológico\", \"Clí…\n$ TPAUTOCTO    &lt;string&gt; \"Sim\", \"Sim\", NA, \"Não\", \"Sim\", NA, NA, \"Não\", \"Sim\", NA…\n$ COUFINF      &lt;string&gt; \"Maranhão\", \"Maranhão\", NA, \"Bahia\", \"Bahia\", NA, NA, \"B…\n$ COPAISINF    &lt;string&gt; \"BRASIL\", \"BRASIL\", NA, \"BRASIL\", \"BRASIL\", NA, NA, \"BRA…\n$ COMUNINF     &lt;string&gt; \"210780\", \"210780\", NA, \"292150\", \"292150\", NA, NA, \"292…\n$ DOENCA_TRA   &lt;string&gt; \"Não\", \"Não\", NA, \"Não\", \"Não\", NA, NA, \"Não\", \"Não\", NA…\n$ EVOLUCAO     &lt;string&gt; \"Cura\", \"Cura\", NA, \"Cura\", \"Cura\", NA, NA, \"Cura\", \"Cur…\n$ DT_OBITO     &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ DT_ENCERRA   &lt;string&gt; \"2007-05-08\", \"2007-05-08\", \"2007-04-19\", \"2007-05-28\", …\n$ MANI_HEMOR   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ EPISTAXE     &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ GENGIVO      &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ METRO        &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ PETEQUIAS    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ HEMATURA     &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ SANGRAM      &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ LACO_N       &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ PLASMATICO   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ EVIDENCIA    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ PLAQ_MENOR   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ CON_FHD      &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ COMPLICA     &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ HOSPITALIZ   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ DT_INTERNA   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ UF           &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ MUNICIPIO    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ IDADEminutos &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ IDADEhoras   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ IDADEdias    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ IDADEmeses   &lt;string&gt; NA, NA, NA, \"0\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ IDADEanos    &lt;string&gt; \"3\", \"1\", \"3\", NA, \"0\", \"1\", \"3\", \"0\", \"3\", \"0\", \"1\", \"2…\n$ munResStatus &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ munResTipo   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ munResNome   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ munResUf     &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ munResLat    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ munResLon    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ munResAlt    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ munResArea   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\nCall `print()` for full schema details"
  },
  {
    "objectID": "dengue-data/raw_files.html#session-info",
    "href": "dengue-data/raw_files.html#session-info",
    "title": "Raw files",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.2.3 (2023-03-15)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: CentOS Linux 7 (Core)\n\nMatrix products: default\nBLAS/LAPACK: /home/raphaelfs/miniconda3/envs/quarto/lib/libopenblasp-r0.3.23.so\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=pt_BR.UTF-8        LC_COLLATE=pt_BR.UTF-8    \n [5] LC_MONETARY=pt_BR.UTF-8    LC_MESSAGES=pt_BR.UTF-8   \n [7] LC_PAPER=pt_BR.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=pt_BR.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] arrow_12.0.0       microdatasus_2.2.0 lubridate_1.9.2    forcats_1.0.0     \n [5] stringr_1.5.0      dplyr_1.1.2        purrr_1.0.1        readr_2.1.4       \n [9] tidyr_1.3.0        tibble_3.2.1       ggplot2_3.4.2      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n [1] compiler_4.2.3    pillar_1.9.0      tools_4.2.3       bit_4.0.5        \n [5] digest_0.6.31     timechange_0.2.0  jsonlite_1.8.5    evaluate_0.21    \n [9] lifecycle_1.0.3   gtable_0.3.3      pkgconfig_2.0.3   rlang_1.1.1      \n[13] cli_3.6.1         rstudioapi_0.14   yaml_2.3.7        xfun_0.39        \n[17] fastmap_1.1.1     withr_2.5.0       knitr_1.43        generics_0.1.3   \n[21] vctrs_0.6.3       htmlwidgets_1.6.2 hms_1.1.3         bit64_4.0.5      \n[25] grid_4.2.3        tidyselect_1.2.0  data.table_1.14.8 glue_1.6.2       \n[29] R6_2.5.1          fansi_1.0.4       rmarkdown_2.22    tzdb_0.4.0       \n[33] magrittr_2.0.3    scales_1.2.1      htmltools_0.5.5   assertthat_0.2.1 \n[37] colorspace_2.1-0  utf8_1.2.3        stringi_1.7.12    munsell_0.5.0"
  },
  {
    "objectID": "dengue-data/imputation.html",
    "href": "dengue-data/imputation.html",
    "title": "Imputation",
    "section": "",
    "text": "This notebook aims to impute some missing data and enrich the dataset."
  },
  {
    "objectID": "dengue-data/imputation.html#packages",
    "href": "dengue-data/imputation.html#packages",
    "title": "Imputation",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(knitr)\nlibrary(lubridate)\nsource(\"../functions.R\")\n\n\nExecution node\n\nnode_name()\n\n[1] \"fatnode\""
  },
  {
    "objectID": "dengue-data/imputation.html#load-data",
    "href": "dengue-data/imputation.html#load-data",
    "title": "Imputation",
    "section": "Load data",
    "text": "Load data\n\nimportant_vars &lt;- c(\"ID_AGRAVO\", \"DT_NOTIFIC\", \"ID_UNIDADE\",\n                    \"DT_SIN_PRI\", \"CS_SEXO\", \"CS_GESTANT\",\n                    \"CS_RACA\", \"CS_ESCOL_N\", \"ID_MN_RESI\",\n                    \"COUFINF\", \"COMUNINF\", \"ID_OCUPA_N\",\n                    \"DT_SORO\", \"RESUL_SORO\", \"SOROTIPO\", \n                    \"CLASSI_FIN\", \"CRITERIO\", \"EVOLUCAO\",\n                    \"DT_OBITO\", \"HOSPITALIZ\", \"DT_INTERNA\")\n\ndengue &lt;- open_dataset(sources = data_dir(\"dengue_data/parquets\")) %&gt;%\n  select(all_of(important_vars)) %&gt;%\n  collect()\n\n\nResidence municipality: ID_MN_RESI\nTask: If ID_MN_RESI is invalid or missing, imputate with valid COMUNINF information.\n\nImputation\n\ndengue &lt;- dengue %&gt;%\n  mutate(\n    ID_MN_RESI_check = if_else(nchar(ID_MN_RESI) == 6, \n                               false = FALSE,\n                               true = TRUE),\n    COMUNINF_check = if_else(nchar(COMUNINF) == 6, \n                               false = FALSE,\n                               true = TRUE)\n  ) %&gt;%\n  mutate(ID_MN_RESI = case_when(\n    ID_MN_RESI_check == FALSE & COMUNINF_check == TRUE ~ COMUNINF,\n    is.na(ID_MN_RESI) ~ COMUNINF,\n    TRUE ~ ID_MN_RESI\n  )) %&gt;%\n  select(-ID_MN_RESI_check, -COMUNINF_check)\n\n\n\nCheck improval\n\ndengue %&gt;%\n  mutate(\n    ID_MN_RESI_check = if_else(nchar(ID_MN_RESI) == 6, \n                               false = FALSE,\n                               true = TRUE)\n  ) %&gt;%\n  group_by(ID_MN_RESI_check) %&gt;%\n  summarise(freq = n()) %&gt;%\n  ungroup() %&gt;%\n  kable(\n    format.args = list(big.mark = \".\", decimal.mark = \",\")\n  )\n\n\n\n\nID_MN_RESI_check\nfreq\n\n\n\n\nFALSE\n4\n\n\nTRUE\n19.177.930\n\n\nNA\n2.523\n\n\n\n\n\nNo improvement for invalid municipalities, improvement of 96 records with missing data.\n\n\n\nDate of the first symptoms onset: DT_SIN_PRI\nTask: If DT_SIN_PRI is invalid or missing, imputate with valid DT_NOTIFIC information.\n\nImputation\n\nvalid_interval &lt;- interval(ymd(\"2011-01-01\"), ymd(\"2021-12-31\"))\n\ndengue &lt;- dengue %&gt;%\n  mutate(\n    DT_SIN_PRI_check = ymd(DT_SIN_PRI) %within% valid_interval,\n    DT_NOTIFIC_check = ymd(DT_NOTIFIC) %within% valid_interval,\n  ) %&gt;%\n  mutate(DT_SIN_PRI = case_when(\n    DT_SIN_PRI_check == FALSE & DT_NOTIFIC_check == TRUE ~ DT_NOTIFIC,\n    is.na(DT_SIN_PRI) ~ DT_NOTIFIC,\n    TRUE ~ DT_SIN_PRI\n  )) %&gt;%\n  select(-DT_SIN_PRI_check, -DT_NOTIFIC_check)\n\n\n\nCheck improval\n\nvalid_interval &lt;- interval(ymd(\"2011-01-01\"), ymd(\"2021-12-31\"))\n\ndengue %&gt;%\n  mutate(\n    DT_SIN_PRI_check = ymd(DT_SIN_PRI) %within% valid_interval\n  ) %&gt;%\n  group_by(DT_SIN_PRI_check) %&gt;%\n  summarise(freq = n()) %&gt;%\n  ungroup() %&gt;%\n  kable(\n    format.args = list(big.mark = \".\", decimal.mark = \",\")\n  )\n\n\n\n\nDT_SIN_PRI_check\nfreq\n\n\n\n\nFALSE\n3.618.528\n\n\nTRUE\n15.561.929\n\n\n\n\n\nThere was a improvement on 25,823 records with invalid dates and all missing records were imputate."
  },
  {
    "objectID": "dengue-data/imputation.html#export-improved-database",
    "href": "dengue-data/imputation.html#export-improved-database",
    "title": "Imputation",
    "section": "Export improved database",
    "text": "Export improved database\n\ndengue %&gt;%\n  write_parquet(sink = data_dir(\"dengue_data/parquet_improved/dengue_improved.parquet\"))"
  },
  {
    "objectID": "dengue-data/imputation.html#session-info",
    "href": "dengue-data/imputation.html#session-info",
    "title": "Imputation",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.2.3 (2023-03-15)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: CentOS Linux 7 (Core)\n\nMatrix products: default\nBLAS/LAPACK: /home/raphaelfs/miniconda3/envs/quarto/lib/libopenblasp-r0.3.23.so\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=pt_BR.UTF-8        LC_COLLATE=pt_BR.UTF-8    \n [5] LC_MONETARY=pt_BR.UTF-8    LC_MESSAGES=pt_BR.UTF-8   \n [7] LC_PAPER=pt_BR.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=pt_BR.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] knitr_1.43      arrow_12.0.0    lubridate_1.9.2 forcats_1.0.0  \n [5] stringr_1.5.0   dplyr_1.1.2     purrr_1.0.1     readr_2.1.4    \n [9] tidyr_1.3.0     tibble_3.2.1    ggplot2_3.4.2   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] compiler_4.2.3    pillar_1.9.0      tools_4.2.3       bit_4.0.5        \n [5] digest_0.6.31     timechange_0.2.0  jsonlite_1.8.5    evaluate_0.21    \n [9] lifecycle_1.0.3   gtable_0.3.3      pkgconfig_2.0.3   rlang_1.1.1      \n[13] cli_3.6.1         rstudioapi_0.14   yaml_2.3.7        xfun_0.39        \n[17] fastmap_1.1.1     withr_2.5.0       generics_0.1.3    vctrs_0.6.3      \n[21] htmlwidgets_1.6.2 hms_1.1.3         bit64_4.0.5       grid_4.2.3       \n[25] tidyselect_1.2.0  glue_1.6.2        R6_2.5.1          fansi_1.0.4      \n[29] rmarkdown_2.22    tzdb_0.4.0        magrittr_2.0.3    scales_1.2.1     \n[33] htmltools_0.5.5   assertthat_0.2.1  colorspace_2.1-0  utf8_1.2.3       \n[37] stringi_1.7.12    munsell_0.5.0"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Building and Selecting Specialized AI Models for Predicting Dengue Disease",
    "section": "",
    "text": "This website presents working in progress research on dengue and machine learning, as part of my Postdoctoral researcher position at Inria (Montpellier, France) and LNCC (Petrópolis, Brazil)."
  },
  {
    "objectID": "dengue-data/missing_data.html",
    "href": "dengue-data/missing_data.html",
    "title": "Missing data analysis",
    "section": "",
    "text": "This report presents a missing data analysis from the raw parquet files.\nConsidering the high number of variables, this report will use a subset of the most relevant ones for this research."
  },
  {
    "objectID": "dengue-data/missing_data.html#packages",
    "href": "dengue-data/missing_data.html#packages",
    "title": "Missing data analysis",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(naniar)\nlibrary(knitr)\nlibrary(lubridate)\nsource(\"../functions.R\")\n\n\nExecution node\n\nnode_name()\n\n[1] \"rfsaldanha\""
  },
  {
    "objectID": "dengue-data/missing_data.html#load-data",
    "href": "dengue-data/missing_data.html#load-data",
    "title": "Missing data analysis",
    "section": "Load data",
    "text": "Load data\n\nimportant_vars &lt;- c(\"ID_AGRAVO\", \"DT_NOTIFIC\", \"ID_UNIDADE\",\n                    \"DT_SIN_PRI\", \"CS_SEXO\", \"CS_GESTANT\",\n                    \"CS_RACA\", \"CS_ESCOL_N\", \"ID_MN_RESI\",\n                    \"COUFINF\", \"COMUNINF\", \"ID_OCUPA_N\",\n                    \"DT_SORO\", \"RESUL_SORO\", \"SOROTIPO\", \n                    \"CLASSI_FIN\", \"CRITERIO\", \"EVOLUCAO\",\n                    \"DT_OBITO\", \"HOSPITALIZ\", \"DT_INTERNA\")\n\ndengue &lt;- open_dataset(sources = data_dir(\"dengue_data/parquets\")) %&gt;%\n  select(all_of(important_vars)) %&gt;%\n  collect()"
  },
  {
    "objectID": "dengue-data/missing_data.html#overall",
    "href": "dengue-data/missing_data.html#overall",
    "title": "Missing data analysis",
    "section": "Overall",
    "text": "Overall\nConsidering all records.\n\ndengue %&gt;% \n  miss_var_summary() %&gt;%\n  kable(\n    format.args = list(big.mark = \".\", decimal.mark = \",\")\n  )\n\n\n\n\nvariable\nn_miss\npct_miss\n\n\n\n\nDT_OBITO\n19.153.998\n99,8620523\n\n\nSOROTIPO\n19.122.145\n99,6959822\n\n\nDT_INTERNA\n18.666.361\n97,3196885\n\n\nDT_SORO\n13.240.413\n69,0307483\n\n\nCOUFINF\n12.135.027\n63,2676635\n\n\nCOMUNINF\n11.092.216\n57,8308223\n\n\nHOSPITALIZ\n9.873.619\n51,4774961\n\n\nRESUL_SORO\n7.430.672\n38,7408496\n\n\nEVOLUCAO\n6.002.490\n31,2948226\n\n\nCS_ESCOL_N\n5.838.882\n30,4418294\n\n\nCRITERIO\n4.529.680\n23,6161213\n\n\nCS_RACA\n3.700.530\n19,2932316\n\n\nCLASSI_FIN\n2.402.459\n12,5255566\n\n\nCS_GESTANT\n2.304.926\n12,0170547\n\n\nCS_SEXO\n2.301.330\n11,9983064\n\n\nID_OCUPA_N\n720.520\n3,7565320\n\n\nID_UNIDADE\n3.471\n0,0180965\n\n\nID_MN_RESI\n2.627\n0,0136962\n\n\nDT_SIN_PRI\n176\n0,0009176\n\n\nDT_NOTIFIC\n1\n0,0000052\n\n\nID_AGRAVO\n0\n0,0000000\n\n\n\n\n\n\nVariables quality\n\nResidence municipality: ID_MN_RESI\nCheck var length. 6 characters are expected.\n\ndengue %&gt;%\n  mutate(\n    ID_MN_RESI_check = if_else(nchar(ID_MN_RESI) == 6, \n                               false = FALSE,\n                               true = TRUE)\n  ) %&gt;%\n  group_by(ID_MN_RESI_check) %&gt;%\n  summarise(freq = n()) %&gt;%\n  ungroup() %&gt;%\n  kable(\n    format.args = list(big.mark = \".\", decimal.mark = \",\")\n  )\n\n\n\n\nID_MN_RESI_check\nfreq\n\n\n\n\nFALSE\n4\n\n\nTRUE\n19.177.826\n\n\nNA\n2.627\n\n\n\n\n\n15.559.994 records on the database meets the criteria. 4 records have invalid municipalty codes and this information is missing for 2.126 records. Inputation from COMUNINF is a possibility.\n\n\nFinal classification of the notification: CLASSI_FIN\nIt is expected that the notifications final classification are labeled.\n\ndengue %&gt;%\n  group_by(CLASSI_FIN) %&gt;%\n  summarise(freq = n()) %&gt;%\n  ungroup() %&gt;%\n  kable(\n    format.args = list(big.mark = \".\", decimal.mark = \",\")\n  )\n\n\n\n\nCLASSI_FIN\nfreq\n\n\n\n\n1\n308.012\n\n\n2\n7.962\n\n\n3\n2.588\n\n\n4\n91\n\n\n5\n189.158\n\n\n6\n3\n\n\n8\n75.360\n\n\nDengue\n5.665.033\n\n\nDengue clássico\n2.686.548\n\n\nDengue com complicações\n23.073\n\n\nDengue com sinais de alarme\n82.408\n\n\nDengue grave\n7.391\n\n\nDescartado\n5.580.603\n\n\nFebre hemorrágica do dengue\n7.136\n\n\nInconclusivo\n2.142.252\n\n\nSíndrome do choque do dengue\n380\n\n\nNA\n2.402.459\n\n\n\n\n\n3 records have an invalid label and 69.866 are missing. This missing data may be from two causes: (1) the notification is being evaluated or (2) a real missing.\n\n\nDate of the first symptons onset: DT_SIN_PRI\nThis is the date most near to the infection date and more relevant to epidemiological analysis.\n\nvalid_interval &lt;- interval(ymd(\"2001-01-01\"), ymd(\"2021-12-31\"))\n\ndengue %&gt;%\n  mutate(\n    DT_SIN_PRI_check = ymd(DT_SIN_PRI) %within% valid_interval\n  ) %&gt;%\n  group_by(DT_SIN_PRI_check) %&gt;%\n  summarise(freq = n()) %&gt;%\n  ungroup() %&gt;%\n  kable(\n    format.args = list(big.mark = \".\", decimal.mark = \",\")\n  )\n\n\n\n\nDT_SIN_PRI_check\nfreq\n\n\n\n\nFALSE\n30.775\n\n\nTRUE\n19.149.506\n\n\nNA\n176\n\n\n\n\n\nThis variable is missing for 173 records. For 26.018 records, we have invalid dates (outside the period 2001-2021). It is possible to imputate with DT_NOTIFIC (date of notification), if valid."
  },
  {
    "objectID": "dengue-data/missing_data.html#positive-cases",
    "href": "dengue-data/missing_data.html#positive-cases",
    "title": "Missing data analysis",
    "section": "Positive cases",
    "text": "Positive cases\n\ndengue_classifications &lt;- c(\"Febre hemorrágica do dengue\", \"Síndrome do choque do dengue\", \"Dengue com sinais de alarme\",\n  \"Dengue clássico\", \"Dengue com complicações\", \"Dengue\",\n  \"Dengue grave\")\n\ndengue %&gt;% \n  filter(CLASSI_FIN %in% dengue_classifications) %&gt;%\n  miss_var_summary() %&gt;%\n  kable(\n    format.args = list(big.mark = \".\", decimal.mark = \",\")\n  )\n\n\n\n\nvariable\nn_miss\npct_miss\n\n\n\n\nDT_OBITO\n8.463.480\n99,8997990\n\n\nSOROTIPO\n8.417.274\n99,3544004\n\n\nDT_INTERNA\n8.208.924\n96,8951138\n\n\nDT_SORO\n5.864.290\n69,2199181\n\n\nHOSPITALIZ\n2.985.375\n35,2382663\n\n\nCOMUNINF\n1.959.050\n23,1239043\n\n\nCOUFINF\n1.934.904\n22,8388938\n\n\nCS_ESCOL_N\n1.782.790\n21,0433962\n\n\nRESUL_SORO\n1.778.971\n20,9983181\n\n\nCS_RACA\n717.175\n8,4652694\n\n\nEVOLUCAO\n470.392\n5,5523338\n\n\nID_OCUPA_N\n132.202\n1,5604637\n\n\nCS_GESTANT\n1.825\n0,0215416\n\n\nID_UNIDADE\n1.625\n0,0191809\n\n\nCRITERIO\n1.173\n0,0138457\n\n\nID_MN_RESI\n739\n0,0087229\n\n\nCS_SEXO\n220\n0,0025968\n\n\nDT_SIN_PRI\n5\n0,0000590\n\n\nID_AGRAVO\n0\n0,0000000\n\n\nDT_NOTIFIC\n0\n0,0000000\n\n\nCLASSI_FIN\n0\n0,0000000"
  },
  {
    "objectID": "dengue-data/missing_data.html#session-info",
    "href": "dengue-data/missing_data.html#session-info",
    "title": "Missing data analysis",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.1 (2023-06-16)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] knitr_1.43      naniar_1.0.0    arrow_12.0.1.1  lubridate_1.9.2\n [5] forcats_1.0.0   stringr_1.5.0   dplyr_1.1.2     purrr_1.0.2    \n [9] readr_2.1.4     tidyr_1.3.0     tibble_3.2.1    ggplot2_3.4.3  \n[13] tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] bit_4.0.5         gtable_0.3.4      jsonlite_1.8.7    compiler_4.3.1   \n [5] visdat_0.6.0      tidyselect_1.2.0  assertthat_0.2.1  scales_1.2.1     \n [9] yaml_2.3.7        fastmap_1.1.1     R6_2.5.1          generics_0.1.3   \n[13] htmlwidgets_1.6.2 munsell_0.5.0     pillar_1.9.0      tzdb_0.4.0       \n[17] rlang_1.1.1       utf8_1.2.3        stringi_1.7.12    xfun_0.40        \n[21] bit64_4.0.5       timechange_0.2.0  cli_3.6.1         withr_2.5.0      \n[25] magrittr_2.0.3    digest_0.6.33     grid_4.3.1        rstudioapi_0.15.0\n[29] hms_1.1.3         lifecycle_1.0.3   vctrs_0.6.3       evaluate_0.21    \n[33] glue_1.6.2        fansi_1.0.4       colorspace_2.1-0  rmarkdown_2.24   \n[37] tools_4.3.1       pkgconfig_2.0.3   htmltools_0.5.6"
  },
  {
    "objectID": "dengue-data/case_classification.html",
    "href": "dengue-data/case_classification.html",
    "title": "Case classification analysis",
    "section": "",
    "text": "This is a descriptive report about dengue case classification and criteria."
  },
  {
    "objectID": "dengue-data/case_classification.html#packages",
    "href": "dengue-data/case_classification.html#packages",
    "title": "Case classification analysis",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(knitr)\nlibrary(lubridate)\nsource(\"../functions.R\")\n\n\nExecution node\n\nnode_name()\n\n[1] \"fatnode\""
  },
  {
    "objectID": "dengue-data/case_classification.html#load-data",
    "href": "dengue-data/case_classification.html#load-data",
    "title": "Case classification analysis",
    "section": "Load data",
    "text": "Load data\n\nimportant_vars &lt;- c(\"DT_SIN_PRI\", \"RESUL_SORO\", \"SOROTIPO\", \"CLASSI_FIN\", \"CRITERIO\")\n\nvalid_interval &lt;- interval(ymd(\"2011-01-01\"), ymd(\"2021-12-31\"))\n\ndengue &lt;- open_dataset(sources = data_dir(\"dengue_data/parquets\")) %&gt;%\n  select(all_of(important_vars)) %&gt;%\n  collect() %&gt;%\n  mutate(DT_SIN_PRI = ymd(DT_SIN_PRI)) %&gt;%\n  filter(DT_SIN_PRI %within% valid_interval) %&gt;%\n  filter(CLASSI_FIN != \"6\")"
  },
  {
    "objectID": "dengue-data/case_classification.html#final-classification-and-criteria",
    "href": "dengue-data/case_classification.html#final-classification-and-criteria",
    "title": "Case classification analysis",
    "section": "Final classification and criteria",
    "text": "Final classification and criteria\n\ndengue %&gt;%\n  group_by(CLASSI_FIN, CRITERIO) %&gt;%\n  summarise(freq = n()) %&gt;%\n  ungroup() %&gt;%\n  kable(\n    format.args = list(big.mark = \".\", decimal.mark = \",\")\n  )\n\n`summarise()` has grouped output by 'CLASSI_FIN'. You can override using the\n`.groups` argument.\n\n\n\n\n\nCLASSI_FIN\nCRITERIO\nfreq\n\n\n\n\nDengue\nClínico epidemiológico\n3.527.885\n\n\nDengue\nEm investigação\n62.457\n\n\nDengue\nLaboratório\n2.064.344\n\n\nDengue\nNA\n16\n\n\nDengue clássico\nClínico epidemiológico\n1.439.136\n\n\nDengue clássico\nEm investigação\n16.796\n\n\nDengue clássico\nLaboratório\n880.966\n\n\nDengue clássico\nNA\n7\n\n\nDengue com complicações\nClínico epidemiológico\n8.249\n\n\nDengue com complicações\nEm investigação\n595\n\n\nDengue com complicações\nLaboratório\n9.973\n\n\nDengue com sinais de alarme\nClínico epidemiológico\n41.859\n\n\nDengue com sinais de alarme\nEm investigação\n2.079\n\n\nDengue com sinais de alarme\nLaboratório\n38.350\n\n\nDengue grave\nClínico epidemiológico\n1.452\n\n\nDengue grave\nEm investigação\n447\n\n\nDengue grave\nLaboratório\n5.481\n\n\nDescartado\nClínico epidemiológico\n2.495.845\n\n\nDescartado\nEm investigação\n9.383\n\n\nDescartado\nLaboratório\n2.845.345\n\n\nDescartado\nNA\n26\n\n\nFebre hemorrágica do dengue\nClínico epidemiológico\n2\n\n\nFebre hemorrágica do dengue\nEm investigação\n230\n\n\nFebre hemorrágica do dengue\nLaboratório\n5.041\n\n\nInconclusivo\nClínico epidemiológico\n17.369\n\n\nInconclusivo\nEm investigação\n60.306\n\n\nInconclusivo\nLaboratório\n7.750\n\n\nInconclusivo\nNA\n1.909.736\n\n\nSíndrome do choque do dengue\nClínico epidemiológico\n5\n\n\nSíndrome do choque do dengue\nEm investigação\n17\n\n\nSíndrome do choque do dengue\nLaboratório\n273\n\n\n\n\n\n\ndengue_classifications &lt;- c(\"Febre hemorrágica do dengue\", \"Síndrome do choque do dengue\", \"Dengue com sinais de alarme\",\n  \"Dengue clássico\", \"Dengue com complicações\", \"Dengue\",\n  \"Dengue grave\")\n\n\ndengue_cases_classification &lt;- dengue %&gt;% \n  mutate(CLASSI_FIN = case_when(\n    CLASSI_FIN %in% dengue_classifications ~ \"Confirmed\",\n    CLASSI_FIN == \"Descartado\" ~ \"Discarded\",\n    CLASSI_FIN == \"Inconclusivo\" ~ \"Inconclusive\",\n    CLASSI_FIN == 6 ~ \"Invalid\",\n    is.na(CLASSI_FIN) ~ \"Missing\",\n    .default = CLASSI_FIN\n  )) %&gt;%\n  mutate(DT_SIN_PRI = lubridate::ceiling_date(x = DT_SIN_PRI, unit = \"month\")) %&gt;%\n  group_by(DT_SIN_PRI, CLASSI_FIN) %&gt;%\n  summarise(freq = n()) %&gt;%\n  ungroup() \n\n`summarise()` has grouped output by 'DT_SIN_PRI'. You can override using the\n`.groups` argument.\n\n\n\nwrite_parquet(x = dengue_cases_classification, sink = data_dir(\"dengue_data/parquet_classification/dengue_cases_classification.parquet\"))\n\n\nggplot(data =  dengue_cases_classification, aes(x = DT_SIN_PRI, weight = freq, fill = CLASSI_FIN)) +\n  geom_bar() +\n  scale_fill_hue(direction = 1) +\n  scale_y_continuous(labels = scales::comma) +\n  labs(fill = \"Classificação\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\") +\n  labs(x = \"Month of first symptom's onset\", y = \"Records\", fill = \"Classification\")\n\n\n\nggsave(filename = \"dengue_cases_classification.pdf\")\n\nSaving 7 x 5 in image"
  },
  {
    "objectID": "dengue-data/case_classification.html#sorological-examination",
    "href": "dengue-data/case_classification.html#sorological-examination",
    "title": "Case classification analysis",
    "section": "Sorological examination",
    "text": "Sorological examination\n\ndengue %&gt;%\n  filter(CLASSI_FIN %in% dengue_classifications) %&gt;%\n  group_by(SOROTIPO) %&gt;%\n  summarise(freq = n()) %&gt;%\n  ungroup()\n\n# A tibble: 5 × 2\n  SOROTIPO    freq\n  &lt;chr&gt;      &lt;int&gt;\n1 DEN 1      28619\n2 DEN 2      16429\n3 DEN 3        209\n4 DEN 4       6122\n5 &lt;NA&gt;     8054281"
  },
  {
    "objectID": "dengue-data/case_classification.html#session-info",
    "href": "dengue-data/case_classification.html#session-info",
    "title": "Case classification analysis",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.2.3 (2023-03-15)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: CentOS Linux 7 (Core)\n\nMatrix products: default\nBLAS/LAPACK: /home/raphaelfs/miniconda3/envs/quarto/lib/libopenblasp-r0.3.23.so\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=pt_BR.UTF-8        LC_COLLATE=pt_BR.UTF-8    \n [5] LC_MONETARY=pt_BR.UTF-8    LC_MESSAGES=pt_BR.UTF-8   \n [7] LC_PAPER=pt_BR.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=pt_BR.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] knitr_1.43      arrow_12.0.0    lubridate_1.9.2 forcats_1.0.0  \n [5] stringr_1.5.0   dplyr_1.1.2     purrr_1.0.1     readr_2.1.4    \n [9] tidyr_1.3.0     tibble_3.2.1    ggplot2_3.4.2   tidyverse_2.0.0\n\nloaded via a namespace (and not attached):\n [1] compiler_4.2.3    pillar_1.9.0      tools_4.2.3       bit_4.0.5        \n [5] digest_0.6.31     timechange_0.2.0  jsonlite_1.8.5    evaluate_0.21    \n [9] lifecycle_1.0.3   gtable_0.3.3      pkgconfig_2.0.3   rlang_1.1.1      \n[13] cli_3.6.1         rstudioapi_0.14   yaml_2.3.7        xfun_0.39        \n[17] fastmap_1.1.1     withr_2.5.0       systemfonts_1.0.4 generics_0.1.3   \n[21] vctrs_0.6.3       htmlwidgets_1.6.2 hms_1.1.3         bit64_4.0.5      \n[25] grid_4.2.3        tidyselect_1.2.0  glue_1.6.2        R6_2.5.1         \n[29] textshaping_0.3.6 fansi_1.0.4       rmarkdown_2.22    farver_2.1.1     \n[33] tzdb_0.4.0        magrittr_2.0.3    scales_1.2.1      htmltools_0.5.5  \n[37] assertthat_0.2.1  colorspace_2.1-0  ragg_1.2.5        labeling_0.4.2   \n[41] utf8_1.2.3        stringi_1.7.12    munsell_0.5.0"
  },
  {
    "objectID": "weather_data.html",
    "href": "weather_data.html",
    "title": "Weather data",
    "section": "",
    "text": "Zonal statistics such as mean, maximum, minimum, standard deviation, and sum were computed by taking into account the data cells that intersect the boundaries of each municipality and stored in Parquet files.\nThis procedure was carried out for all Brazilian municipalities, and for all available dates, for every indicator available in the weather products BR-DWGD and TerraClimate."
  },
  {
    "objectID": "weather_data.html#introduction",
    "href": "weather_data.html#introduction",
    "title": "Weather data",
    "section": "",
    "text": "Zonal statistics such as mean, maximum, minimum, standard deviation, and sum were computed by taking into account the data cells that intersect the boundaries of each municipality and stored in Parquet files.\nThis procedure was carried out for all Brazilian municipalities, and for all available dates, for every indicator available in the weather products BR-DWGD and TerraClimate."
  },
  {
    "objectID": "weather_data.html#methodology",
    "href": "weather_data.html#methodology",
    "title": "Weather data",
    "section": "Methodology",
    "text": "Methodology\nZonal statistics are descriptive statistics calculated using a set of cells that spatially intersects a given spatial boundary. For each boundary in a map, statistics like average, maximum value, minimum value, standard deviation, and sum are obtained to represent the cell’s values that intersect the boundary.\nThe Brazilian municipality boundaries from 2010 were used as a reference, as provided by the geobr package.\nThus, for each municipality, a set of zonal statistics of weather indicators is calculated, at the same time resolution of the source dataset.\n\n\n\n\n\nThose datasets are available as parquet files on S3 buckets and queried by this project functions to retrieve data for a given municipality, dates, weather indicators, and desired zonal statistics."
  },
  {
    "objectID": "weather_data.html#results",
    "href": "weather_data.html#results",
    "title": "Weather data",
    "section": "Results",
    "text": "Results\n\nZonal BR-DWGD\n\nXavier, A. C., Scanlon, B. R., King, C. W., & Alves, A. I. (2022). New improved Brazilian daily weather gridded data (1961–2020). International Journal of Climatology. https://doi.org/10.1002/joc.7731\n\nThe BR-DWGD dataset presents daily meteorological data interpolated to a grid with 0.1° × 0.1° of spatial resolution for the Brazilian territory, with daily data from January 1, 1961, to July 31, 2020. It used data from 1,252 weather stations and 11,473 rain gauges in its interpolation methods, cross-validated to the selection of the best method for each weather indicator.\nThe following weather indicators are available from the BR-DWGD study: precipitation (mm), minimum temperature (°C), maximum temperature (°C), solar radiation (MJ⋅m−2), wind speed at 2m height (m⋅s−1) and relative humidity (%).\n\nbrclimr::product_info(product = \"brdwgd\")\n\n&lt;list&gt;\n├─tmax: &lt;list&gt;\n│ ├─name: \"Maximum temperature\"\n│ ├─unit: \"Degree Celsius\"\n│ ├─date_range: \"Daily, 1961-01-01 to 2020-07-31\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"Tmax_min\"\n│   ├─max: \"Tmax_max\"\n│   ├─mean: \"Tmax_mean\"\n│   └─sd: \"Tmax_sd\"\n├─tmin: &lt;list&gt;\n│ ├─name: \"Minimum temperature\"\n│ ├─unit: \"Degree Celsius\"\n│ ├─date_range: \"Daily, 1961-01-01 to 2020-07-31\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"Tmin_min\"\n│   ├─max: \"Tmin_max\"\n│   ├─mean: \"Tmin_mean\"\n│   └─sd: \"Tmin_sd\"\n├─pr: &lt;list&gt;\n│ ├─name: \"Precipitation\"\n│ ├─unit: \"mm\"\n│ ├─date_range: \"Daily, 1961-01-01 to 2020-07-31\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"pr_min\"\n│   ├─max: \"pr_max\"\n│   ├─mean: \"pr_mean\"\n│   ├─sd: \"pr_sd\"\n│   └─sum: \"pr_sum\"\n├─eto: &lt;list&gt;\n│ ├─name: \"Evapotranspiration\"\n│ ├─unit: \"mm\"\n│ ├─date_range: \"Daily, 1961-01-01 to 2020-07-31\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"ETo_min\"\n│   ├─max: \"ETo_max\"\n│   ├─mean: \"ETo_mean\"\n│   ├─sd: \"ETo_sd\"\n│   └─sum: \"ETo_sd\"\n├─rh: &lt;list&gt;\n│ ├─name: \"Relative humidity\"\n│ ├─unit: \"Percentage\"\n│ ├─date_range: \"Daily, 1961-01-01 to 2020-07-31\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"RH_min\"\n│   ├─max: \"RH_max\"\n│   ├─mean: \"RH_mean\"\n│   └─sd: \"RH_sd\"\n├─rs: &lt;list&gt;\n│ ├─name: \"Solar radiation\"\n│ ├─unit: \"MJ/m2\"\n│ ├─date_range: \"Daily, 1961-01-01 to 2020-07-31\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"Rs_min\"\n│   ├─max: \"Rs_max\"\n│   ├─mean: \"Rs_mean\"\n│   └─sd: \"Rs_sd\"\n└─u2: &lt;list&gt;\n  ├─name: \"Wind speed\"\n  ├─unit: \"m/2\"\n  ├─date_range: \"Daily, 1961-01-01 to 2020-07-31\"\n  └─stats: &lt;list&gt;\n    ├─min: \"u2_min\"\n    ├─max: \"u2_max\"\n    ├─mean: \"u2_mean\"\n    └─sd: \"u2_sd\"\n\n\n\n\nZonal TerraClimate\n\nAbatzoglou, J. T., Dobrowski, S. Z., Parks, S. A., Hegewisch, K. C. (2018). TerraClimate, a high-resolution global dataset of monthly climate and climatic water balance from 1958-2015. Scientific Data, 5. https://doi.org/10.1038/sdata.2017.191\n\nThe TerraClimate dataset presents monthly meteorological data interpolated to a grid with 0.04° × 0.04° (1/24th degree) of spatial resolution with world cover, with monthly data from January, 1958, to December, 2021.\nThe following weather indicators are available from the TerraClimate study: Actual Evapotranspiration (mm), Climate Water Deficit (mm), Potential evapotranspiration(mm), Precipitation (mm), Runoff (mm), Soil Moisture (mm), Downward surface shortwave radiation (W/m2), Snow water equivalent (mm), Minimum temperature (°C), Maximum temperature (°C), Vapor pressure (kPa), Wind speed (m/s), Vapor Pressure Deficit (kpa) and Palmer Drought Severity Index.\n\nbrclimr::product_info(product = \"terraclimate\")\n\n&lt;list&gt;\n├─tmax: &lt;list&gt;\n│ ├─name: \"Maximum temperature\"\n│ ├─detail: \"Average for month\"\n│ ├─unit: \"Degree Celsius\"\n│ ├─date_range: \"Monthly, 1958-01 to 2021-12\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"tmax_min\"\n│   ├─max: \"tmax_max\"\n│   ├─mean: \"tmax_mean\"\n│   └─sd: \"tmax_sd\"\n├─tmin: &lt;list&gt;\n│ ├─name: \"Minimum temperature\"\n│ ├─detail: \"Average for month\"\n│ ├─unit: \"Degree Celsius\"\n│ ├─date_range: \"Monthly, 1958-01 to 2021-12\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"tmin_min\"\n│   ├─max: \"tmin_max\"\n│   ├─mean: \"tmin_mean\"\n│   └─sd: \"tmin_sd\"\n├─ppt: &lt;list&gt;\n│ ├─name: \"Precipitation\"\n│ ├─detail: \"Monthly total\"\n│ ├─unit: \"mm\"\n│ ├─date_range: \"Monthly, 1958-01 to 2021-12\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"ppt_min\"\n│   ├─max: \"ppt_max\"\n│   ├─mean: \"ppt_mean\"\n│   ├─sd: \"ppt_sd\"\n│   └─sum: \"ppt_sum\"\n├─aet: &lt;list&gt;\n│ ├─name: \"Actual Evapotranspiration\"\n│ ├─detail: \"Monthly total\"\n│ ├─unit: \"mm\"\n│ ├─date_range: \"Monthly, 1958-01 to 2021-12\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"aet_min\"\n│   ├─max: \"aet_max\"\n│   ├─mean: \"aet_mean\"\n│   ├─sd: \"aet_sd\"\n│   └─sum: \"aet_sum\"\n├─def: &lt;list&gt;\n│ ├─name: \"Climate Water Deficit\"\n│ ├─detail: \"Monthly total\"\n│ ├─unit: \"mm\"\n│ ├─date_range: \"Monthly, 1958-01 to 2021-12\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"def_min\"\n│   ├─max: \"def_max\"\n│   ├─mean: \"def_mean\"\n│   ├─sd: \"def_sd\"\n│   └─sum: \"def_sum\"\n├─pdsi: &lt;list&gt;\n│ ├─name: \"Palmer Drought Severity Index\"\n│ ├─detail: \"At end of month\"\n│ ├─unit: \"unitless\"\n│ ├─date_range: \"Monthly, 1958-01 to 2021-12\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"PDSI_min\"\n│   ├─max: \"PDSI_max\"\n│   ├─mean: \"PDSI_mean\"\n│   └─sd: \"PDSI_sd\"\n├─pet: &lt;list&gt;\n│ ├─name: \"Potential evapotranspiration\"\n│ ├─detail: \"Monthly total\"\n│ ├─unit: \"mm\"\n│ ├─date_range: \"Monthly, 1958-01 to 2021-12\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"pet_min\"\n│   ├─max: \"pet_max\"\n│   ├─mean: \"pet_mean\"\n│   ├─sd: \"pet_sd\"\n│   └─sum: \"pet_sum\"\n├─q: &lt;list&gt;\n│ ├─name: \"Runoff\"\n│ ├─detail: \"Monthly total\"\n│ ├─unit: \"mm\"\n│ ├─date_range: \"Monthly, 1958-01 to 2021-12\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"q_min\"\n│   ├─max: \"q_max\"\n│   ├─mean: \"q_mean\"\n│   ├─sd: \"q_sd\"\n│   └─sum: \"q_sum\"\n├─soil: &lt;list&gt;\n│ ├─name: \"Soil Moisture\"\n│ ├─detail: \"Total column, at end of month\"\n│ ├─unit: \"mm\"\n│ ├─date_range: \"Monthly, 1958-01 to 2021-12\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"soil_min\"\n│   ├─max: \"soil_max\"\n│   ├─mean: \"soil_mean\"\n│   ├─sd: \"soil_sd\"\n│   └─sum: \"soil_sum\"\n├─srad: &lt;list&gt;\n│ ├─name: \"Downward surface shortwave radia...\"\n│ ├─unit: \"W/m2\"\n│ ├─date_range: \"Monthly, 1958-01 to 2021-12\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"srad_min\"\n│   ├─max: \"srad_max\"\n│   ├─mean: \"srad_mean\"\n│   ├─sd: \"srad_sd\"\n│   └─sum: \"srad_sum\"\n├─swe: &lt;list&gt;\n│ ├─name: \"Snow water equivalent\"\n│ ├─detail: \"At end of month\"\n│ ├─unit: \"mm\"\n│ ├─date_range: \"Monthly, 1958-01 to 2021-12\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"swe_min\"\n│   ├─max: \"swe_max\"\n│   ├─mean: \"swe_mean\"\n│   ├─sd: \"swe_sd\"\n│   └─sum: \"swe_sum\"\n├─vap: &lt;list&gt;\n│ ├─name: \"Vapor pressure\"\n│ ├─detail: \"Average for month\"\n│ ├─unit: \"kPa\"\n│ ├─date_range: \"Monthly, 1958-01 to 2021-12\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"vap_min\"\n│   ├─max: \"vap_max\"\n│   ├─mean: \"vap_mean\"\n│   └─sd: \"vap_sd\"\n├─vpd: &lt;list&gt;\n│ ├─name: \"Vapor Pressure Deficit\"\n│ ├─detail: \"Average for month\"\n│ ├─unit: \"kPa\"\n│ ├─date_range: \"Monthly, 1958-01 to 2021-12\"\n│ └─stats: &lt;list&gt;\n│   ├─min: \"vpd_min\"\n│   ├─max: \"vpd_max\"\n│   ├─mean: \"vpd_mean\"\n│   └─sd: \"vpd_sd\"\n└─ws: &lt;list&gt;\n  ├─name: \"Wind speed\"\n  ├─detail: \"Average for month\"\n  ├─unit: \"m/s\"\n  ├─date_range: \"Monthly, 1958-01 to 2021-12\"\n  └─stats: &lt;list&gt;\n    ├─min: \"ws_min\"\n    ├─max: \"ws_max\"\n    ├─mean: \"ws_mean\"\n    └─sd: \"ws_sd\""
  },
  {
    "objectID": "weather_data.html#availability",
    "href": "weather_data.html#availability",
    "title": "Weather data",
    "section": "Availability",
    "text": "Availability\n\nParquet files\nThe results are available to use as parquet format files. Access the following DOIs to access and download the files.\n\nZonal BR-DWGD\n\n\n\n\n\n\n\nZonal TerraClimate\n\n\n\n\n\n\n\n\nR package brclimr\nWe created an R package to on-line access those parquet files and download data for a user especified municipality. More details on https://rfsaldanha.github.io/brclimr"
  },
  {
    "objectID": "presentations/project_presentation.html#building-and-selecting-specialized-ai-models-for-predicting-dengue-disease",
    "href": "presentations/project_presentation.html#building-and-selecting-specialized-ai-models-for-predicting-dengue-disease",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Building and Selecting Specialized AI Models for Predicting Dengue Disease",
    "text": "Building and Selecting Specialized AI Models for Predicting Dengue Disease\n\nSALDANHA, Raphael (Inria)\nAKBARINIA, Reza (Inria)\nPENA, Eduardo (UTFPR)\nRIBEIRO, Victor (LNCC)\nPORTO, Fabio (LNCC)"
  },
  {
    "objectID": "presentations/project_presentation.html#context",
    "href": "presentations/project_presentation.html#context",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Context",
    "text": "Context\n\nRaphael SALDANHA: Degrees on Geography, Statistics, Public Health and Health Information\nPostdoc call from International Relations Department of Inria. Duration of 24 months (2023-2024)\nSupervisors: Prof. Reza Akbarinia (Inria) and Prof. Fabio Porto (LNCC)"
  },
  {
    "objectID": "presentations/project_presentation.html#arboviruses",
    "href": "presentations/project_presentation.html#arboviruses",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Arboviruses",
    "text": "Arboviruses\n\nDengue, Zika, Chikungunya, and other arboviruses imposes a significant burden over populations health\nEndemic vector borne disease (Aedes mosquitoes)\nImpacts all geographic regions in Brazil, with its continental extension\nFollow spatial and seasonal trends"
  },
  {
    "objectID": "presentations/project_presentation.html#dengue-spread",
    "href": "presentations/project_presentation.html#dengue-spread",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Dengue spread",
    "text": "Dengue spread\n\nGuzman; Harris, 2015"
  },
  {
    "objectID": "presentations/project_presentation.html#dengue-transmission-cycle",
    "href": "presentations/project_presentation.html#dengue-transmission-cycle",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Dengue transmission cycle",
    "text": "Dengue transmission cycle\n\nmosquitoalert.com"
  },
  {
    "objectID": "presentations/project_presentation.html#dengue-symptons",
    "href": "presentations/project_presentation.html#dengue-symptons",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Dengue symptons",
    "text": "Dengue symptons\n\nmosquitoalert.com"
  },
  {
    "objectID": "presentations/project_presentation.html#aedes-breeding-sites",
    "href": "presentations/project_presentation.html#aedes-breeding-sites",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Aedes breeding sites",
    "text": "Aedes breeding sites\n\nNo need of clean water\nEggs sticks to container walls lige glue\nThey can survive drying out for up to 8 months"
  },
  {
    "objectID": "presentations/project_presentation.html#probable-dengue-cases-in-brazil",
    "href": "presentations/project_presentation.html#probable-dengue-cases-in-brazil",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Probable dengue cases in Brazil",
    "text": "Probable dengue cases in Brazil\nper epidemiological week of symptoms onset\n\nMS. Boletim epidemiológico vol. 54 n. 1 (2023)"
  },
  {
    "objectID": "presentations/project_presentation.html#dengue-on-the-news",
    "href": "presentations/project_presentation.html#dengue-on-the-news",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Dengue on the news",
    "text": "Dengue on the news"
  },
  {
    "objectID": "presentations/project_presentation.html#dengue-outbreaks-over-time",
    "href": "presentations/project_presentation.html#dengue-outbreaks-over-time",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Dengue outbreaks over time",
    "text": "Dengue outbreaks over time\n\nAzevedo et al, 2020"
  },
  {
    "objectID": "presentations/project_presentation.html#dengue-and-weather-covariates",
    "href": "presentations/project_presentation.html#dengue-and-weather-covariates",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Dengue and weather covariates",
    "text": "Dengue and weather covariates\n\nLSE Blogs"
  },
  {
    "objectID": "presentations/project_presentation.html#dengue-over-time",
    "href": "presentations/project_presentation.html#dengue-over-time",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Dengue over time",
    "text": "Dengue over time\nand different regions\n\nBrito et al. 2021"
  },
  {
    "objectID": "presentations/project_presentation.html#territory-diversity",
    "href": "presentations/project_presentation.html#territory-diversity",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Territory diversity",
    "text": "Territory diversity\n\nOn rainy season, water accumulates on cans, pots and litter present at backyards, junkyards and on the streets.\n\n \nFortaleza, jan. 2016."
  },
  {
    "objectID": "presentations/project_presentation.html#territory-diversity-1",
    "href": "presentations/project_presentation.html#territory-diversity-1",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Territory diversity",
    "text": "Territory diversity\n\nOn dry season or droughts, water is stored on open drums.\nThe same predictor (ie. rain) may have different signal, in respect to other conditions."
  },
  {
    "objectID": "presentations/project_presentation.html#modeling-dengue-cases",
    "href": "presentations/project_presentation.html#modeling-dengue-cases",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Modeling dengue cases",
    "text": "Modeling dengue cases\n\nDengue cases as target variable\nPredictors\n\nTemperature, droughts, rainfall, floods, land use, deforestation\nLiving conditions, urban environment\nWater supply, water rationing\nMosquito infestation? Only few and localized data available."
  },
  {
    "objectID": "presentations/project_presentation.html#modeling-intuition",
    "href": "presentations/project_presentation.html#modeling-intuition",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Modeling intuition",
    "text": "Modeling intuition\n\nGeneral models tend to ignore the diversity of the territory\n\nDifferent or even contradictory predictors relationship with the outcome\nDengue transmission follows different rules, affected by climate and culture\n\nLocal models are basically restricted, not useful for different regions and dengue transmission regimes\nA single machine-learning model is not a good option due the Brazilian diversity"
  },
  {
    "objectID": "presentations/project_presentation.html#approach",
    "href": "presentations/project_presentation.html#approach",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Approach",
    "text": "Approach\n\nSeparate Brazilian municipalities into clusters\n\nMaximizing their similarity regarding dengue transmissions and its covariate’s importance and signals\n\nTrain several ML models of different strategies for each cluster\nConsidering a query region \\(r\\), select models with the best accuracy from related clusters to \\(r\\), and ensemble the models into a single model, tailored for the specific region\nPredict cases using the ensemble model and compare its results with a baseline model trained with all data"
  },
  {
    "objectID": "presentations/project_presentation.html#global-and-subsets-models",
    "href": "presentations/project_presentation.html#global-and-subsets-models",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Global and subsets models",
    "text": "Global and subsets models\nConsider each square as a municipality"
  },
  {
    "objectID": "presentations/project_presentation.html#workflow",
    "href": "presentations/project_presentation.html#workflow",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Workflow",
    "text": "Workflow\nShort version\n\n\n\n\nflowchart LR\nA[All data] --&gt; G[Global Model]\nA --&gt; C(Clustering)\nC --&gt; K1[Model Cluster 1]\nC --&gt; K2[Model Cluster 1]\nC --&gt; Kn[Model Cluster n]\nG --&gt; P1[Predictions]\nK1 --&gt; P2[Predictions]\nK2 --&gt; P2\nKn --&gt; P2\nP1 --&gt; AC[Accuracy comparison]\nP2 --&gt; AC"
  },
  {
    "objectID": "presentations/project_presentation.html#key-decisions",
    "href": "presentations/project_presentation.html#key-decisions",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Key decisions",
    "text": "Key decisions\n\nHow to cluster municipalities?\n\nTime series\nOutcome (dengue cases)\nPredictors\n\nWhat are the best predictors for forecast?\n\nLags and rolling windows"
  },
  {
    "objectID": "presentations/project_presentation.html#expected-results",
    "href": "presentations/project_presentation.html#expected-results",
    "title": "Specialized AI Models for Predicting Dengue Disease",
    "section": "Expected results",
    "text": "Expected results\n\nMore precise predictions for regions, with data “closer” to the training data.\nParallelism in training models on different regions, less costs.\nReduce the impact of concep-drift models of the affected regions.\nProvide health managers with tools, predictions and scenarios adequate to different scales of health surveillance, preparedness and field action\nContribute to public health policies formulation and implementation"
  },
  {
    "objectID": "presentations/trajectory_health_data_information.html#some-context",
    "href": "presentations/trajectory_health_data_information.html#some-context",
    "title": "A trajectory on health data and information",
    "section": "Some context",
    "text": "Some context\n\nUndergrad on Geography (UFJF)\nSpecialization on Statistics (UFJF)\nMaster’s at Public Health (UFJF)\nPhD on Health Information and Communication (Fiocruz)\nPostdoctoral researcher at Inria, France: Institut national de recherche en sciences et technologies du numérique"
  },
  {
    "objectID": "presentations/trajectory_health_data_information.html#geography-and-health",
    "href": "presentations/trajectory_health_data_information.html#geography-and-health",
    "title": "A trajectory on health data and information",
    "section": "Geography and health",
    "text": "Geography and health\n\nGeography. The study of the earth and atmosphere and of human activity as it affects and is affected by these.\nHealth geography. Application of geographical information, methods and perspectives to study health-disease processes."
  },
  {
    "objectID": "presentations/trajectory_health_data_information.html#data-science-applied-to-public-health",
    "href": "presentations/trajectory_health_data_information.html#data-science-applied-to-public-health",
    "title": "A trajectory on health data and information",
    "section": "Data science applied to public health",
    "text": "Data science applied to public health\n\nA perspective for quantitative health information\nSpatial and time series of public health data of multiple formats\nClassical and modern methods of data analysis\nNew ways of use and disseminate health information"
  },
  {
    "objectID": "presentations/trajectory_health_data_information.html#thesis",
    "href": "presentations/trajectory_health_data_information.html#thesis",
    "title": "A trajectory on health data and information",
    "section": "Thesis",
    "text": "Thesis\n\nFrom acquisition to data visualization: applications of data science on health\nStudy the cycle of generation and dissemination of health information\nPresents a new paradigm of data science and health, considering the hybrid possibilities of a theory & data driven science for Public Health\nand a new process model called Knowledge Discovery in Databases for Public Health (KDD-PH)"
  },
  {
    "objectID": "presentations/trajectory_health_data_information.html#kdd-ph",
    "href": "presentations/trajectory_health_data_information.html#kdd-ph",
    "title": "A trajectory on health data and information",
    "section": "KDD-PH",
    "text": "KDD-PH\n\n\n\n\nflowchart TD\nA[Research problem] --&gt; B[Data acquisition]\nB --&gt; C[Data assessment, preparation and analysis]\nC --&gt; F[Modelling and assessment]\nF --&gt; H[Knowledge review and dissemination]\nH --&gt; F\nH --&gt; I[Public health policies]\nI --&gt; J[Follow-up]\nF --&gt; A\nJ --&gt; A"
  },
  {
    "objectID": "presentations/trajectory_health_data_information.html#thesis-results",
    "href": "presentations/trajectory_health_data_information.html#thesis-results",
    "title": "A trajectory on health data and information",
    "section": "Thesis results",
    "text": "Thesis results\n\nArticles and products that fully or partially adopts the KDD-PH approach"
  },
  {
    "objectID": "presentations/trajectory_health_data_information.html#theoretical-construction",
    "href": "presentations/trajectory_health_data_information.html#theoretical-construction",
    "title": "A trajectory on health data and information",
    "section": "Theoretical construction",
    "text": "Theoretical construction\n\nData science and big data: what that means for population studies and health\nTo reflect on the possible changes that data science can induce in population and health related studies\nVolume is not the most promising characteristic of big data for population and health related studies, but rather the complexity of data and the possibilities of integration with traditional studies by means of interdisciplinary teams.\nPaper at CSC"
  },
  {
    "objectID": "presentations/trajectory_health_data_information.html#r-package-microdatasus",
    "href": "presentations/trajectory_health_data_information.html#r-package-microdatasus",
    "title": "A trajectory on health data and information",
    "section": "R package microdatasus",
    "text": "R package microdatasus\n\nHealth data acquisition from DataSUS, Brazilian official source of health data\nGitHub repo\nPaper at CSP"
  },
  {
    "objectID": "presentations/trajectory_health_data_information.html#network-analysis-of-breast-cancer-patients-flow-in-brazil-from-2014-to-2016",
    "href": "presentations/trajectory_health_data_information.html#network-analysis-of-breast-cancer-patients-flow-in-brazil-from-2014-to-2016",
    "title": "A trajectory on health data and information",
    "section": "Network analysis of breast cancer patients flow in Brazil from 2014 to 2016",
    "text": "Network analysis of breast cancer patients flow in Brazil from 2014 to 2016\n\nHealth data analysis\nHighlight central municipalities in a network\nDistances and difficulties faced by the patients\nPaper at CSP"
  },
  {
    "objectID": "presentations/trajectory_health_data_information.html#cross-border-monitoring-system-of-malaria-disease",
    "href": "presentations/trajectory_health_data_information.html#cross-border-monitoring-system-of-malaria-disease",
    "title": "A trajectory on health data and information",
    "section": "Cross-border monitoring system of malaria disease",
    "text": "Cross-border monitoring system of malaria disease\n\nHealth data harmonization and visualization\nFrench Guiana and Brazil frontier\nFrench and Portuguese, visualization as a common language\nPaper at JMIR"
  },
  {
    "objectID": "presentations/trajectory_health_data_information.html#monitoracovid-19",
    "href": "presentations/trajectory_health_data_information.html#monitoracovid-19",
    "title": "A trajectory on health data and information",
    "section": "MonitoraCovid-19",
    "text": "MonitoraCovid-19\n\nHealth data acquisition and visualization\nA multidisciplinary visualization dashboard of Covid-19\nPositioned Fiocruz and ICICT as a main reference about Covid-19 data and information\nMore than 320,000 unique users\nBook chapter about the project internal processes"
  },
  {
    "objectID": "presentations/trajectory_health_data_information.html#postdoc-research",
    "href": "presentations/trajectory_health_data_information.html#postdoc-research",
    "title": "A trajectory on health data and information",
    "section": "Postdoc research",
    "text": "Postdoc research\n\nIn partnership with LNCC and Inria\nTeams highly specialized on data analysis and modelling with Artificial Intelligence\nCreate and apply novel data science methods to public health problems\nBuilding and Selecting Specialized AI Models for Predicting Dengue Disease\nProject technical website"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures.html",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures.html",
    "title": "Time series features clustering",
    "section": "",
    "text": "This notebooks aims to implement the global and subset modelling, adopting a clustering strategy based on time series features extraction, with the {tsfeatures} package."
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures.html#packages",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures.html#packages",
    "title": "Time series features clustering",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(tidymodels)\nlibrary(bonsai)\nlibrary(finetune)\nlibrary(modeltime)\nlibrary(timetk)\nlibrary(tsfeatures)\nlibrary(kableExtra)\nlibrary(tictoc)\nlibrary(geobr)\nlibrary(DT)"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures.html#load-data",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures.html#load-data",
    "title": "Time series features clustering",
    "section": "Load data",
    "text": "Load data\n\ntdengue &lt;- read_parquet(file = \"../tdengue.parquet\") %&gt;%\n  drop_na() %&gt;%\n  select(mun, date, starts_with(\"cases\"))\n\n\n\n\n\n\n\nNote\n\n\n\n\nNA values are created when the lagged variables were calculated. The rows containing those NA values are dropped due machine learning regressors constraints.\nFor validation purposes, only the cases and cases_lag* covariates variables are keep.\n\n\n\n\nglimpse(tdengue)\n\nRows: 161,370\nColumns: 9\n$ mun        &lt;chr&gt; \"110002\", \"110002\", \"110002\", \"110002\", \"110002\", \"110002\",…\n$ date       &lt;date&gt; 2011-02-06, 2011-02-13, 2011-02-20, 2011-02-27, 2011-03-06…\n$ cases      &lt;dbl&gt; -0.51044592, 0.07880156, 0.66804904, 0.07880156, -0.5104459…\n$ cases_lag1 &lt;dbl&gt; 2.43579149, -0.51044592, 0.07880156, 0.66804904, 0.07880156…\n$ cases_lag2 &lt;dbl&gt; 0.66804904, 2.43579149, -0.51044592, 0.07880156, 0.66804904…\n$ cases_lag3 &lt;dbl&gt; 0.07880156, 0.66804904, 2.43579149, -0.51044592, 0.07880156…\n$ cases_lag4 &lt;dbl&gt; 0.66804904, 0.07880156, 0.66804904, 2.43579149, -0.51044592…\n$ cases_lag5 &lt;dbl&gt; 0.66804904, 0.66804904, 0.07880156, 0.66804904, 2.43579149,…\n$ cases_lag6 &lt;dbl&gt; -0.51044592, 0.66804904, 0.66804904, 0.07880156, 0.66804904…"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures.html#clustering",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures.html#clustering",
    "title": "Time series features clustering",
    "section": "Clustering",
    "text": "Clustering\nThis procedure goal is to cluster the municipalities considering time series features similarities.\n\nPrepare data\nPrepare the data for use with the {tsfeatures} package, converting the panel data to a list of ts objects.\n\ntdengue_df &lt;- tdengue %&gt;%\n  arrange(mun, date) %&gt;%\n  select(-date) %&gt;%\n  nest(data = cases, .by = mun)\n\ntdengue_list &lt;- lapply(tdengue_df$data, ts)\n\n\n\nTime series features\nExtract time series features.\n\ntsf &lt;- tsfeatures(\n  tslist = tdengue_list, \n  features = c(\"entropy\", \"stability\", \"lumpiness\", \"flat_spots\", \"stl_features\", \"acf_features\")\n  )\ntsf$mun &lt;- tdengue_df$mun\n\n\n\nK-means clustering\nCluster the municipalities based solely on the time series features.\n\npoints &lt;- tsf %&gt;%\n  select(-mun)\n\nUses \\(k\\) from 2 to 10 for clustering.\n\nkclusts &lt;- \n  tibble(k = 2:10) %&gt;%\n  mutate(\n    kclust = map(k, ~kmeans(points, .x)),\n    tidied = map(kclust, tidy),\n    glanced = map(kclust, glance),\n    augmented = map(kclust, augment, points)\n  )\n\nIsolate results.\n\nclusters &lt;- \n  kclusts %&gt;%\n  unnest(cols = c(tidied))\n\nassignments &lt;- \n  kclusts %&gt;% \n  unnest(cols = c(augmented))\n\nclusterings &lt;- \n  kclusts %&gt;%\n  unnest(cols = c(glanced))\n\nThe total sum of squares is plotted. The $k=5$ seems to be a break point.\n\nggplot(clusterings, aes(k, tot.withinss)) +\n  geom_line() +\n  geom_point() +\n  theme_bw()\n\n\n\n\n\n\nIdentify municipalities and cluster id\nFinally, the cluster partition ID is added to the main dataset.\n\ncluster_ids &lt;- clusterings %&gt;%\n  filter(k == 5) %&gt;%\n  pull(augmented) %&gt;%\n  pluck(1) %&gt;%\n  select(group = .cluster) %&gt;%\n  mutate(mun = tdengue_df$mun)\n\n\ntdengue &lt;- left_join(tdengue, cluster_ids, by = \"mun\")\n\n\n\nCluster sizes\n\ntable(cluster_ids$group)\n\n\n  1   2   3   4   5 \n 43  90  66  12 115"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures.html#train-and-test-split",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures.html#train-and-test-split",
    "title": "Time series features clustering",
    "section": "Train and test split",
    "text": "Train and test split\nSplit the data into training and testing. The function time_series_split handles the time series, not shuffling them, and considering the panel data format, as depicted in the message about overlapping timestamps detected.\nThe last two years data will be used as the training set.\n\ntdengue_split &lt;- tdengue %&gt;%\n  time_series_split(\n    date_var = date, \n    assess = 52*2,\n    cumulative = TRUE\n  )\n\nData is not ordered by the 'date_var'. Resamples will be arranged by `date`.\n\n\nOverlapping Timestamps Detected. Processing overlapping time series together using sliding windows.\n\ntdengue_split\n\n&lt;Analysis/Assess/Total&gt;\n&lt;127466/33904/161370&gt;\n\n\n\nK-folds\nThe training set will be split into k folds.\n\ntdengue_split_folds &lt;- training(tdengue_split) %&gt;%\n  vfold_cv(v = 5)"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures.html#recipes",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures.html#recipes",
    "title": "Time series features clustering",
    "section": "Recipes",
    "text": "Recipes\nThe global and subset models training specification are called recipes. The procedure bellow creates a list of those recipes.\n\nrecipes_list &lt;- list()\n\n\nGlobal\nThe global training recipe uses data from all municipalities for training the models.\n\nThe date and group variables are removed prior training\nThe municipality identification variable is treated as an Id variable, taking no place as a predictor in the training process\n\n\nrecipe_global &lt;- recipe(cases ~ ., data = training(tdengue_split)) %&gt;%\n  step_rm(date, group) %&gt;%\n  update_role(mun, new_role = \"id variable\")\n\nrecipes_list &lt;- append(recipes_list, list(global = recipe_global))\n\nrm(recipe_global)\n\n\n\nGroups\n\nFor each group created by the clustering process, a specific training recipe will be created. For this, the first step is to filter rows from the training set, keep only the rows belonging to the group in the loop\nThe date and group variables are removed prior training\nThe municipality identification variable is treated as an Id variable, taking no place as a predictor in the training process\n\n\nfor(g in unique(tdengue$group)){\n  tmp &lt;- recipe(cases ~ ., data = training(tdengue_split)) %&gt;%\n    step_filter(group == !!g) %&gt;%\n    step_rm(date, group) %&gt;%\n    update_role(mun, new_role = \"id variable\")\n  \n  tmp &lt;- list(tmp)\n  tmp &lt;- setNames(tmp, paste0(\"g\", g))\n  \n  recipes_list &lt;- append(recipes_list, tmp)\n  \n  rm(tmp)\n}"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures.html#regressors-specification",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures.html#regressors-specification",
    "title": "Time series features clustering",
    "section": "Regressors specification",
    "text": "Regressors specification\n\nRandom forest\nA Random Forest specification using the ranger engine. The trees and min_n hyperparameters will be tuned.\n\nrf_spec &lt;- rand_forest(\n  trees = tune(),\n  min_n = tune()\n) %&gt;%\n  set_engine(\"ranger\") %&gt;%\n  set_mode(\"regression\")\n\n\n\nLightGBM\n\n# lgbm_spec &lt;- boost_tree(\n#   trees = tune(),\n#   min_n = tune(),\n#   tree_depth = tune()\n# ) %&gt;%\n#   set_engine(\"lightgbm\") %&gt;%\n#   set_mode(\"regression\")"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures.html#workflow-set",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures.html#workflow-set",
    "title": "Time series features clustering",
    "section": "Workflow set",
    "text": "Workflow set\nThis step creates a workflow set, combining the training recipes and regressors specifications.\n\nall_workflows &lt;- workflow_set(\n  preproc = recipes_list, \n  models = list(rf = rf_spec), \n  cross = TRUE\n)"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures.html#tune",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures.html#tune",
    "title": "Time series features clustering",
    "section": "Tune",
    "text": "Tune\nThis step tunes the training hyperparameters of each workflow.\n\ndoParallel::registerDoParallel()\n\ntic()\nrace_results &lt;- \n  all_workflows %&gt;%\n  workflow_map(\n    \"tune_race_anova\",\n    seed = 345,\n    resamples = tdengue_split_folds,\n    grid = 10,\n    control = control_race(parallel_over = \"everything\"),\n    verbose = TRUE\n  )\n\ni 1 of 6 tuning:     global_rf\n\n\n✔ 1 of 6 tuning:     global_rf (26m 31.4s)\n\n\ni 2 of 6 tuning:     g3_rf\n\n\n✔ 2 of 6 tuning:     g3_rf (2m 56.8s)\n\n\ni 3 of 6 tuning:     g2_rf\n\n\n✔ 3 of 6 tuning:     g2_rf (3m 57.8s)\n\n\ni 4 of 6 tuning:     g4_rf\n\n\n✔ 4 of 6 tuning:     g4_rf (25.4s)\n\n\ni 5 of 6 tuning:     g1_rf\n\n\n✔ 5 of 6 tuning:     g1_rf (1m 18.8s)\n\n\ni 6 of 6 tuning:     g5_rf\n\n\n✔ 6 of 6 tuning:     g5_rf (5m 35.7s)\n\ntoc()\n\n2446.936 sec elapsed"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures.html#fit",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures.html#fit",
    "title": "Time series features clustering",
    "section": "Fit",
    "text": "Fit\nEach workflow will be trained using the tuned hyperparameters, considering the RMSE metric as reference.\nThis procedure creates a list of trained models, containing the fit results and a list of the municipalities used on the training of each workflow.\nThe global workflow is trained with data from all municipalities and the subsets workflows are trained using the respective municipalities list given by the cluster algorithm.\n\ntic()\ntrained_models &lt;- list()\nfor(w in unique(race_results$wflow_id)){\n  best_tune &lt;- race_results %&gt;%\n    extract_workflow_set_result(w) %&gt;%\n    select_best(\"rmse\")\n  \n  final_fit &lt;- race_results %&gt;%\n    extract_workflow(w) %&gt;%\n    finalize_workflow(best_tune) %&gt;%\n    fit(training(tdengue_split))\n  \n  mold &lt;- extract_mold(final_fit)\n  train_ids &lt;- mold$extras$roles$`id variable` %&gt;%\n    distinct() %&gt;%\n    pull() %&gt;%\n    as.character()\n  \n  final_fit &lt;- list(\n    list(\n      \"final_fit\" = final_fit, \n      \"train_ids\" = train_ids\n    )\n  )\n  \n  final_fit &lt;- setNames(final_fit, paste0(w))\n  \n  trained_models &lt;- append(trained_models, final_fit)\n}\ntoc()\n\n325.285 sec elapsed"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures.html#accuracy",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures.html#accuracy",
    "title": "Time series features clustering",
    "section": "Accuracy",
    "text": "Accuracy\nAfter training each workflow, the accuracy of the models are obtained applying the fitted models on the testing set.\nFor the global model, all municipalities are using for testing. For the subsets models, only data from the subset’s municipalities are considered for testing.\nThe RMSE metric is obtained for each workflow and municipality.\n\nmodels_accuracy &lt;- tibble()\nfor(t in 1:length(trained_models)){\n  \n  model_tbl &lt;- modeltime_table(trained_models[[t]][[1]]) \n  testing_set &lt;- testing(tdengue_split) %&gt;%\n    filter(mun %in% trained_models[[t]][[2]])\n  \n\n  calib_tbl &lt;- model_tbl %&gt;%\n      modeltime_calibrate(\n        new_data = testing_set, \n        id       = \"mun\"\n      )\n  \n  res &lt;- calib_tbl %&gt;% \n      modeltime_accuracy(\n        acc_by_id = TRUE, \n        metric_set = metric_set(rmse)\n      )\n  \n  res$.model_id &lt;- word(names(trained_models[t]), 1, sep = \"_\")\n  \n  models_accuracy &lt;- bind_rows(models_accuracy, res)\n}\n\nThis plot presents the RMSE distribution across the workflows.\n\nggplot(data = models_accuracy, aes(x = .model_id, y = rmse, fill = .model_desc)) +\n  geom_boxplot()\n\n\n\n\n\nBreakdown\n\nmun_names &lt;- lookup_muni(code_muni = \"all\") %&gt;%\n  mutate(code_muni = substr(code_muni, 0, 6)) %&gt;%\n  mutate(name_muni = paste0(name_muni, \", \", abbrev_state)) %&gt;%\n  select(code_muni, name_muni)\n\nUsing year 2010\n\n\n\nmodels_accuracy %&gt;% \n  left_join(mun_names, by = c(\"mun\" = \"code_muni\")) %&gt;%\n  select(.model_id, .model_desc, name_muni, rmse) %&gt;%\n  mutate(rmse = round(rmse, 2)) %&gt;%\n  arrange(.model_id, .model_desc, -rmse) %&gt;%\n  datatable(filter = \"top\")\n\n\n\n\n\n\n\nmodels_accuracy %&gt;% \n  left_join(mun_names, by = c(\"mun\" = \"code_muni\")) %&gt;%\n  select(.model_id, .model_desc, name_muni, rmse) %&gt;%\n  mutate(rmse = round(rmse, 2)) %&gt;%\n  group_by(.model_desc) %&gt;%\n  mutate(.model_id = case_when(\n    .model_id != \"global\" ~ \"cluster\",\n    .default = .model_id\n  )) %&gt;%\n  pivot_wider(names_from = .model_id, values_from = rmse) %&gt;%\n  mutate(dif = round(global - cluster, 2)) %&gt;% \n  ungroup() %&gt;%\n  datatable(filter = \"top\")\n\n\n\n\n\n\n\nmodels_accuracy %&gt;% \n  left_join(mun_names, by = c(\"mun\" = \"code_muni\")) %&gt;%\n  select(.model_id, .model_desc, name_muni, rmse) %&gt;%\n  group_by(.model_desc) %&gt;%\n  mutate(.model_id = case_when(\n    .model_id != \"global\" ~ \"cluster\",\n    .default = .model_id\n  )) %&gt;%\n  pivot_wider(names_from = .model_id, values_from = rmse) %&gt;%\n  mutate(dif = round(global - cluster, 2)) %&gt;% \n  arrange(.model_desc, dif) %&gt;%\n  ggplot(aes(x = global, y = cluster, fill = .model_desc, color = dif)) +\n  geom_point(size = 2, alpha = .3) +\n  viridis::scale_color_viridis(option = \"inferno\") +\n  theme_bw() +\n  labs(x = \"Global model\", y = \"Subset models\", title = \"RMSE error obtained with global and subset training strategies\")"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures.html#session-info",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures.html#session-info",
    "title": "Time series features clustering",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.1.2 (2021-11-01)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0\nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] rlang_1.1.1        ranger_0.15.1      DT_0.28            geobr_1.7.0       \n [5] tictoc_1.2         kableExtra_1.3.4   tsfeatures_1.1     timetk_2.8.3      \n [9] modeltime_1.2.7    finetune_1.1.0     bonsai_0.2.1       yardstick_1.2.0   \n[13] workflowsets_1.0.1 workflows_1.1.3    tune_1.1.1         rsample_1.1.1     \n[17] recipes_1.0.6      parsnip_1.1.0      modeldata_1.1.0    infer_1.0.4       \n[21] dials_1.2.0        scales_1.2.1       broom_1.0.5        tidymodels_1.1.0  \n[25] arrow_12.0.1       lubridate_1.9.2    forcats_1.0.0      stringr_1.5.0     \n[29] dplyr_1.1.2        purrr_1.0.1        readr_2.1.4        tidyr_1.3.0       \n[33] tibble_3.2.1       ggplot2_3.4.2      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n  [1] backports_1.4.1     systemfonts_1.0.4   splines_4.1.2      \n  [4] crosstalk_1.2.0     listenv_0.9.0       digest_0.6.33      \n  [7] foreach_1.5.2       htmltools_0.5.5     viridis_0.6.3      \n [10] fansi_1.0.4         magrittr_2.0.3      doParallel_1.0.17  \n [13] tzdb_0.4.0          globals_0.16.2      gower_1.0.1        \n [16] RcppParallel_5.1.7  xts_0.13.1          svglite_2.1.1      \n [19] hardhat_1.3.0       timechange_0.2.0    prettyunits_1.1.1  \n [22] forecast_8.21       tseries_0.10-54     colorspace_2.1-0   \n [25] rvest_1.0.3         xfun_0.39           jsonlite_1.8.7     \n [28] lme4_1.1-34         survival_3.2-13     zoo_1.8-12         \n [31] iterators_1.0.14    glue_1.6.2          gtable_0.3.3       \n [34] ipred_0.9-14        webshot_0.5.5       future.apply_1.11.0\n [37] quantmod_0.4.24     DBI_1.1.3           Rcpp_1.0.11        \n [40] viridisLite_0.4.2   units_0.8-2         GPfit_1.0-8        \n [43] bit_4.0.5           proxy_0.4-27        lava_1.7.2.1       \n [46] StanHeaders_2.26.27 prodlim_2023.03.31  htmlwidgets_1.6.2  \n [49] httr_1.4.6          ellipsis_0.3.2      pkgconfig_2.0.3    \n [52] farver_2.1.1        sass_0.4.7          nnet_7.3-17        \n [55] utf8_1.2.3          tidyselect_1.2.0    labeling_0.4.2     \n [58] DiceDesign_1.9      cachem_1.0.8        munsell_0.5.0      \n [61] tools_4.1.2         cli_3.6.1           generics_0.1.3     \n [64] evaluate_0.21       fastmap_1.1.1       yaml_2.3.7         \n [67] knitr_1.43          bit64_4.0.5         future_1.33.0      \n [70] nlme_3.1-155        xml2_1.3.5          compiler_4.1.2     \n [73] rstudioapi_0.15.0   curl_5.0.1          e1071_1.7-13       \n [76] lhs_1.1.6           bslib_0.5.0         stringi_1.7.12     \n [79] lattice_0.20-45     Matrix_1.6-0        nloptr_2.0.3       \n [82] classInt_0.4-9      urca_1.3-3          vctrs_0.6.3        \n [85] pillar_1.9.0        lifecycle_1.0.3     furrr_0.3.1        \n [88] jquerylib_0.1.4     lmtest_0.9-40       data.table_1.14.8  \n [91] R6_2.5.1            gridExtra_2.3       KernSmooth_2.23-20 \n [94] parallelly_1.36.0   codetools_0.2-18    boot_1.3-28        \n [97] MASS_7.3-55         assertthat_0.2.1    withr_2.5.0        \n[100] fracdiff_1.5-2      parallel_4.1.2      hms_1.1.3          \n[103] quadprog_1.5-8      grid_4.1.2          rpart_4.1.16       \n[106] timeDate_4022.108   minqa_1.2.5         class_7.3-20       \n[109] rmarkdown_2.23      TTR_0.24.3          sf_1.0-14"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures.html#links-of-intererest",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures.html#links-of-intererest",
    "title": "Time series features clustering",
    "section": "Links of intererest",
    "text": "Links of intererest\n\nhttps://cran.r-project.org/web/packages/tsfeatures/vignettes/tsfeatures.html\nhttps://www.tidymodels.org/learn/statistics/k-means/\nhttps://business-science.github.io/modeltime/articles/modeling-panel-data.html\nhttps://blog.bguarisma.com/series/time-series-forecasting"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_class_v2.html",
    "href": "dengue-model/dengue_weather_lag_class_v2.html",
    "title": "Denque and weather lags",
    "section": "",
    "text": "This notebook aims to study the relationship between Dengue cases incidence with lagged climate indicators, specially the co-occurrence of specific climate conditions that precedes an outbreak."
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_class_v2.html#packages",
    "href": "dengue-model/dengue_weather_lag_class_v2.html#packages",
    "title": "Denque and weather lags",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(hotspots)\nlibrary(DT)\nlibrary(finetune)\nlibrary(themis)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(rpart.plot)\nlibrary(vip)\nlibrary(doParallel)\ndoParallel::registerDoParallel()\n\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_class_v2.html#dataset-construction",
    "href": "dengue-model/dengue_weather_lag_class_v2.html#dataset-construction",
    "title": "Denque and weather lags",
    "section": "Dataset construction",
    "text": "Dataset construction\n\nDengue\n\ncode_muni &lt;- 3136702 # Juiz de Fora, MG\n\nThe original data on municipality dengue cases incidence present daily observations and is summarized by month.\n\ndengue_df &lt;- open_dataset(data_dir(\"dengue_data/parquet_aggregated/dengue_md.parquet\")) %&gt;%\n  filter(mun == !!substr(code_muni, 0, 6)) %&gt;%\n  collect() %&gt;%\n  summarise_by_time(.date_var = date, .by = \"month\", freq = sum(freq, na.rm = TRUE))\n\n\nClassify\nBased on the observed frequency distribution of cases, we classify the months as anomalous or not.\n\nhot_ref &lt;- hotspots(\n  x = dengue_df$freq, \n  p = 0.99, \n  var.est = \"mad\",\n)$positive.cut\n\ndengue_df_anom &lt;- dengue_df %&gt;%\n  mutate(anomaly = if_else(freq &gt;= hot_ref, TRUE, FALSE)) %&gt;%\n  mutate(anomaly = as.factor(anomaly))\n\n\ndengue_df_anom %&gt;%\n  ggplot(aes(x = date, y = freq, fill = anomaly)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_discrete(direction = -1) +\n  theme(\n    legend.position = \"bottom\",\n    legend.direction = \"horizontal\"\n  )\n\n\n\n\n\ndengue_df &lt;- inner_join(dengue_df, dengue_df_anom) \n\nJoining with `by = join_by(date, freq)`\n\n\nProportion table of anomalous (yes) and not anomalous (not) months.\n\nprop.table(table(dengue_df$anomaly))\n\n\n   FALSE     TRUE \n0.734375 0.265625 \n\n\n\n\n\nWeather data\nThe available weather data is also originally presented in daily observations and aggregate to months. For temperature indicators, the mean is used, for precipitation, the sum is used for aggregation.\n\ntmax &lt;- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/tmax.parquet\")) %&gt;%\n  filter(code_muni == code_muni) %&gt;%\n  filter(name == \"Tmax_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue_df$date) & date &lt;= max(dengue_df$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"month\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(tmax = value)\n\ntmin &lt;- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/tmin.parquet\")) %&gt;%\n  filter(code_muni == code_muni) %&gt;%\n  filter(name == \"Tmin_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue_df$date) & date &lt;= max(dengue_df$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"month\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(tmin = value)\n\nprec &lt;- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/pr.parquet\")) %&gt;%\n  filter(code_muni == code_muni) %&gt;%\n  filter(name == \"pr_sum\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue_df$date) & date &lt;= max(dengue_df$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"month\", value = sum(value, na.rm = TRUE)) %&gt;%\n  rename(prec = value)\n\n\n\nJoin data\nJoin dengue and weather datasets.\n\nres &lt;- inner_join(x = dengue_df, y = tmax, by = \"date\") %&gt;%\n  inner_join(tmin, by = \"date\") %&gt;%\n  inner_join(prec, by = \"date\") %&gt;%\n  select(date, anomaly, tmax, tmin, prec)\n\n\n\nTime lag\nThis step produces time lagged variables (from 1 to 6 months) from the weather indicators, remove the date variable, and omit records with missing data (only present after the time lag procedure).\n\nres_prep &lt;- res %&gt;%\n  select(-date) %&gt;%\n  tk_augment_lags(\n    .value = c(tmax, tmin, prec), \n    .lags = 1:6\n  ) %&gt;% \n  select(-tmax, -tmin, -prec) %&gt;%\n  na.omit()\n\n\nhead(res_prep) %&gt;% datatable()\n\n\n\n\n\n\n\n\nDataset split\nSplits the dataset into training and testing.\n\nres_split &lt;- initial_time_split(\n  data = res_prep, \n  prop = .8, \n  lag = 6\n)\n\ntrain_data &lt;- training(res_split)\ntest_data &lt;- testing(res_split)\n\nRemove old objects and triggers a memory garbage collection.\n\nrm(dengue_df, dengue_df_anom, res, res_prep)\ngc()\n\n          used (Mb) gc trigger   (Mb)  max used   (Mb)\nNcells 3013526  161    4749918  253.7   4749918  253.7\nVcells 5234027   40  403999596 3082.3 679072422 5181.0"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_class_v2.html#modeling",
    "href": "dengue-model/dengue_weather_lag_class_v2.html#modeling",
    "title": "Denque and weather lags",
    "section": "Modeling",
    "text": "Modeling\n\nRecipes\nCreates model recipes with the model specitication, data (train dataset). Several recipes are created with different methods to balance the training dataset.\n\nrec_upsample &lt;- \n  recipe(anomaly ~ ., train_data) %&gt;%\n  step_upsample(\n    anomaly, \n    over_ratio = tune()\n  )\n\n\nrec_rose &lt;- \n  recipe(anomaly ~ ., train_data) %&gt;%\n  step_rose(\n    anomaly, \n    over_ratio = tune()\n  )\n\n\nrec_smote &lt;- \n  recipe(anomaly ~ ., train_data) %&gt;%\n  step_smote(\n    anomaly, \n    over_ratio = tune(),\n    neighbors = tune()\n  )\n\n\nrec_adasyn &lt;- \n  recipe(anomaly ~ ., train_data) %&gt;%\n  step_adasyn(\n    anomaly, \n    over_ratio = tune(),\n    neighbors = tune()\n  )\n\n\nrec_downsample &lt;- \n  recipe(anomaly ~ ., train_data) %&gt;%\n  step_downsample(\n    anomaly, \n    under_ratio = tune()\n  )\n\n\n\nLearners\nDecision trees are choose due its directly interpretability and rules extraction. Two learners are created with different engines (rpart and partykit).\n\ntree_rp_spec &lt;- decision_tree(\n  cost_complexity = tune(),\n  tree_depth = tune(),\n  min_n = tune()\n) %&gt;%\n  set_engine(\"rpart\") %&gt;%\n  set_mode(\"classification\")\n\n\n\nFolding\nCreates a v-fold for cross-validation.\n\nfolds &lt;- vfold_cv(\n  data = train_data, \n  v = 10, \n  strata = anomaly\n)\n\n\n\nWorkflow setting\nThis step creates an modeling workflow by combining the recipes and learners options.\n\nwf_set &lt;- \n  workflow_set(\n    preproc = list(\n      upsample = rec_upsample,\n      rose = rec_rose, \n      smote = rec_smote, \n      adasyn = rec_adasyn,\n      downsample = rec_downsample\n    ),\n    models = list(\n      dt = tree_rp_spec\n    ),\n    cross = TRUE\n  )\n\n\n\nTuning\nThis step tune hyper-parameters from the models (learners and balancing steps) using an ANOVA race.\n\ntune_results &lt;- wf_set %&gt;%\n  workflow_map(\n    \"tune_race_anova\",\n    seed = 345,\n    resamples = folds,\n    grid = 50,\n    metrics = metric_set(\n      accuracy, \n      bal_accuracy,\n      roc_auc, \n      ppv,\n      sens,\n      spec\n    ),\n    control = control_race(parallel_over = \"everything\"),\n    verbose = TRUE\n  )\n\ni 1 of 5 tuning:     upsample_dt\n\n\n✔ 1 of 5 tuning:     upsample_dt (9.4s)\n\n\ni 2 of 5 tuning:     rose_dt\n\n\n✔ 2 of 5 tuning:     rose_dt (7.4s)\n\n\ni 3 of 5 tuning:     smote_dt\n\n\n✔ 3 of 5 tuning:     smote_dt (9.7s)\n\n\ni 4 of 5 tuning:     adasyn_dt\n\n\n✔ 4 of 5 tuning:     adasyn_dt (8s)\n\n\ni 5 of 5 tuning:     downsample_dt\n\n\n✔ 5 of 5 tuning:     downsample_dt (10.4s)\n\n\n\n\nBest workflow and model selection\nBased on the tuning results, this step identifies the best learner strategy and best model hyper-parameters based on the ROC-AUC metric.\n\ntarget_metric &lt;- \"bal_accuracy\"\n\n\nbest_wf &lt;- tune_results %&gt;% \n  rank_results(rank_metric = target_metric) %&gt;% \n  filter(.metric == target_metric) %&gt;% \n  select(wflow_id, model, .config, accuracy = mean, rank) %&gt;%\n  slice(1) %&gt;%\n  pull(wflow_id)\n\nprint(best_wf)\n\n[1] \"upsample_dt\"\n\n\n\nbest_tune &lt;- tune_results %&gt;%\n  extract_workflow_set_result(id = best_wf) %&gt;%\n  select_best(metric = target_metric)\n\nt(best_tune)\n\n                [,1]                   \ncost_complexity \"0.02850468\"           \ntree_depth      \"9\"                    \nmin_n           \"8\"                    \nover_ratio      \"0.8693291\"            \n.config         \"Preprocessor37_Model1\"\n\n\n\n\nFinalize workflow\nFinalizes the workflow with the choose learner and hyper-parameter combination, performing the last fit of the model with the entire dataset.\n\nfitted_wf &lt;- tune_results %&gt;%\n  extract_workflow(id = best_wf) %&gt;%\n  finalize_workflow(best_tune) %&gt;%\n  last_fit(split = res_split)"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_class_v2.html#results",
    "href": "dengue-model/dengue_weather_lag_class_v2.html#results",
    "title": "Denque and weather lags",
    "section": "Results",
    "text": "Results\n\nDecision tree plot\n\nextracted_engine &lt;-  fitted_wf %&gt;% extract_fit_engine()\n\nrpart.plot(extracted_engine, roundint = FALSE)\n\n\n\n\n\n\nConfusion matrix\n\naugment(fitted_wf) %&gt;%\n  conf_mat(truth = anomaly, estimate = .pred_class)\n\n          Truth\nPrediction FALSE TRUE\n     FALSE    16    1\n     TRUE      5    6\n\n\n\n\nModel performance metrics\n\nmulti_metric &lt;- metric_set(\n  accuracy, \n  bal_accuracy,\n  roc_auc, \n  ppv,\n  sens,\n  spec\n)\n\naugment(fitted_wf) %&gt;%\n  multi_metric(truth = anomaly, estimate = .pred_class, .pred_TRUE)\n\n# A tibble: 6 × 3\n  .metric      .estimator .estimate\n  &lt;chr&gt;        &lt;chr&gt;          &lt;dbl&gt;\n1 accuracy     binary         0.786\n2 bal_accuracy binary         0.810\n3 ppv          binary         0.941\n4 sens         binary         0.762\n5 spec         binary         0.857\n6 roc_auc      binary         0.238\n\n\n\n\nVariable importance plot\n\nfitted_wf %&gt;% \n  extract_fit_engine() %&gt;% \n  vip()"
  },
  {
    "objectID": "dengue-model/dengue_weather_lag_class_v2.html#session-info",
    "href": "dengue-model/dengue_weather_lag_class_v2.html#session-info",
    "title": "Denque and weather lags",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] parallel  stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] ROSE_0.0-4         rlang_1.1.3        doParallel_1.0.17  iterators_1.0.14  \n [5] foreach_1.5.2      vip_0.4.1          rpart.plot_3.1.1   rpart_4.1.23      \n [9] timetk_2.9.0       arrow_14.0.0.2     themis_1.0.2       finetune_1.1.0    \n[13] DT_0.31            hotspots_1.0.3     ineq_0.2-13        lattice_0.22-5    \n[17] yardstick_1.3.0    workflowsets_1.0.1 workflows_1.1.3    tune_1.1.2        \n[21] rsample_1.2.0      recipes_1.0.9      parsnip_1.1.1      modeldata_1.3.0   \n[25] infer_1.0.5        dials_1.2.0        scales_1.3.0       broom_1.0.5       \n[29] tidymodels_1.1.1   lubridate_1.9.3    forcats_1.0.0      stringr_1.5.1     \n[33] dplyr_1.1.4        purrr_1.0.2        readr_2.1.5        tidyr_1.3.1       \n[37] tibble_3.2.1       ggplot2_3.4.4      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n [1] magrittr_2.0.3      furrr_0.3.1         compiler_4.3.2     \n [4] vctrs_0.6.5         lhs_1.1.6           pkgconfig_2.0.3    \n [7] fastmap_1.1.1       ellipsis_0.3.2      backports_1.4.1    \n[10] labeling_0.4.3      utf8_1.2.4          rmarkdown_2.25     \n[13] prodlim_2023.08.28  tzdb_0.4.0          nloptr_2.0.3       \n[16] bit_4.0.5           xfun_0.41           cachem_1.0.8       \n[19] jsonlite_1.8.8      prettyunits_1.2.0   R6_2.5.1           \n[22] bslib_0.6.1         stringi_1.8.3       boot_1.3-28        \n[25] parallelly_1.36.0   jquerylib_0.1.4     Rcpp_1.0.12        \n[28] assertthat_0.2.1    knitr_1.45          future.apply_1.11.1\n[31] zoo_1.8-12          Matrix_1.6-3        splines_4.3.2      \n[34] nnet_7.3-19         timechange_0.3.0    tidyselect_1.2.0   \n[37] rstudioapi_0.15.0   yaml_2.3.8          timeDate_4032.109  \n[40] codetools_0.2-19    listenv_0.9.0       withr_3.0.0        \n[43] evaluate_0.23       future_1.33.1       survival_3.5-7     \n[46] xts_0.13.2          pillar_1.9.0        generics_0.1.3     \n[49] hms_1.1.3           munsell_0.5.0       minqa_1.2.6        \n[52] globals_0.16.2      class_7.3-22        glue_1.7.0         \n[55] tools_4.3.2         data.table_1.14.10  lme4_1.1-35.1      \n[58] gower_1.0.1         grid_4.3.2          crosstalk_1.2.1    \n[61] ipred_0.9-14        colorspace_2.1-0    nlme_3.1-163       \n[64] cli_3.6.2           DiceDesign_1.10     fansi_1.0.6        \n[67] lava_1.7.3          gtable_0.3.4        GPfit_1.0-8        \n[70] sass_0.4.8          digest_0.6.34       farver_2.1.1       \n[73] htmlwidgets_1.6.4   htmltools_0.5.7     lifecycle_1.0.4    \n[76] hardhat_1.3.0       bit64_4.0.5         MASS_7.3-60"
  },
  {
    "objectID": "dengue-model/dengue_classification_symptoms_conditions_multi.html",
    "href": "dengue-model/dengue_classification_symptoms_conditions_multi.html",
    "title": "Dengue case classification",
    "section": "",
    "text": "The objective of this notebook is to predict a dengue suspected case based on its symptoms, clinical conditions and other patient related variables.\nThis trained model may be used to reclassify suspected dengue cases with inconclusive diagnosis."
  },
  {
    "objectID": "dengue-model/dengue_classification_symptoms_conditions_multi.html#packages",
    "href": "dengue-model/dengue_classification_symptoms_conditions_multi.html#packages",
    "title": "Dengue case classification",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(knitr)\nlibrary(lubridate)\nlibrary(tidymodels)\nlibrary(finetune)\nlibrary(bonsai)\nlibrary(tictoc)\nlibrary(vip)"
  },
  {
    "objectID": "dengue-model/dengue_classification_symptoms_conditions_multi.html#data",
    "href": "dengue-model/dengue_classification_symptoms_conditions_multi.html#data",
    "title": "Dengue case classification",
    "section": "Data",
    "text": "Data\n\nData prior to 2016 does not have patient symptoms and clinical conditions.\nCases classified as inconclusive are discarded for model training.\n\n\n# Data sources\nfiles_list &lt;- c(\n  \"../dengue-data/parquets/dengue_2016.parquet\",\n  \"../dengue-data/parquets/dengue_2017.parquet\",\n  \"../dengue-data/parquets/dengue_2018.parquet\",\n  \"../dengue-data/parquets/dengue_2019.parquet\",\n  \"../dengue-data/parquets/dengue_2020.parquet\",\n  \"../dengue-data/parquets/dengue_2021.parquet\"\n)\n\n# Independent variables\nx_vars &lt;- c(\"FEBRE\", \"MIALGIA\", \"CEFALEIA\", \n            \"EXANTEMA\", \"VOMITO\", \"NAUSEA\", \n            \"DOR_COSTAS\", \"CONJUNTVIT\", \n            \"ARTRITE\", \"ARTRALGIA\", \"PETEQUIA_N\", \n            \"LEUCOPENIA\", \"LACO\", \"DOR_RETRO\", \n            \"DIABETES\", \"HEMATOLOG\", \"HEPATOPAT\", \n            \"HEPATOPAT\", \"RENAL\", \"HIPERTENSA\",\n            \"ACIDO_PEPT\", \"AUTO_IMUNE\")\n\n# Prepare data\ndengue &lt;- arrow::open_dataset(sources = files_list) %&gt;%\n  # Select variables\n  select(all_of(c(\"CLASSI_FIN\", \"COMUNINF\", \"IDADEanos\", \"DT_SIN_PRI\", x_vars))) %&gt;%\n  # Filter out \"Inconclusivo\" cases\n  filter(CLASSI_FIN != \"Inconclusivo\") %&gt;%\n  # Collect data from parquet files\n  collect() %&gt;%\n  # Prepare variables\n  mutate(CLASSI_FIN = case_when(\n    CLASSI_FIN != \"Descartado\" ~ TRUE,\n    .default = FALSE\n  )) %&gt;%\n  mutate(CLASSI_FIN = as.factor(CLASSI_FIN)) %&gt;%\n  mutate(DT_SIN_PRI = as_date(DT_SIN_PRI)) %&gt;%\n  mutate(COMUNINF = as.factor(COMUNINF)) %&gt;%\n  mutate_at(.vars = x_vars, .funs = ~ . == \"Sim\") \n\n\n# Smaller dataset for tests\ndengue &lt;- sample_n(dengue, 500000)"
  },
  {
    "objectID": "dengue-model/dengue_classification_symptoms_conditions_multi.html#modeling",
    "href": "dengue-model/dengue_classification_symptoms_conditions_multi.html#modeling",
    "title": "Dengue case classification",
    "section": "Modeling",
    "text": "Modeling\n\nTrain and test dataset split\n\nProportion between training and test: 3/4\n\n\nset.seed(123)\n\ndengue_split &lt;- dengue %&gt;%\n  initial_split(prop = 3/4, strata = CLASSI_FIN)\n\ndengue_train &lt;- training(dengue_split)\ndengue_test &lt;- testing(dengue_split)\n\nset.seed(234)\ndengue_folds &lt;- vfold_cv(dengue_train, strata = CLASSI_FIN)\n\n\n\nRecipes\n\ndengue_rec_1 &lt;- \n  recipe(CLASSI_FIN ~ . , data = dengue_train) %&gt;%\n  step_rm(COMUNINF) %&gt;%\n  step_rm(DT_SIN_PRI) %&gt;%\n  #step_date(DT_SIN_PRI, features = c(\"month\", \"week\", \"semester\", \"quarter\"), keep_original_cols = FALSE) %&gt;%\n  step_integer(all_predictors())\n\n\n\nSpecifications\n\nXGB\n\nxgb_spec &lt;-\n  boost_tree(\n    trees = tune(),\n    min_n = tune(),\n    mtry = tune()\n  ) %&gt;%\n  set_engine(\"xgboost\") %&gt;%\n  set_mode(\"classification\")\n\n\n\nDecision tree\n\ncart_spec &lt;-\n  decision_tree(\n    cost_complexity = tune(), \n    min_n = tune()\n  ) %&gt;% \n  set_engine(\"rpart\") %&gt;% \n  set_mode(\"classification\")\n\n\n\n\nWorkflows\n\nall_workflows &lt;- \n  workflow_set(\n    preproc = list(recipe_1 = dengue_rec_1),\n    models = list(xgb = xgb_spec, cart = cart_spec)\n  )\n\n\n\nTuning\n\ndoParallel::registerDoParallel()\n\nrace_ctrl &lt;- control_race(parallel_over = \"everything\")\n\ntic()\nrace_results &lt;- \n  all_workflows %&gt;%\n  workflow_map(\n    \"tune_race_anova\",\n    seed = 345,\n    resamples = dengue_folds,\n    grid = 10,\n    control = race_ctrl\n  )\n\ni Creating pre-processing data to finalize unknown parameter: mtry\n\ntoc()\n\n1651.906 sec elapsed\n\n\n\nRace metrics\n\ntrain_rank_results &lt;- rank_results(race_results, rank_metric = \"roc_auc\")\n\ntrain_rank_results\n\n# A tibble: 4 × 9\n  wflow_id      .config     .metric  mean std_err     n preprocessor model  rank\n  &lt;chr&gt;         &lt;chr&gt;       &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt; &lt;int&gt; &lt;chr&gt;        &lt;chr&gt; &lt;int&gt;\n1 recipe_1_xgb  Preprocess… accura… 0.620 7.72e-4    10 recipe       boos…     1\n2 recipe_1_xgb  Preprocess… roc_auc 0.633 1.10e-3    10 recipe       boos…     1\n3 recipe_1_cart Preprocess… accura… 0.615 7.98e-4    10 recipe       deci…     2\n4 recipe_1_cart Preprocess… roc_auc 0.622 1.42e-3    10 recipe       deci…     2\n\n\n\nautoplot(race_results, metric = \"roc_auc\")\n\n\n\n\n\n\n\nLast fit\n\nselection_train &lt;- train_rank_results %&gt;%\n  arrange(-mean) %&gt;%\n  pull(wflow_id) %&gt;%\n  first()\n\nselection_train\n\n[1] \"recipe_1_xgb\"\n\n\n\nbest_results &lt;- race_results %&gt;%\n  extract_workflow_set_result(selection_train) %&gt;%\n  select_best(\"accuracy\")\n\nbest_results\n\n# A tibble: 1 × 4\n   mtry trees min_n .config              \n  &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt;                \n1     3   174     8 Preprocessor1_Model02\n\n\n\nlast_fit &lt;- race_results %&gt;%\n  extract_workflow(selection_train) %&gt;%\n  finalize_workflow(best_results) %&gt;%\n  last_fit(dengue_split)\n\n\n\nEvaluate on test\n\ncollect_metrics(last_fit)\n\n# A tibble: 2 × 4\n  .metric  .estimator .estimate .config             \n  &lt;chr&gt;    &lt;chr&gt;          &lt;dbl&gt; &lt;chr&gt;               \n1 accuracy binary         0.620 Preprocessor1_Model1\n2 roc_auc  binary         0.635 Preprocessor1_Model1\n\n\n\ncollect_predictions(last_fit) %&gt;%\n    conf_mat(CLASSI_FIN, .pred_class)\n\n          Truth\nPrediction FALSE  TRUE\n     FALSE 16696 10861\n     TRUE  36661 60782\n\n\n\nlast_fit %&gt;%\n  extract_fit_engine() %&gt;%\n  vip()"
  },
  {
    "objectID": "dengue-model/dengue_classification_symptoms_conditions_multi.html#session-info",
    "href": "dengue-model/dengue_classification_symptoms_conditions_multi.html#session-info",
    "title": "Dengue case classification",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.1.2 (2021-11-01)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0\nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] rpart_4.1.16       rlang_1.1.1        xgboost_1.7.5.1    vip_0.3.2         \n [5] tictoc_1.2         bonsai_0.2.1       finetune_1.1.0     yardstick_1.2.0   \n [9] workflowsets_1.0.1 workflows_1.1.3    tune_1.1.1         rsample_1.1.1     \n[13] recipes_1.0.6      parsnip_1.1.0      modeldata_1.1.0    infer_1.0.4       \n[17] dials_1.2.0        scales_1.2.1       broom_1.0.5        tidymodels_1.1.0  \n[21] knitr_1.43         arrow_12.0.1       lubridate_1.9.2    forcats_1.0.0     \n[25] stringr_1.5.0      dplyr_1.1.2        purrr_1.0.1        readr_2.1.4       \n[29] tidyr_1.3.0        tibble_3.2.1       ggplot2_3.4.2      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n [1] nlme_3.1-155        bit64_4.0.5         doParallel_1.0.17  \n [4] DiceDesign_1.9      tools_4.1.2         backports_1.4.1    \n [7] utf8_1.2.3          R6_2.5.1            colorspace_2.1-0   \n[10] nnet_7.3-17         withr_2.5.0         gridExtra_2.3      \n[13] tidyselect_1.2.0    bit_4.0.5           compiler_4.1.2     \n[16] cli_3.6.1           labeling_0.4.2      digest_0.6.33      \n[19] minqa_1.2.5         rmarkdown_2.23      pkgconfig_2.0.3    \n[22] htmltools_0.5.5     lme4_1.1-34         parallelly_1.36.0  \n[25] lhs_1.1.6           fastmap_1.1.1       htmlwidgets_1.6.2  \n[28] rstudioapi_0.15.0   farver_2.1.1        generics_0.1.3     \n[31] jsonlite_1.8.7      magrittr_2.0.3      Matrix_1.6-0       \n[34] Rcpp_1.0.11         munsell_0.5.0       fansi_1.0.4        \n[37] GPfit_1.0-8         lifecycle_1.0.3     furrr_0.3.1        \n[40] stringi_1.7.12      yaml_2.3.7          MASS_7.3-55        \n[43] grid_4.1.2          parallel_4.1.2      listenv_0.9.0      \n[46] lattice_0.20-45     splines_4.1.2       hms_1.1.3          \n[49] pillar_1.9.0        boot_1.3-28         future.apply_1.11.0\n[52] codetools_0.2-18    glue_1.6.2          evaluate_0.21      \n[55] data.table_1.14.8   nloptr_2.0.3        vctrs_0.6.3        \n[58] tzdb_0.4.0          foreach_1.5.2       gtable_0.3.3       \n[61] future_1.33.0       assertthat_0.2.1    xfun_0.39          \n[64] gower_1.0.1         prodlim_2023.03.31  class_7.3-20       \n[67] survival_3.2-13     timeDate_4022.108   iterators_1.0.14   \n[70] hardhat_1.3.0       lava_1.7.2.1        timechange_0.2.0   \n[73] globals_0.16.2      ellipsis_0.3.2      ipred_0.9-14"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html",
    "title": "Time series features clustering, with robust sparse k-means",
    "section": "",
    "text": "This notebooks aims to implement the global and subset modelling, adopting a clustering strategy based on time series features extraction, with the {tsfeatures} package.\nAn interesting approach to cluster time series based on feature extraction may be found on Tiano, Bonifati, and Ng (2021). We approximate this strategy by using a robust implementation of sparse \\(k\\)-means clustering (Witten and Tibshirani 2010; Kondo, Salibian-Barrera, and Zamar 2012)."
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#packages",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#packages",
    "title": "Time series features clustering, with robust sparse k-means",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(tidymodels)\nlibrary(bonsai)\nlibrary(finetune)\nlibrary(modeltime)\nlibrary(timetk)\nlibrary(tsfeatures)\nlibrary(sparcl)\nlibrary(kableExtra)\nlibrary(tictoc)\nlibrary(geobr)\nlibrary(DT)"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#load-data",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#load-data",
    "title": "Time series features clustering, with robust sparse k-means",
    "section": "Load data",
    "text": "Load data\n\ntdengue &lt;- read_parquet(file = \"../tdengue.parquet\") %&gt;%\n  drop_na() %&gt;%\n  select(mun, date, starts_with(\"cases\"))\n\n\n\n\n\n\n\nNote\n\n\n\n\nNA values are created when the lagged variables were calculated. The rows containing those NA values are dropped due machine learning regressors constraints.\nFor validation purposes, only the cases and cases_lag* covariates variables are keep.\n\n\n\n\nglimpse(tdengue)\n\nRows: 161,370\nColumns: 9\n$ mun        &lt;chr&gt; \"110002\", \"110002\", \"110002\", \"110002\", \"110002\", \"110002\",…\n$ date       &lt;date&gt; 2011-02-06, 2011-02-13, 2011-02-20, 2011-02-27, 2011-03-06…\n$ cases      &lt;dbl&gt; -0.51044592, 0.07880156, 0.66804904, 0.07880156, -0.5104459…\n$ cases_lag1 &lt;dbl&gt; 2.43579149, -0.51044592, 0.07880156, 0.66804904, 0.07880156…\n$ cases_lag2 &lt;dbl&gt; 0.66804904, 2.43579149, -0.51044592, 0.07880156, 0.66804904…\n$ cases_lag3 &lt;dbl&gt; 0.07880156, 0.66804904, 2.43579149, -0.51044592, 0.07880156…\n$ cases_lag4 &lt;dbl&gt; 0.66804904, 0.07880156, 0.66804904, 2.43579149, -0.51044592…\n$ cases_lag5 &lt;dbl&gt; 0.66804904, 0.66804904, 0.07880156, 0.66804904, 2.43579149,…\n$ cases_lag6 &lt;dbl&gt; -0.51044592, 0.66804904, 0.66804904, 0.07880156, 0.66804904…"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#clustering",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#clustering",
    "title": "Time series features clustering, with robust sparse k-means",
    "section": "Clustering",
    "text": "Clustering\nThis procedure goal is to cluster the municipalities considering time series features similarities.\n\nPrepare data\nPrepare the data for use with the {tsfeatures} package, converting the panel data to a list of ts objects.\n\ntdengue_df &lt;- tdengue %&gt;%\n  arrange(mun, date) %&gt;%\n  select(-date) %&gt;%\n  nest(data = cases, .by = mun)\n\ntdengue_list &lt;- lapply(tdengue_df$data, ts)\n\n\n\nTime series features\nExtract time series features.\n\ntsf &lt;- tsfeatures(\n  tslist = tdengue_list, \n  features = c(\"entropy\", \"stability\", \"lumpiness\", \"flat_spots\", \"stl_features\", \"acf_features\")\n  )\ntsf$mun &lt;- tdengue_df$mun\n\n\n\nRobust sparse k-means clustering\nCluster the municipalities based solely on the time series features.\n\npoints &lt;- tsf %&gt;%\n  select(-mun, -nperiods, -seasonal_period) %&gt;%\n  as.matrix() %&gt;%\n  scale()\n\nUses \\(k\\) from 2 to 10 for clustering.\n\nk_seq &lt;- 2:10\n\n\ncluster_results &lt;- tibble()\ncluster_labels &lt;- list()\nfor(k in k_seq){\n  res &lt;- RSKC::RSKC(d = points, alpha = 10/60, L1 = NULL, ncl = k)\n  \n  tmp &lt;- list(list(labels = res$labels))\n  names(tmp) &lt;-  k\n  \n  cluster_labels &lt;- append(cluster_labels, tmp)\n  \n  cluster_results &lt;- bind_rows(cluster_results, tibble(k = k, wss = res$WSS))\n}\n\nThe total sum of squares is plotted. The $k=5$ seems to be a break point.\n\nggplot(cluster_results, aes(k, wss)) +\n  geom_line() +\n  geom_point() +\n  theme_bw()\n\n\n\n\n\n\nIdentify municipalities and cluster id\nFinally, the cluster partition ID is added to the main dataset.\n\ncluster_ids &lt;- tibble(\n  mun = tdengue_df$mun,\n  group = cluster_labels[[\"5\"]]$labels\n)\n\n\ntdengue &lt;- left_join(tdengue, cluster_ids, by = \"mun\")\n\n\n\nCluster sizes\n\ntable(cluster_ids$group)\n\n\n 1  2  3  4  5 \n38 92 80 84 32"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#train-and-test-split",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#train-and-test-split",
    "title": "Time series features clustering, with robust sparse k-means",
    "section": "Train and test split",
    "text": "Train and test split\nSplit the data into training and testing. The function time_series_split handles the time series, not shuffling them, and considering the panel data format, as depicted in the message about overlapping timestamps detected.\nThe last two years data will be used as the training set.\n\ntdengue_split &lt;- tdengue %&gt;%\n  time_series_split(\n    date_var = date, \n    assess = 52*2,\n    cumulative = TRUE\n  )\n\nData is not ordered by the 'date_var'. Resamples will be arranged by `date`.\n\n\nOverlapping Timestamps Detected. Processing overlapping time series together using sliding windows.\n\ntdengue_split\n\n&lt;Analysis/Assess/Total&gt;\n&lt;127466/33904/161370&gt;\n\n\n\nK-folds\nThe training set will be split into k folds.\n\ntdengue_split_folds &lt;- training(tdengue_split) %&gt;%\n  vfold_cv(v = 5)"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#recipes",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#recipes",
    "title": "Time series features clustering, with robust sparse k-means",
    "section": "Recipes",
    "text": "Recipes\nThe global and subset models training specification are called recipes. The procedure bellow creates a list of those recipes.\n\nrecipes_list &lt;- list()\n\n\nGlobal\nThe global training recipe uses data from all municipalities for training the models.\n\nThe date and group variables are removed prior training\nThe municipality identification variable is treated as an Id variable, taking no place as a predictor in the training process\n\n\nrecipe_global &lt;- recipe(cases ~ ., data = training(tdengue_split)) %&gt;%\n  step_rm(date, group) %&gt;%\n  update_role(mun, new_role = \"id variable\")\n\nrecipes_list &lt;- append(recipes_list, list(global = recipe_global))\n\nrm(recipe_global)\n\n\n\nGroups\n\nFor each group created by the clustering process, a specific training recipe will be created. For this, the first step is to filter rows from the training set, keep only the rows belonging to the group in the loop\nThe date and group variables are removed prior training\nThe municipality identification variable is treated as an Id variable, taking no place as a predictor in the training process\n\n\nfor(g in unique(tdengue$group)){\n  tmp &lt;- recipe(cases ~ ., data = training(tdengue_split)) %&gt;%\n    step_filter(group == !!g) %&gt;%\n    step_rm(date, group) %&gt;%\n    update_role(mun, new_role = \"id variable\")\n  \n  tmp &lt;- list(tmp)\n  tmp &lt;- setNames(tmp, paste0(\"g\", g))\n  \n  recipes_list &lt;- append(recipes_list, tmp)\n  \n  rm(tmp)\n}"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#regressors-specification",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#regressors-specification",
    "title": "Time series features clustering, with robust sparse k-means",
    "section": "Regressors specification",
    "text": "Regressors specification\n\nRandom forest\nA Random Forest specification using the ranger engine. The trees and min_n hyperparameters will be tuned.\n\nrf_spec &lt;- rand_forest(\n  trees = tune(),\n  min_n = tune()\n) %&gt;%\n  set_engine(\"ranger\") %&gt;%\n  set_mode(\"regression\")\n\n\n\nLightGBM\n\n# lgbm_spec &lt;- boost_tree(\n#   trees = tune(),\n#   min_n = tune(),\n#   tree_depth = tune()\n# ) %&gt;%\n#   set_engine(\"lightgbm\") %&gt;%\n#   set_mode(\"regression\")"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#workflow-set",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#workflow-set",
    "title": "Time series features clustering, with robust sparse k-means",
    "section": "Workflow set",
    "text": "Workflow set\nThis step creates a workflow set, combining the training recipes and regressors specifications.\n\nall_workflows &lt;- workflow_set(\n  preproc = recipes_list, \n  models = list(rf = rf_spec), \n  cross = TRUE\n)"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#tune",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#tune",
    "title": "Time series features clustering, with robust sparse k-means",
    "section": "Tune",
    "text": "Tune\nThis step tunes the training hyperparameters of each workflow.\n\ndoParallel::registerDoParallel()\n\ntic()\nrace_results &lt;- \n  all_workflows %&gt;%\n  workflow_map(\n    \"tune_race_anova\",\n    seed = 345,\n    resamples = tdengue_split_folds,\n    grid = 10,\n    control = control_race(parallel_over = \"everything\"),\n    verbose = TRUE\n  )\n\ni 1 of 6 tuning:     global_rf\n\n\n✔ 1 of 6 tuning:     global_rf (29m 42.5s)\n\n\ni 2 of 6 tuning:     g3_rf\n\n\n✔ 2 of 6 tuning:     g3_rf (3m 8.8s)\n\n\ni 3 of 6 tuning:     g1_rf\n\n\n✔ 3 of 6 tuning:     g1_rf (1m 39s)\n\n\ni 4 of 6 tuning:     g4_rf\n\n\n✔ 4 of 6 tuning:     g4_rf (4m 14.5s)\n\n\ni 5 of 6 tuning:     g2_rf\n\n\n✔ 5 of 6 tuning:     g2_rf (5m 57.4s)\n\n\ni 6 of 6 tuning:     g5_rf\n\n\n✔ 6 of 6 tuning:     g5_rf (37.6s)\n\ntoc()\n\n2721.037 sec elapsed"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#fit",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#fit",
    "title": "Time series features clustering, with robust sparse k-means",
    "section": "Fit",
    "text": "Fit\nEach workflow will be trained using the tuned hyperparameters, considering the RMSE metric as reference.\nThis procedure creates a list of trained models, containing the fit results and a list of the municipalities used on the training of each workflow.\nThe global workflow is trained with data from all municipalities and the subsets workflows are trained using the respective municipalities list given by the cluster algorithm.\n\ntic()\ntrained_models &lt;- list()\nfor(w in unique(race_results$wflow_id)){\n  best_tune &lt;- race_results %&gt;%\n    extract_workflow_set_result(w) %&gt;%\n    select_best(\"rmse\")\n  \n  final_fit &lt;- race_results %&gt;%\n    extract_workflow(w) %&gt;%\n    finalize_workflow(best_tune) %&gt;%\n    fit(training(tdengue_split))\n  \n  mold &lt;- extract_mold(final_fit)\n  train_ids &lt;- mold$extras$roles$`id variable` %&gt;%\n    distinct() %&gt;%\n    pull() %&gt;%\n    as.character()\n  \n  final_fit &lt;- list(\n    list(\n      \"final_fit\" = final_fit, \n      \"train_ids\" = train_ids\n    )\n  )\n  \n  final_fit &lt;- setNames(final_fit, paste0(w))\n  \n  trained_models &lt;- append(trained_models, final_fit)\n}\ntoc()\n\n410.867 sec elapsed"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#accuracy",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#accuracy",
    "title": "Time series features clustering, with robust sparse k-means",
    "section": "Accuracy",
    "text": "Accuracy\nAfter training each workflow, the accuracy of the models are obtained applying the fitted models on the testing set.\nFor the global model, all municipalities are using for testing. For the subsets models, only data from the subset’s municipalities are considered for testing.\nThe RMSE metric is obtained for each workflow and municipality.\n\nmodels_accuracy &lt;- tibble()\nfor(t in 1:length(trained_models)){\n  \n  model_tbl &lt;- modeltime_table(trained_models[[t]][[1]]) \n  testing_set &lt;- testing(tdengue_split) %&gt;%\n    filter(mun %in% trained_models[[t]][[2]])\n  \n\n  calib_tbl &lt;- model_tbl %&gt;%\n      modeltime_calibrate(\n        new_data = testing_set, \n        id       = \"mun\"\n      )\n  \n  res &lt;- calib_tbl %&gt;% \n      modeltime_accuracy(\n        acc_by_id = TRUE, \n        metric_set = metric_set(rmse)\n      )\n  \n  res$.model_id &lt;- word(names(trained_models[t]), 1, sep = \"_\")\n  \n  models_accuracy &lt;- bind_rows(models_accuracy, res)\n}\n\nThis plot presents the RMSE distribution across the workflows.\n\nggplot(data = models_accuracy, aes(x = .model_id, y = rmse, fill = .model_desc)) +\n  geom_boxplot()\n\n\n\n\n\nBreakdown\n\nmun_names &lt;- lookup_muni(code_muni = \"all\") %&gt;%\n  mutate(code_muni = substr(code_muni, 0, 6)) %&gt;%\n  mutate(name_muni = paste0(name_muni, \", \", abbrev_state)) %&gt;%\n  select(code_muni, name_muni)\n\nUsing year 2010\n\n\n\nmodels_accuracy %&gt;% \n  left_join(mun_names, by = c(\"mun\" = \"code_muni\")) %&gt;%\n  select(.model_id, .model_desc, name_muni, rmse) %&gt;%\n  mutate(rmse = round(rmse, 2)) %&gt;%\n  arrange(.model_id, .model_desc, -rmse) %&gt;%\n  datatable(filter = \"top\")\n\n\n\n\n\n\n\nmodels_accuracy %&gt;% \n  left_join(mun_names, by = c(\"mun\" = \"code_muni\")) %&gt;%\n  select(.model_id, .model_desc, name_muni, rmse) %&gt;%\n  mutate(rmse = round(rmse, 2)) %&gt;%\n  group_by(.model_desc) %&gt;%\n  mutate(.model_id = case_when(\n    .model_id != \"global\" ~ \"cluster\",\n    .default = .model_id\n  )) %&gt;%\n  pivot_wider(names_from = .model_id, values_from = rmse) %&gt;%\n  mutate(dif = round(global - cluster, 2)) %&gt;% \n  ungroup() %&gt;%\n  datatable(filter = \"top\")"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#session-info",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#session-info",
    "title": "Time series features clustering, with robust sparse k-means",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.1.2 (2021-11-01)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0\nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] rlang_1.1.1        ranger_0.15.1      DT_0.28            geobr_1.7.0       \n [5] tictoc_1.2         kableExtra_1.3.4   sparcl_1.0.4       tsfeatures_1.1    \n [9] timetk_2.8.3       modeltime_1.2.7    finetune_1.1.0     bonsai_0.2.1      \n[13] yardstick_1.2.0    workflowsets_1.0.1 workflows_1.1.3    tune_1.1.1        \n[17] rsample_1.1.1      recipes_1.0.6      parsnip_1.1.0      modeldata_1.1.0   \n[21] infer_1.0.4        dials_1.2.0        scales_1.2.1       broom_1.0.5       \n[25] tidymodels_1.1.0   arrow_12.0.1       lubridate_1.9.2    forcats_1.0.0     \n[29] stringr_1.5.0      dplyr_1.1.2        purrr_1.0.1        readr_2.1.4       \n[33] tidyr_1.3.0        tibble_3.2.1       ggplot2_3.4.2      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n  [1] backports_1.4.1     systemfonts_1.0.4   splines_4.1.2      \n  [4] crosstalk_1.2.0     listenv_0.9.0       digest_0.6.33      \n  [7] foreach_1.5.2       htmltools_0.5.5     fansi_1.0.4        \n [10] magrittr_2.0.3      doParallel_1.0.17   tzdb_0.4.0         \n [13] globals_0.16.2      gower_1.0.1         RcppParallel_5.1.7 \n [16] xts_0.13.1          svglite_2.1.1       hardhat_1.3.0      \n [19] timechange_0.2.0    prettyunits_1.1.1   forecast_8.21      \n [22] tseries_0.10-54     colorspace_2.1-0    rvest_1.0.3        \n [25] xfun_0.39           jsonlite_1.8.7      lme4_1.1-34        \n [28] survival_3.2-13     zoo_1.8-12          iterators_1.0.14   \n [31] glue_1.6.2          gtable_0.3.3        ipred_0.9-14       \n [34] webshot_0.5.5       RSKC_2.4.2          future.apply_1.11.0\n [37] quantmod_0.4.23     DBI_1.1.3           Rcpp_1.0.11        \n [40] viridisLite_0.4.2   units_0.8-2         GPfit_1.0-8        \n [43] bit_4.0.5           proxy_0.4-27        stats4_4.1.2       \n [46] lava_1.7.2.1        StanHeaders_2.26.27 prodlim_2023.03.31 \n [49] htmlwidgets_1.6.2   httr_1.4.6          ellipsis_0.3.2     \n [52] modeltools_0.2-23   farver_2.1.1        pkgconfig_2.0.3    \n [55] sass_0.4.6          nnet_7.3-17         utf8_1.2.3         \n [58] labeling_0.4.2      tidyselect_1.2.0    DiceDesign_1.9     \n [61] cachem_1.0.8        munsell_0.5.0       tools_4.1.2        \n [64] cli_3.6.1           generics_0.1.3      evaluate_0.21      \n [67] fastmap_1.1.1       yaml_2.3.7          knitr_1.43         \n [70] bit64_4.0.5         future_1.33.0       nlme_3.1-155       \n [73] xml2_1.3.5          flexclust_1.4-1     compiler_4.1.2     \n [76] rstudioapi_0.15.0   curl_5.0.1          e1071_1.7-13       \n [79] lhs_1.1.6           bslib_0.5.0         stringi_1.7.12     \n [82] lattice_0.20-45     Matrix_1.6-0        nloptr_2.0.3       \n [85] classInt_0.4-9      urca_1.3-3          vctrs_0.6.3        \n [88] pillar_1.9.0        lifecycle_1.0.3     furrr_0.3.1        \n [91] jquerylib_0.1.4     lmtest_0.9-40       data.table_1.14.8  \n [94] R6_2.5.1            KernSmooth_2.23-20  parallelly_1.36.0  \n [97] codetools_0.2-18    boot_1.3-28         MASS_7.3-55        \n[100] assertthat_0.2.1    withr_2.5.0         fracdiff_1.5-2     \n[103] parallel_4.1.2      hms_1.1.3           quadprog_1.5-8     \n[106] grid_4.1.2          rpart_4.1.16        timeDate_4022.108  \n[109] minqa_1.2.5         class_7.3-20        rmarkdown_2.23     \n[112] TTR_0.24.3          sf_1.0-13"
  },
  {
    "objectID": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#links-of-intererest",
    "href": "dengue-model/dengue_ts_global_subset_tsfeatures_sparse.html#links-of-intererest",
    "title": "Time series features clustering, with robust sparse k-means",
    "section": "Links of intererest",
    "text": "Links of intererest\n\nhttps://cran.r-project.org/web/packages/tsfeatures/vignettes/tsfeatures.html\nhttps://www.tidymodels.org/learn/statistics/k-means/\nhttps://business-science.github.io/modeltime/articles/modeling-panel-data.html\nhttps://blog.bguarisma.com/series/time-series-forecasting"
  },
  {
    "objectID": "dengue-model/dengue_ts_overview.html",
    "href": "dengue-model/dengue_ts_overview.html",
    "title": "Global and subset models workflow",
    "section": "",
    "text": "flowchart TD\n    Y0[Dengue data] --&gt; | Filter municipalities \\n with 100k inhab| Y[Subset dengue data]\n    X1[Weather data]\n    X2[Other covariates]\n    X1 --&gt; A[Dataset]\n    X2 --&gt; A\n    Y --&gt; B[Clustering algorithm \\n assign k partitions] \n    B --&gt; |Add cluster ID \\n variable| A\n    A --&gt; A2[Time lag \\n outcome and predictors]\n    A2 --&gt; |Drop date variable| D{Split}\n    D --&gt; E[Train dataset]\n    D --&gt; F[Test dataset]\n    E --&gt; G[Global model \\n specification]\n    G --&gt; |Drop \\ncluster ID| H[Tune hyperparameters]\n    E --&gt; I[Subsets k  \\nmodel specification]\n    I --&gt; |k models| H\n    H --&gt; J[Predict with \\n global model training]\n    F --&gt; J\n    H --&gt; K[Predict with k \\n subsets trainings]\n    F --&gt; K\n    J --&gt; L[Collect metrics for each municipality \\n and compare models performance]\n    K --&gt; L"
  },
  {
    "objectID": "export-data/exported_data.html",
    "href": "export-data/exported_data.html",
    "title": "Exported data",
    "section": "",
    "text": "library(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(brpop)\nlibrary(piggyback)"
  },
  {
    "objectID": "export-data/exported_data.html#packages",
    "href": "export-data/exported_data.html#packages",
    "title": "Exported data",
    "section": "",
    "text": "library(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(brpop)\nlibrary(piggyback)"
  },
  {
    "objectID": "export-data/exported_data.html#dengue-data",
    "href": "export-data/exported_data.html#dengue-data",
    "title": "Exported data",
    "section": "Dengue data",
    "text": "Dengue data\nTotal number of confirmed dengue cases, aggregated per municipality of residence and week of the first symptom’s onset.\n\ndengue &lt;- read_parquet(\"../dengue-data/parquet_aggregated/dengue_md.parquet\") %&gt;%\n  group_by(mun) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"week\", freq = sum(freq, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;%\n  rename(cases = freq)"
  },
  {
    "objectID": "export-data/exported_data.html#population",
    "href": "export-data/exported_data.html#population",
    "title": "Exported data",
    "section": "Population",
    "text": "Population\nEstimated municipality population per year.\n\npop &lt;- mun_pop_totals() %&gt;%\n  filter(year %in% seq(year(min(dengue$date)), year(max(dengue$date)))) %&gt;%\n  mutate(mun = as.character(mun))"
  },
  {
    "objectID": "export-data/exported_data.html#human-development-index",
    "href": "export-data/exported_data.html#human-development-index",
    "title": "Exported data",
    "section": "Human Development Index",
    "text": "Human Development Index\n\nhdi &lt;- read_parquet(\"../socioeconomic-data/hdi.parquet\") %&gt;%\n  select(code_muni, hdi2010 = idhm2010)"
  },
  {
    "objectID": "export-data/exported_data.html#weather-data",
    "href": "export-data/exported_data.html#weather-data",
    "title": "Exported data",
    "section": "Weather data",
    "text": "Weather data\nWeather indicators estimated by using zonal statistics of the territorial area of the municipality.\n\nPrecipitation\nTotal estimated precipitation, per municipality and week, in millimeter.\n\nprec &lt;- open_dataset(sources = \"../weather-data/parquet/brdwgd/pr.parquet\") %&gt;%\n  filter(name == \"pr_sum\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue$date) & date &lt;= max(dengue$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"week\", value = sum(value, na.rm = TRUE)) %&gt;%\n  rename(prec = value)\n\n\n\nAverage maximun temperature\nAverage of maximum temperatures, per municipality and week, in celsius.\n\ntmax &lt;- open_dataset(sources = \"../weather-data/parquet/brdwgd/tmax.parquet\") %&gt;%\n  filter(name == \"Tmax_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue$date) & date &lt;= max(dengue$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"week\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(tmax = value)\n\n\n\nAverage minimum temperature\nAverage of minimum temperatures, per municipality and week, in celsius.\n\ntmin &lt;- open_dataset(sources = \"../weather-data/parquet/brdwgd/tmin.parquet\") %&gt;%\n  filter(name == \"Tmin_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue$date) & date &lt;= max(dengue$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"week\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(tmin = value)"
  },
  {
    "objectID": "export-data/exported_data.html#join-data",
    "href": "export-data/exported_data.html#join-data",
    "title": "Exported data",
    "section": "Join data",
    "text": "Join data\n\nexp_data &lt;- dengue %&gt;%\n  mutate(dengue_year = year(date)) %&gt;%\n  inner_join(pop, by = c(\"dengue_year\" = \"year\", \"mun\")) %&gt;%\n  select(-dengue_year) %&gt;%\n  inner_join(hdi, by = c(\"mun\" = \"code_muni\")) %&gt;%\n  inner_join(prec, by = \"date\") %&gt;%\n  inner_join(tmax, by = \"date\") %&gt;%\n  inner_join(tmin, by = \"date\")"
  },
  {
    "objectID": "export-data/exported_data.html#lag-weather-variables",
    "href": "export-data/exported_data.html#lag-weather-variables",
    "title": "Exported data",
    "section": "Lag weather variables",
    "text": "Lag weather variables\nLag one and two weeks.\n\nexp_data &lt;- exp_data %&gt;%\n  tk_augment_lags(.value = c(prec, tmax, tmin), .lags = 1:2)"
  },
  {
    "objectID": "export-data/exported_data.html#overview",
    "href": "export-data/exported_data.html#overview",
    "title": "Exported data",
    "section": "Overview",
    "text": "Overview\n\nglimpse(exp_data)\n\nRows: 2,202,058\nColumns: 14\n$ mun       &lt;chr&gt; \"110001\", \"110001\", \"110001\", \"110001\", \"110001\", \"110001\", …\n$ date      &lt;date&gt; 2011-03-13, 2011-03-20, 2011-03-27, 2011-04-03, 2011-04-10,…\n$ cases     &lt;int&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ pop       &lt;int&gt; 24737, 24737, 24737, 24737, 24737, 24737, 24737, 24737, 2473…\n$ hdi2010   &lt;dbl&gt; 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.64…\n$ prec      &lt;dbl&gt; 5977667, 5832714, 6581013, 6411878, 5538108, 4712170, 412114…\n$ tmax      &lt;dbl&gt; 29.89511, 29.59591, 29.72916, 29.27960, 29.05301, 29.32273, …\n$ tmin      &lt;dbl&gt; 20.19973, 20.17791, 20.34251, 19.15049, 19.11662, 19.37211, …\n$ prec_lag1 &lt;dbl&gt; NA, 5977667, 5832714, 6581013, 6411878, 5538108, 4712170, 41…\n$ tmax_lag1 &lt;dbl&gt; NA, 29.89511, 29.59591, 29.72916, 29.27960, 29.05301, 29.322…\n$ tmin_lag1 &lt;dbl&gt; NA, 20.19973, 20.17791, 20.34251, 19.15049, 19.11662, 19.372…\n$ prec_lag2 &lt;dbl&gt; NA, NA, 5977667, 5832714, 6581013, 6411878, 5538108, 4712170…\n$ tmax_lag2 &lt;dbl&gt; NA, NA, 29.89511, 29.59591, 29.72916, 29.27960, 29.05301, 29…\n$ tmin_lag2 &lt;dbl&gt; NA, NA, 20.19973, 20.17791, 20.34251, 19.15049, 19.11662, 19…\n\n\nMunicipalities count: 5167"
  },
  {
    "objectID": "export-data/exported_data.html#export-data",
    "href": "export-data/exported_data.html#export-data",
    "title": "Exported data",
    "section": "Export data",
    "text": "Export data\n\nexp_data %&gt;% write_parquet(sink = \"exp_data.parquet\")\n\n\nexp_data %&gt;% write_csv(file = \"exp_data.csv\")\nzip::zip(zipfile = \"exp_data.csv.zip\", files = \"exp_data.csv\")\nunlink(x = \"exp_data.csv\")"
  },
  {
    "objectID": "export-data/exported_data.html#data-dictionary",
    "href": "export-data/exported_data.html#data-dictionary",
    "title": "Exported data",
    "section": "Data dictionary",
    "text": "Data dictionary\n\nmun character. Municipality code with 6 digits\ndate date. Date on format YYYY-MM-DD of the ceiling data of the week\ncases integer. Confirmed dengue cases count\npop integer. Population estimation of the municipality\nhdi2010 double. Human Development Index for 2010\nprec double. Total precipitation, mm\ntmax double. Average maximum temperature, Celsius\ntmin double. Average minimum temperature, Celsius\n*_lag1 double. One week lagged variables\n*_lag2 double. Two weeks lagged variables"
  },
  {
    "objectID": "export-data/exported_data.html#include-on-current-github-release",
    "href": "export-data/exported_data.html#include-on-current-github-release",
    "title": "Exported data",
    "section": "Include on current GitHub release",
    "text": "Include on current GitHub release\n\n# Files list to upload\nfiles_list &lt;- c(\"exp_data.parquet\", \"exp_data.csv.zip\")\n\n# Upload files\nfor(i in files_list){\n  pb_upload(file = i, repo = \"rfsaldanha/dengue\", overwrite = TRUE)\n}\n\nFiles exp_data.parquet and exp_data.csv.zip available on current release: https://github.com/rfsaldanha/dengue/releases"
  },
  {
    "objectID": "export-data/exported_data.html#session-info",
    "href": "export-data/exported_data.html#session-info",
    "title": "Exported data",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.1.2 (2021-11-01)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0\nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] piggyback_0.1.4.9006 brpop_0.3.0          timetk_2.8.3        \n [4] arrow_12.0.1         lubridate_1.9.2      forcats_1.0.0       \n [7] stringr_1.5.0        dplyr_1.1.2          purrr_1.0.1         \n[10] readr_2.1.4          tidyr_1.3.0          tibble_3.2.1        \n[13] ggplot2_3.4.2        tidyverse_2.0.0     \n\nloaded via a namespace (and not attached):\n [1] xts_0.13.1          bit64_4.0.5         httr_1.4.6         \n [4] DiceDesign_1.9      gh_1.4.0            tools_4.1.2        \n [7] utf8_1.2.3          R6_2.5.1            rpart_4.1.16       \n[10] colorspace_2.1-0    yardstick_1.2.0     nnet_7.3-17        \n[13] withr_2.5.0         tidyselect_1.2.0    curl_5.0.1         \n[16] bit_4.0.5           compiler_4.1.2      httr2_0.2.3        \n[19] cli_3.6.1           scales_1.2.1        tune_1.1.1         \n[22] rappdirs_0.3.3      digest_0.6.31       rmarkdown_2.22     \n[25] pkgconfig_2.0.3     htmltools_0.5.5     parallelly_1.36.0  \n[28] lhs_1.1.6           fastmap_1.1.1       htmlwidgets_1.6.2  \n[31] rlang_1.1.1         rstudioapi_0.14     generics_0.1.3     \n[34] zoo_1.8-12          jsonlite_1.8.5      vroom_1.6.3        \n[37] zip_2.3.0           magrittr_2.0.3      Matrix_1.5-4.1     \n[40] Rcpp_1.0.10         munsell_0.5.0       fansi_1.0.4        \n[43] GPfit_1.0-8         lifecycle_1.0.3     furrr_0.3.1        \n[46] stringi_1.7.12      yaml_2.3.7          MASS_7.3-55        \n[49] recipes_1.0.6       grid_4.1.2          parallel_4.1.2     \n[52] listenv_0.9.0       crayon_1.5.2        lattice_0.20-45    \n[55] splines_4.1.2       hms_1.1.3           knitr_1.43         \n[58] pillar_1.9.0        dials_1.2.0         future.apply_1.11.0\n[61] codetools_0.2-18    parsnip_1.1.0       glue_1.6.2         \n[64] evaluate_0.21       rsample_1.1.1       data.table_1.14.8  \n[67] vctrs_0.6.3         tzdb_0.4.0          foreach_1.5.2      \n[70] gtable_0.3.3        future_1.32.0       assertthat_0.2.1   \n[73] cachem_1.0.8        xfun_0.39           gower_1.0.1        \n[76] mime_0.12           prodlim_2023.03.31  gitcreds_0.1.2     \n[79] class_7.3-20        survival_3.2-13     timeDate_4022.108  \n[82] iterators_1.0.14    memoise_2.0.1       hardhat_1.3.0      \n[85] lava_1.7.2.1        workflows_1.1.3     timechange_0.2.0   \n[88] globals_0.16.2      ipred_0.9-14"
  },
  {
    "objectID": "software.html",
    "href": "software.html",
    "title": "Software",
    "section": "",
    "text": "An R package to on-line access zonal statistics from weather indicators that were calculated for each municipality in Brazil using data from the BR-DWGD and TerraClimate projects.\nMore details on https://rfsaldanha.github.io/brclimr"
  },
  {
    "objectID": "software.html#brclimr",
    "href": "software.html#brclimr",
    "title": "Software",
    "section": "",
    "text": "An R package to on-line access zonal statistics from weather indicators that were calculated for each municipality in Brazil using data from the BR-DWGD and TerraClimate projects.\nMore details on https://rfsaldanha.github.io/brclimr"
  },
  {
    "objectID": "software.html#epifeat",
    "href": "software.html#epifeat",
    "title": "Software",
    "section": "epifeat",
    "text": "epifeat\nAn R package to extract epidemiological features from cases time series.\nMore details on https://github.com/rfsaldanha/happyfeat"
  },
  {
    "objectID": "software.html#zonalclim",
    "href": "software.html#zonalclim",
    "title": "Software",
    "section": "zonalclim",
    "text": "zonalclim\nAn R package to compute zonal statistics from gridded climate indicators.\nMore details on https://github.com/rfsaldanha/zonalclim"
  },
  {
    "objectID": "software.html#disdata",
    "href": "software.html#disdata",
    "title": "Software",
    "section": "disdata",
    "text": "disdata\nAn R package to handle raw suspected disease cases and compute aggregations on space and time.\nMore details on https://github.com/rfsaldanha/disdata"
  },
  {
    "objectID": "dengue_model.html",
    "href": "dengue_model.html",
    "title": "Overview",
    "section": "",
    "text": "In this section there are notebooks for dengue modelling.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n  \n\n\n\n\nDenque and weather lags\n\n\n\n\n\n\n\n\n\n\n\n\nJanuary 25, 2024 | 15:18:06 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nMultivariate clustering, all data model\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 11, 2023 | 08:50:57 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nTime series features clustering\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nSBD clustering\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nRegression task\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nDengue case classification\n\n\nby symptoms and clinical condition\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nClassification task\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nTime series features clustering, with robust sparse k-means\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nMultivariate clustering, climate model\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nGlobal and subset models workflow\n\n\n\n\n\n\n\n\n\n\n\n\nDecember 1, 2023 | 09:07:18 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "dengue_data.html",
    "href": "dengue_data.html",
    "title": "Overview",
    "section": "",
    "text": "In this section there are notebooks for dengue notifications data download, pre-processing, missing data analysis, imputations and exportation.\n\n\n\n\nflowchart TD\n  A[Raw dataset] --&gt; B(Imputation)\n  B --&gt; C[Improved dataset]\n  C --&gt; D{Filter valid dates}\n  C --&gt; E{Filter positive cases}\n  D --&gt; F(Aggregate)\n  E --&gt; F\n  F --&gt; G[Municipality and date dataset]\n  F --&gt; H[Municipality and epiweek dataset]\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled.html",
    "href": "dengue-cluster/cluster_long_scaled.html",
    "title": "Scaled cases",
    "section": "",
    "text": "This notebook aims to cluster the Brazilian municipalities considering scaled (standardized) dengue cases time-series similarities."
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled.html#packages",
    "href": "dengue-cluster/cluster_long_scaled.html#packages",
    "title": "Scaled cases",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled.html#load-data",
    "href": "dengue-cluster/cluster_long_scaled.html#load-data",
    "title": "Scaled cases",
    "section": "Load data",
    "text": "Load data\nLoad the aggregated data.\n\ntdengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases) %&gt;%\n    collect()\n\ndim(tdengue)\n\n[1] 340179      3\n\n\n\nPrepare data\nThe chunk bellow executes various steps to prepare the data for clustering.\n\ntdengue &lt;- tdengue %&gt;%\n  # Prepare time series\n  mutate(mun = paste0(\"m_\", mun)) %&gt;%\n  arrange(mun, date) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-date) %&gt;%\n  t() %&gt;%\n  tslist()\n\n\nlength(tdengue)\n\n[1] 679"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled.html#clustering",
    "href": "dengue-cluster/cluster_long_scaled.html#clustering",
    "title": "Scaled cases",
    "section": "Clustering",
    "text": "Clustering\nSequence of k groups to be used.\n\nk_seq &lt;- 2:10\n\n\nDTW (basic)\n\ntic()\nclust_dtw &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"dtw_basic\",\n  seed = 13\n)\ntoc()\n\n44.727 sec elapsed\n\n\n\nnames(clust_dtw) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_dtw, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.22470565\n0\n471.19772\n2.169633\n2.169633\n0.09802846\n0.4465088\n    k_6\n0.16590632\n0\n129.12898\n1.492001\n1.779535\n0.08842332\n0.3564468\n    k_5\n0.12371981\n0\n166.97238\n1.873249\n2.231609\n0.08368662\n0.3581035\n    k_3\n0.12269031\n0\n282.64604\n2.352913\n2.754531\n0.08676909\n0.4086315\n    k_4\n0.11888356\n0\n193.62938\n1.898608\n2.232433\n0.08471016\n0.3694141\n    k_10\n0.10437071\n0\n82.16793\n1.872270\n2.348246\n0.10197290\n0.3198181\n    k_7\n0.07891310\n0\n105.14468\n2.366061\n2.737811\n0.10021368\n0.3467224\n    k_9\n0.05778652\n0\n87.10300\n1.950026\n2.716834\n0.10021368\n0.3233407\n    k_8\n0.05494472\n0\n100.42993\n1.902694\n2.559555\n0.07642521\n0.3449551\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_dtw[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n292 387 \n\n\n\n\nSoft-DTW\n\ntic()\nclust_sdtw &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sdtw\",\n  seed = 13\n)\ntoc()\n\n204.708 sec elapsed\n\n\n\nnames(clust_sdtw) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_sdtw, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.54420550\n0\n424.7128\n1.784989\n1.784989\n0.0188267923\n0.2699432\n    k_6\n0.23058175\n0\n150.9456\n1.252811\n1.660076\n0.0056554246\n0.1492226\n    k_5\n0.20100983\n0\n179.4794\n2.019992\n3.279759\n0.0062697286\n0.1565015\n    k_4\n0.16735749\n0\n197.7269\n2.204787\n5.000366\n0.0014544262\n0.1900948\n    k_3\n0.16612027\n0\n203.6722\n4.148653\n4.660288\n0.0095083455\n0.2259238\n    k_10\n0.14175838\n0\n106.8324\n1.978932\n3.094434\n0.0079666165\n0.1331531\n    k_7\n0.13487754\n0\n136.8319\n1.860672\n3.131776\n-0.0017931128\n0.1454316\n    k_9\n0.11776105\n0\n106.7446\n2.427594\n4.376014\n-0.0082114090\n0.1384285\n    k_8\n0.07201448\n0\n121.5954\n2.392449\n5.993679\n0.0005698678\n0.1471381\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_sdtw[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n581  98 \n\n\n\n\nSBD\n\ntic()\nclust_sbd &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sbd\",\n  seed = 13\n)\ntoc()\n\n0.792 sec elapsed\n\n\n\nnames(clust_sbd) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_sbd, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.19153388\n0.41954595\n92.48199\n4.965541\n4.965541\n0.05215726\n0.3986087\n    k_6\n0.17383693\n0.15654880\n45.49664\n3.416220\n3.694440\n0.09627307\n0.3700479\n    k_5\n0.15090087\n0.16086274\n51.05856\n2.100628\n2.794277\n0.08129365\n0.3596084\n    k_10\n0.09507187\n0.03507591\n37.49864\n2.666277\n3.750657\n0.05350097\n0.3320909\n    k_8\n0.07435107\n0.07700081\n29.71794\n4.390497\n6.258006\n0.04658001\n0.3447000\n    k_9\n0.05379396\n0.05994618\n39.01541\n3.867380\n5.360924\n0.03345584\n0.3376868\n    k_7\n0.03260668\n0.10548796\n48.66182\n4.096509\n5.928294\n0.02534005\n0.3453233\n    k_3\n0.02929865\n0.29847866\n58.62624\n5.033205\n6.498922\n0.02115696\n0.3885022\n    k_4\n0.02545150\n0.23112470\n50.67983\n5.198919\n6.670280\n0.02116725\n0.3814808\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_sbd[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n503 176 \n\n\n\n\nGAK\n\ntic()\nclust_gak &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"gak\",\n  seed = 13\n)\ntoc()\n\n260.459 sec elapsed\n\n\n\nnames(clust_gak) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_gak, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_6\n0.2830846\n0.6304283\n124.45464\n2.229032\n2.350710\n0.009648476\n0.2459049\n    k_9\n0.2591976\n0.6297937\n102.39058\n2.243505\n3.344258\n0.007771500\n0.2020673\n    k_7\n0.2559452\n0.6301835\n105.07795\n2.610798\n2.716722\n0.009410867\n0.2473205\n    k_10\n0.2550581\n0.6295251\n95.02169\n2.043610\n2.248546\n0.008625614\n0.1991254\n    k_5\n0.2253127\n0.6305288\n110.82437\n1.737232\n1.904585\n0.008938342\n0.3000306\n    k_3\n0.1974647\n0.6309581\n98.32655\n3.945344\n4.077690\n0.006170275\n0.3651774\n    k_8\n0.1823244\n0.6298506\n74.98460\n2.864885\n2.987567\n0.010215175\n0.2561144\n    k_2\n0.1584990\n0.6314929\n203.86335\n2.899706\n2.899706\n0.020554844\n0.5280049\n    k_4\n0.1423961\n0.6306801\n101.83124\n3.970774\n4.082930\n0.005129007\n0.3477263\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_gak[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2   3   4   5   6 \n 73 104  64  91 144 203"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled.html#session-info",
    "href": "dengue-cluster/cluster_long_scaled.html#session-info",
    "title": "Scaled cases",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] tictoc_1.2       kableExtra_1.3.4 dtwclust_5.5.12  dtw_1.23-1      \n [5] proxy_0.4-27     timetk_2.9.0     arrow_13.0.0.1   lubridate_1.9.3 \n [9] forcats_1.0.0    stringr_1.5.0    dplyr_1.1.3      purrr_1.0.2     \n[13] readr_2.1.4      tidyr_1.3.0      tibble_3.2.1     ggplot2_3.4.4   \n[17] tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rlang_1.1.2         magrittr_2.0.3      clue_0.3-65        \n  [4] furrr_0.3.1         flexclust_1.4-1     compiler_4.3.2     \n  [7] systemfonts_1.0.5   vctrs_0.6.4         reshape2_1.4.4     \n [10] rvest_1.0.3         lhs_1.1.6           tune_1.1.2         \n [13] pkgconfig_2.0.3     fastmap_1.1.1       ellipsis_0.3.2     \n [16] labeling_0.4.3      utf8_1.2.4          promises_1.2.1     \n [19] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n [22] bit_4.0.5           xfun_0.41           modeltools_0.2-23  \n [25] jsonlite_1.8.7      recipes_1.0.8       later_1.3.1        \n [28] parallel_4.3.2      cluster_2.1.4       R6_2.5.1           \n [31] stringi_1.7.12      rsample_1.2.0       parallelly_1.36.0  \n [34] rpart_4.1.21        Rcpp_1.0.11         assertthat_0.2.1   \n [37] dials_1.2.0         iterators_1.0.14    knitr_1.45         \n [40] future.apply_1.11.0 zoo_1.8-12          httpuv_1.6.12      \n [43] Matrix_1.6-1.1      splines_4.3.2       nnet_7.3-19        \n [46] timechange_0.2.0    tidyselect_1.2.0    rstudioapi_0.15.0  \n [49] yaml_2.3.7          timeDate_4022.108   codetools_0.2-19   \n [52] listenv_0.9.0       lattice_0.22-5      plyr_1.8.9         \n [55] shiny_1.7.5.1       withr_2.5.2         evaluate_0.23      \n [58] future_1.33.0       survival_3.5-7      RcppParallel_5.1.7 \n [61] xml2_1.3.5          xts_0.13.1          pillar_1.9.0       \n [64] foreach_1.5.2       stats4_4.3.2        shinyjs_2.1.0      \n [67] generics_0.1.3      hms_1.1.3           munsell_0.5.0      \n [70] scales_1.2.1        xtable_1.8-4        globals_0.16.2     \n [73] class_7.3-22        glue_1.6.2          tools_4.3.2        \n [76] data.table_1.14.8   RSpectra_0.16-1     webshot_0.5.5      \n [79] gower_1.0.1         grid_4.3.2          yardstick_1.2.0    \n [82] ipred_0.9-14        colorspace_2.1-0    cli_3.6.1          \n [85] DiceDesign_1.9      workflows_1.1.3     parsnip_1.1.1      \n [88] fansi_1.0.5         viridisLite_0.4.2   gt_0.10.0          \n [91] svglite_2.1.2       lava_1.7.3          gtable_0.3.4       \n [94] GPfit_1.0-8         sass_0.4.7          digest_0.6.33      \n [97] ggrepel_0.9.4       farver_2.1.1        htmlwidgets_1.6.2  \n[100] htmltools_0.5.7     lifecycle_1.0.4     httr_1.4.7         \n[103] hardhat_1.3.0       mime_0.12           bit64_4.0.5        \n[106] MASS_7.3-60"
  },
  {
    "objectID": "dengue-cluster/sdtw_long_cum_scaled.html",
    "href": "dengue-cluster/sdtw_long_cum_scaled.html",
    "title": "SDTW, cumulative and scaled long time series",
    "section": "",
    "text": "library(tidyverse)\nlibrary(lubridate)\nlibrary(gt)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/sdtw_long_cum_scaled.html#packages",
    "href": "dengue-cluster/sdtw_long_cum_scaled.html#packages",
    "title": "SDTW, cumulative and scaled long time series",
    "section": "",
    "text": "library(tidyverse)\nlibrary(lubridate)\nlibrary(gt)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/sdtw_long_cum_scaled.html#dengue-data",
    "href": "dengue-cluster/sdtw_long_cum_scaled.html#dengue-data",
    "title": "SDTW, cumulative and scaled long time series",
    "section": "Dengue data",
    "text": "Dengue data\n\n# tdengue &lt;- readRDS(file = \"tdengue.rds\")\n\ndengue &lt;- arrow::open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases, cases_cum) %&gt;%\n    collect()"
  },
  {
    "objectID": "dengue-cluster/sdtw_long_cum_scaled.html#clustering-results",
    "href": "dengue-cluster/sdtw_long_cum_scaled.html#clustering-results",
    "title": "SDTW, cumulative and scaled long time series",
    "section": "Clustering results",
    "text": "Clustering results\n\ncluster_ids &lt;- readRDS(file = \"clust_sdtw_ids.rds\")"
  },
  {
    "objectID": "dengue-cluster/sdtw_long_cum_scaled.html#identify-municipalities",
    "href": "dengue-cluster/sdtw_long_cum_scaled.html#identify-municipalities",
    "title": "SDTW, cumulative and scaled long time series",
    "section": "Identify municipalities",
    "text": "Identify municipalities\n\ndengue &lt;- left_join(dengue, cluster_ids, by = \"mun\")"
  },
  {
    "objectID": "dengue-cluster/sdtw_long_cum_scaled.html#cluster-time-series-plot",
    "href": "dengue-cluster/sdtw_long_cum_scaled.html#cluster-time-series-plot",
    "title": "SDTW, cumulative and scaled long time series",
    "section": "Cluster time series plot",
    "text": "Cluster time series plot\n\nggplot(data = dengue, aes(x = date, y = cases, color = mun)) +\n  geom_line(alpha = .3) +\n  facet_wrap(~group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nggplot(data = dengue, aes(x = date, y = cases_cum, color = mun)) +\n  geom_line(alpha = .3) +\n  facet_wrap(~group) +\n  theme_bw() +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "dengue-cluster/sdtw_long_cum_scaled.html#map-clusters",
    "href": "dengue-cluster/sdtw_long_cum_scaled.html#map-clusters",
    "title": "SDTW, cumulative and scaled long time series",
    "section": "Map clusters",
    "text": "Map clusters\n\nmun.shp &lt;- geobr::read_municipality(showProgress = FALSE)\n\nLoading required namespace: sf\n\n\nUsing year 2010\n\n\n\nmun.shp %&gt;%\n  mutate(code_muni = substr(code_muni, 0, 6)) %&gt;%\n  left_join(cluster_ids, by = c(\"code_muni\" = \"mun\")) %&gt;%\n  ggplot() +\n  geom_sf(aes(fill = group))"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_cumulative.html",
    "href": "dengue-cluster/cluster_mun_year_cumulative.html",
    "title": "Cumulative time series",
    "section": "",
    "text": "This notebook aims to cluster the Brazilian municipalities cumulative yearly dengue cases time-series yearly by its similarities."
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_cumulative.html#packages",
    "href": "dengue-cluster/cluster_mun_year_cumulative.html#packages",
    "title": "Cumulative time series",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_cumulative.html#load-data",
    "href": "dengue-cluster/cluster_mun_year_cumulative.html#load-data",
    "title": "Cumulative time series",
    "section": "Load data",
    "text": "Load data\nLoad the bundled data.\n\ndengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases = cases_raw) %&gt;%\n    collect()\n\ndim(dengue)\n\n[1] 340179      3\n\n\n\nPrepare data\nThe chunk bellow executes various steps to prepare the data for clustering.\n\ntdengue &lt;- dengue %&gt;%\n  # Remove dates\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2020-01-01\")) %&gt;%\n  # Create year variable\n  mutate(year = year(date)) %&gt;%\n  # Create week number\n  mutate(week = epiweek(date)) %&gt;%\n  # Summarise per year and isoweek\n  group_by(mun, year, week) %&gt;%\n  summarise(cases = sum(cases, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;%\n  # Accumulate mun time series by year\n  group_by(mun, year) %&gt;%\n  arrange(week) %&gt;%\n  mutate(cases = cumsum(cases)) %&gt;%\n  # Scale cases\n  mutate(cases = scale(cases)) %&gt;%\n  ungroup() %&gt;%\n  # Isolate municipality and year\n  mutate(mun = paste0(mun, \"_\", year)) %&gt;%\n  select(-year, week) %&gt;%\n  # Arrange data\n  arrange(mun, week) %&gt;%\n  # Prepare time series of municipalities by year\n  mutate(mun = paste0(\"m_\", mun)) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-week) %&gt;%\n  # Use zero value for years withot week 53\n  mutate(across(everything(), ~replace_na(.x, 0))) %&gt;%\n  # Transpose as matrix\n  t() %&gt;%\n  # Convert object\n  tslist()\n\n`summarise()` has grouped output by 'mun', 'year'. You can override using the\n`.groups` argument.\n\n\n\nlength(tdengue)\n\n[1] 6111"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_cumulative.html#clustering",
    "href": "dengue-cluster/cluster_mun_year_cumulative.html#clustering",
    "title": "Cumulative time series",
    "section": "Clustering",
    "text": "Clustering\nSequence of k groups to be used.\n\nk_seq &lt;- 3:10\n\n\nSoft-DTW method\n\ntic()\nclust &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sdtw\",\n  seed = 13\n)\ntoc()\n\n175.188 sec elapsed\n\n\n\n\nCluster Validity Indices (CVI)\n\nnames(clust) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  kbl() %&gt;%\n  kable_styling()\n\n\n\n\nk\nSil\nSF\nCH\nDB\nDBstar\nD\nCOP\n\n\n\n\nk_4\n0.4996424\n0.0001998\n5053.8781\n0.813116\n1.034655\n-0.0071101\n0.0244607\n\n\nk_3\n0.4118566\n0.0000000\n859.9048\n2.505068\n3.417155\n-0.0070377\n0.1095122\n\n\nk_9\n0.3971539\n0.0000042\n4229.2449\n1.415377\n5.666647\n-0.0069788\n0.0123762\n\n\nk_10\n0.3930305\n0.0000002\n4035.8058\n1.212292\n6.342339\n-0.0077680\n0.0109508\n\n\nk_7\n0.3599889\n0.0000153\n4452.3025\n1.448889\n5.467205\n-0.0075078\n0.0151751\n\n\nk_5\n0.3430675\n0.0000000\n549.0199\n3.757548\n11.951407\n-0.0075078\n0.0968742\n\n\nk_8\n0.3184463\n0.0000000\n3924.2207\n2.307808\n9.657683\n-0.0075078\n0.0145123\n\n\nk_6\n0.3170633\n0.0000108\n4379.2283\n3.268082\n9.255333\n-0.0074597\n0.0175612\n\n\n\n\n\n\n\n\n\nCluster with higher Silhouette statistic\n\nsel_clust &lt;- clust[[res_cvi[[1,1]]]]\n\n\nplot(sel_clust)\n\n\n\n\n\nggsave(filename = \"cluster_mun_year_cum.pdf\")\n\nSaving 7 x 5 in image\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\nggsave(filename = \"cluster_mun_year_cum_centr.pdf\")\n\nSaving 7 x 5 in image\n\n\n\n\nCluster sizes\n\ntable(sel_clust@cluster)\n\n\n   1    2    3    4 \n1280  989 3341  501"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_cumulative.html#session-info",
    "href": "dengue-cluster/cluster_mun_year_cumulative.html#session-info",
    "title": "Cumulative time series",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] tictoc_1.2       kableExtra_1.3.4 dtwclust_5.5.12  dtw_1.23-1      \n [5] proxy_0.4-27     timetk_2.9.0     arrow_13.0.0.1   lubridate_1.9.3 \n [9] forcats_1.0.0    stringr_1.5.0    dplyr_1.1.3      purrr_1.0.2     \n[13] readr_2.1.4      tidyr_1.3.0      tibble_3.2.1     ggplot2_3.4.4   \n[17] tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rlang_1.1.2         magrittr_2.0.3      clue_0.3-65        \n  [4] furrr_0.3.1         flexclust_1.4-1     compiler_4.3.2     \n  [7] systemfonts_1.0.5   vctrs_0.6.4         reshape2_1.4.4     \n [10] rvest_1.0.3         lhs_1.1.6           tune_1.1.2         \n [13] pkgconfig_2.0.3     fastmap_1.1.1       ellipsis_0.3.2     \n [16] labeling_0.4.3      utf8_1.2.4          promises_1.2.1     \n [19] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n [22] ragg_1.2.6          bit_4.0.5           xfun_0.41          \n [25] modeltools_0.2-23   jsonlite_1.8.7      recipes_1.0.8      \n [28] highr_0.10          later_1.3.1         parallel_4.3.2     \n [31] cluster_2.1.4       R6_2.5.1            stringi_1.7.12     \n [34] rsample_1.2.0       parallelly_1.36.0   rpart_4.1.21       \n [37] Rcpp_1.0.11         assertthat_0.2.1    dials_1.2.0        \n [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.0\n [43] zoo_1.8-12          httpuv_1.6.12       Matrix_1.6-1.1     \n [46] splines_4.3.2       nnet_7.3-19         timechange_0.2.0   \n [49] tidyselect_1.2.0    rstudioapi_0.15.0   yaml_2.3.7         \n [52] timeDate_4022.108   codetools_0.2-19    listenv_0.9.0      \n [55] lattice_0.22-5      plyr_1.8.9          shiny_1.7.5.1      \n [58] withr_2.5.2         evaluate_0.23       future_1.33.0      \n [61] survival_3.5-7      RcppParallel_5.1.7  xml2_1.3.5         \n [64] xts_0.13.1          pillar_1.9.0        foreach_1.5.2      \n [67] stats4_4.3.2        shinyjs_2.1.0       generics_0.1.3     \n [70] hms_1.1.3           munsell_0.5.0       scales_1.2.1       \n [73] xtable_1.8-4        globals_0.16.2      class_7.3-22       \n [76] glue_1.6.2          tools_4.3.2         data.table_1.14.8  \n [79] RSpectra_0.16-1     webshot_0.5.5       gower_1.0.1        \n [82] grid_4.3.2          yardstick_1.2.0     ipred_0.9-14       \n [85] colorspace_2.1-0    cli_3.6.1           DiceDesign_1.9     \n [88] textshaping_0.3.7   workflows_1.1.3     parsnip_1.1.1      \n [91] fansi_1.0.5         viridisLite_0.4.2   svglite_2.1.2      \n [94] lava_1.7.3          gtable_0.3.4        GPfit_1.0-8        \n [97] digest_0.6.33       ggrepel_0.9.4       farver_2.1.1       \n[100] htmlwidgets_1.6.2   htmltools_0.5.7     lifecycle_1.0.4    \n[103] httr_1.4.7          hardhat_1.3.0       mime_0.12          \n[106] bit64_4.0.5         MASS_7.3-60"
  },
  {
    "objectID": "dengue-cluster/cluster_multivariate_all.html",
    "href": "dengue-cluster/cluster_multivariate_all.html",
    "title": "Cases and climate variables multivariate clustering",
    "section": "",
    "text": "This notebook aims to cluster the Brazilian municipalities considering climate indicators with multivariate clustering techniques."
  },
  {
    "objectID": "dengue-cluster/cluster_multivariate_all.html#packages",
    "href": "dengue-cluster/cluster_multivariate_all.html#packages",
    "title": "Cases and climate variables multivariate clustering",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nlibrary(sf)\nlibrary(DT)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_multivariate_all.html#load-data",
    "href": "dengue-cluster/cluster_multivariate_all.html#load-data",
    "title": "Cases and climate variables multivariate clustering",
    "section": "Load data",
    "text": "Load data\nDaily, scaled cases, maximum temperature, minimum temperature and precipitation.\n\ntdengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n  select(mun, date, cases, tmax, tmin, prec) %&gt;%\n  collect()\n\ndim(tdengue)\n\n[1] 340179      6\n\n\n\nlength(unique(tdengue$mun))\n\n[1] 679\n\n\nData for maps.\n\nuf_sf &lt;- geobr::read_state(showProgress = FALSE)\n\nUsing year 2010\n\ncoords &lt;- geobr::read_municipality(showProgress = FALSE) %&gt;%\n  st_make_valid() %&gt;%\n  st_centroid()\n\nUsing year 2010\n\n\nWarning: st_centroid assumes attributes are constant over geometries"
  },
  {
    "objectID": "dengue-cluster/cluster_multivariate_all.html#prepare-data",
    "href": "dengue-cluster/cluster_multivariate_all.html#prepare-data",
    "title": "Cases and climate variables multivariate clustering",
    "section": "Prepare data",
    "text": "Prepare data\nFor clustering, the data must be a list of data frames with climate data and without date.\n\ngdengue &lt;- tdengue %&gt;%\n  group_by(mun) %&gt;%\n  arrange(date) %&gt;%\n  select(-date)\n\nmdengue &lt;- group_split(gdengue, .keep = FALSE) %&gt;%\n  tslist(simplify = TRUE)\n\nnames(mdengue) &lt;- group_keys(gdengue)$mun\n\n\nglimpse(mdengue[1:3])\n\nList of 3\n $ 110002: num [1:501, 1:4] -0.5104 0.668 0.668 0.0788 0.668 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:4] \"cases\" \"tmax\" \"tmin\" \"prec\"\n $ 110004: num [1:501, 1:4] -0.3964 -0.1824 0.0316 -0.3964 0.0316 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:4] \"cases\" \"tmax\" \"tmin\" \"prec\"\n $ 110011: num [1:501, 1:4] -0.392 -0.392 -0.392 -0.392 -0.392 ...\n  ..- attr(*, \"dimnames\")=List of 2\n  .. ..$ : NULL\n  .. ..$ : chr [1:4] \"cases\" \"tmax\" \"tmin\" \"prec\""
  },
  {
    "objectID": "dengue-cluster/cluster_multivariate_all.html#dtw-clustering",
    "href": "dengue-cluster/cluster_multivariate_all.html#dtw-clustering",
    "title": "Cases and climate variables multivariate clustering",
    "section": "DTW clustering",
    "text": "DTW clustering\nTry from 3 to 20 partitions.\n\ntic()\nstdw_clust &lt;- tsclust(\n  series = mdengue, \n  type = \"partitional\", k = 3:20, \n  distance = \"dtw_basic\", \n  seed = 13\n)\ntoc()\n\n36.448 sec elapsed\n\n\n\nCluster Validity Indices (CVI)\n\nnames(stdw_clust) &lt;- paste0(\"k_\", 3:20)\nres_cvi &lt;- sapply(stdw_clust, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\ndatatable(res_cvi)\n\n\n\n\n\n\n\nm_sel_clust &lt;- stdw_clust[[res_cvi[[1,1]]]]\n\nplot(m_sel_clust)\n\n\n\n\n\n\nPartitions size\n\ntable(m_sel_clust@cluster)\n\n\n  1   2   3   4 \n178 342  18 141 \n\n\n\n\nPartition results\n\ncoords &lt;- coords %&gt;%\n  mutate(code_muni = substr(code_muni, 0, 6))\n\n\nm_cluster_ids &lt;- tibble(\n  code_muni = names(mdengue),\n  group = as.character(m_sel_clust@cluster)\n) %&gt;% \n  left_join(coords, by = \"code_muni\") %&gt;%\n  arrange(group, name_muni) %&gt;%\n  st_as_sf()\n\n\nsaveRDS(object = m_cluster_ids, file = \"m_cluster_ids.rds\")\n\n\nm_cluster_ids %&gt;%\n  select(group, name_muni, abbrev_state) %&gt;%\n  arrange(group, name_muni) %&gt;%\n  st_drop_geometry() %&gt;%\n  datatable()\n\n\n\n\n\n\n\nggplot() +\n  geom_sf(data = uf_sf, fill = \"lightgray\", color = \"grey20\", size=.15, show.legend = FALSE) +\n  geom_sf(data = m_cluster_ids, aes(color = group), size = 2, alpha = 0.7) +\n  theme_minimal()"
  },
  {
    "objectID": "dengue-cluster/cluster_multivariate_all.html#session-info",
    "href": "dengue-cluster/cluster_multivariate_all.html#session-info",
    "title": "Cases and climate variables multivariate clustering",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-conda-linux-gnu (64-bit)\nRunning under: CentOS Linux 7 (Core)\n\nMatrix products: default\nBLAS/LAPACK: /home/raphaelfs/miniconda3/envs/quarto/lib/libopenblasp-r0.3.25.so;  LAPACK version 3.11.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=pt_BR.UTF-8        LC_COLLATE=pt_BR.UTF-8    \n [5] LC_MONETARY=pt_BR.UTF-8    LC_MESSAGES=pt_BR.UTF-8   \n [7] LC_PAPER=pt_BR.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=pt_BR.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: America/Sao_Paulo\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] DT_0.28          sf_1.0-14        tictoc_1.2       kableExtra_1.3.4\n [5] dtwclust_5.5.12  dtw_1.23-1       proxy_0.4-27     timetk_2.8.2    \n [9] arrow_12.0.0     lubridate_1.9.2  forcats_1.0.0    stringr_1.5.0   \n[13] dplyr_1.1.2      purrr_1.0.1      readr_2.1.4      tidyr_1.3.0     \n[17] tibble_3.2.1     ggplot2_3.4.2    tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rstudioapi_0.14     jsonlite_1.8.5      wk_0.7.3           \n  [4] magrittr_2.0.3      modeltools_0.2-23   farver_2.1.1       \n  [7] rmarkdown_2.22      vctrs_0.6.3         webshot_0.5.4      \n [10] htmltools_0.5.5     dials_1.2.0         curl_5.0.2         \n [13] s2_1.1.4            sass_0.4.6          parallelly_1.36.0  \n [16] KernSmooth_2.23-21  bslib_0.4.2         htmlwidgets_1.6.2  \n [19] plyr_1.8.8          cachem_1.0.8        zoo_1.8-12         \n [22] mime_0.12           lifecycle_1.0.3     iterators_1.0.14   \n [25] pkgconfig_2.0.3     Matrix_1.5-4.1      R6_2.5.1           \n [28] fastmap_1.1.1       future_1.32.0       shiny_1.7.4        \n [31] tune_1.1.2          clue_0.3-64         digest_0.6.31      \n [34] colorspace_2.1-0    furrr_0.3.1         RSpectra_0.16-1    \n [37] crosstalk_1.2.0     labeling_0.4.2      fansi_1.0.4        \n [40] yardstick_1.2.0     timechange_0.2.0    httr_1.4.6         \n [43] compiler_4.3.2      bit64_4.0.5         withr_2.5.0        \n [46] DBI_1.1.3           MASS_7.3-60         lava_1.7.2.1       \n [49] classInt_0.4-9      tools_4.3.2         units_0.8-2        \n [52] httpuv_1.6.11       flexclust_1.4-1     future.apply_1.11.0\n [55] nnet_7.3-19         glue_1.6.2          promises_1.2.0.1   \n [58] grid_4.3.2          cluster_2.1.4       reshape2_1.4.4     \n [61] generics_0.1.3      recipes_1.0.6       gtable_0.3.3       \n [64] tzdb_0.4.0          class_7.3-22        data.table_1.14.8  \n [67] hms_1.1.3           rsample_1.2.0       xml2_1.3.4         \n [70] utf8_1.2.3          ggrepel_0.9.3       geobr_1.8.1        \n [73] foreach_1.5.2       pillar_1.9.0        later_1.3.1        \n [76] splines_4.3.2       lhs_1.1.6           lattice_0.21-8     \n [79] survival_3.5-5      bit_4.0.5           tidyselect_1.2.0   \n [82] knitr_1.43          svglite_2.1.1       stats4_4.3.2       \n [85] xfun_0.39           hardhat_1.3.0       timeDate_4022.108  \n [88] stringi_1.7.12      DiceDesign_1.9      yaml_2.3.7         \n [91] workflows_1.1.3     evaluate_0.21       codetools_0.2-19   \n [94] cli_3.6.1           RcppParallel_5.1.7  rpart_4.1.19       \n [97] xtable_1.8-4        systemfonts_1.0.4   jquerylib_0.1.4    \n[100] munsell_0.5.0       Rcpp_1.0.10         globals_0.16.2     \n[103] parallel_4.3.2      ellipsis_0.3.2      gower_1.0.1        \n[106] assertthat_0.2.1    parsnip_1.1.0       GPfit_1.0-8        \n[109] listenv_0.9.0       viridisLite_0.4.2   ipred_0.9-13       \n[112] scales_1.2.1        xts_0.13.1          prodlim_2019.11.13 \n[115] e1071_1.7-13        rlang_1.1.1         rvest_1.0.3        \n[118] shinyjs_2.1.0"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year.html",
    "href": "dengue-cluster/cluster_mun_year.html",
    "title": "Yearly time series",
    "section": "",
    "text": "This notebook aims to cluster the Brazilian municipalities considering yearly dengue cases time-series similarities."
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year.html#packages",
    "href": "dengue-cluster/cluster_mun_year.html#packages",
    "title": "Yearly time series",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year.html#load-data",
    "href": "dengue-cluster/cluster_mun_year.html#load-data",
    "title": "Yearly time series",
    "section": "Load data",
    "text": "Load data\nLoad the bundled data.\n\ndengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases = cases_raw) %&gt;%\n    collect()\n\ndim(dengue)\n\n[1] 340179      3\n\n\n\nPrepare data\nThe chunk bellow executes various steps to prepare the data for clustering.\n\ntdengue &lt;- dengue %&gt;%\n  # Remove dates\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2020-01-01\")) %&gt;%\n  # Create year variable\n  mutate(year = year(date)) %&gt;%\n  # Create week number\n  mutate(week = epiweek(date)) %&gt;%\n  # Summarise per year and isoweek\n  group_by(mun, year, week) %&gt;%\n  summarise(cases = sum(cases, na.rm = TRUE)) %&gt;%\n  # Scale cases\n  mutate(cases = scale(cases)) %&gt;%\n  ungroup() %&gt;%\n  # Isolate municipality and year\n  mutate(mun = paste0(mun, \"_\", year)) %&gt;%\n  select(-year, week) %&gt;%\n  # Arrange data\n  arrange(mun, week) %&gt;%\n  # Prepare time series of municipalities by year\n  mutate(mun = paste0(\"m_\", mun)) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-week) %&gt;%\n  # Use zero value for years withot week 53\n  mutate(across(everything(), ~replace_na(.x, 0))) %&gt;%\n  # Transpose as matrix\n  t() %&gt;%\n  # Convert object\n  tslist()\n\n`summarise()` has grouped output by 'mun', 'year'. You can override using the\n`.groups` argument.\n\n\n\nlength(tdengue)\n\n[1] 6111"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year.html#clustering",
    "href": "dengue-cluster/cluster_mun_year.html#clustering",
    "title": "Yearly time series",
    "section": "Clustering",
    "text": "Clustering\nSequence of k groups to be used.\n\nk_seq &lt;- 3:10\n\n\nSoft-DTW method\n\ntic()\nclust &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sdtw\",\n  seed = 12\n)\ntoc()\n\n186.312 sec elapsed\n\n\n\n\nCluster Validity Indices (CVI)\n\nnames(clust) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  kbl() %&gt;%\n  kable_styling()\n\n\n\n\nk\nSil\nSF\nCH\nDB\nDBstar\nD\nCOP\n\n\n\n\nk_7\n0.3042978\n0\n1498.9650\n1.643061\n2.034144\n-0.0090704\n0.1154715\n\n\nk_5\n0.3009208\n0\n1828.2539\n1.510974\n2.111730\n-0.0046130\n0.2050362\n\n\nk_3\n0.3000788\n0\n2147.2455\n1.141345\n1.363098\n-0.0037204\n0.2592231\n\n\nk_6\n0.2851064\n0\n1873.0643\n1.799201\n2.168677\n-0.0044977\n0.1324393\n\n\nk_8\n0.2586174\n0\n1636.1817\n2.149713\n3.552313\n-0.0065691\n0.1022790\n\n\nk_9\n0.2489799\n0\n958.2712\n3.232229\n3.805038\n-0.0057935\n0.1829836\n\n\nk_10\n0.2028457\n0\n1416.5421\n2.552099\n4.802588\n-0.0078132\n0.0904757\n\n\nk_4\n0.1600588\n0\n1613.0683\n2.871479\n4.394944\n-0.0054940\n0.2373967\n\n\n\n\n\n\n\n\n\nCluster with higher Silhouette statistic\n\nsel_clust &lt;- clust[[res_cvi[[1,1]]]]\n\n\nplot(sel_clust)\n\n\n\n\n\nggsave(filename = \"cluster_mun_year.pdf\")\n\nSaving 7 x 5 in image\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\nggsave(filename = \"cluster_mun_year_centr.pdf\")\n\nSaving 7 x 5 in image\n\n\n\n\nCluster sizes\n\ntable(sel_clust@cluster)\n\n\n   1    2    3    4    5    6    7 \n2008  895  551 1227  587  466  377"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year.html#session-info",
    "href": "dengue-cluster/cluster_mun_year.html#session-info",
    "title": "Yearly time series",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] tictoc_1.2       kableExtra_1.3.4 dtwclust_5.5.12  dtw_1.23-1      \n [5] proxy_0.4-27     timetk_2.9.0     arrow_13.0.0.1   lubridate_1.9.3 \n [9] forcats_1.0.0    stringr_1.5.0    dplyr_1.1.3      purrr_1.0.2     \n[13] readr_2.1.4      tidyr_1.3.0      tibble_3.2.1     ggplot2_3.4.4   \n[17] tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rlang_1.1.2         magrittr_2.0.3      clue_0.3-65        \n  [4] furrr_0.3.1         flexclust_1.4-1     compiler_4.3.2     \n  [7] systemfonts_1.0.5   vctrs_0.6.4         reshape2_1.4.4     \n [10] rvest_1.0.3         lhs_1.1.6           tune_1.1.2         \n [13] pkgconfig_2.0.3     fastmap_1.1.1       ellipsis_0.3.2     \n [16] labeling_0.4.3      utf8_1.2.4          promises_1.2.1     \n [19] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n [22] ragg_1.2.6          bit_4.0.5           xfun_0.41          \n [25] modeltools_0.2-23   jsonlite_1.8.7      recipes_1.0.8      \n [28] highr_0.10          later_1.3.1         parallel_4.3.2     \n [31] cluster_2.1.4       R6_2.5.1            stringi_1.7.12     \n [34] rsample_1.2.0       parallelly_1.36.0   rpart_4.1.21       \n [37] Rcpp_1.0.11         assertthat_0.2.1    dials_1.2.0        \n [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.0\n [43] zoo_1.8-12          httpuv_1.6.12       Matrix_1.6-1.1     \n [46] splines_4.3.2       nnet_7.3-19         timechange_0.2.0   \n [49] tidyselect_1.2.0    rstudioapi_0.15.0   yaml_2.3.7         \n [52] timeDate_4022.108   codetools_0.2-19    listenv_0.9.0      \n [55] lattice_0.22-5      plyr_1.8.9          shiny_1.7.5.1      \n [58] withr_2.5.2         evaluate_0.23       future_1.33.0      \n [61] survival_3.5-7      RcppParallel_5.1.7  xml2_1.3.5         \n [64] xts_0.13.1          pillar_1.9.0        foreach_1.5.2      \n [67] stats4_4.3.2        shinyjs_2.1.0       generics_0.1.3     \n [70] hms_1.1.3           munsell_0.5.0       scales_1.2.1       \n [73] xtable_1.8-4        globals_0.16.2      class_7.3-22       \n [76] glue_1.6.2          tools_4.3.2         data.table_1.14.8  \n [79] RSpectra_0.16-1     webshot_0.5.5       gower_1.0.1        \n [82] grid_4.3.2          yardstick_1.2.0     ipred_0.9-14       \n [85] colorspace_2.1-0    cli_3.6.1           DiceDesign_1.9     \n [88] textshaping_0.3.7   workflows_1.1.3     parsnip_1.1.1      \n [91] fansi_1.0.5         viridisLite_0.4.2   svglite_2.1.2      \n [94] lava_1.7.3          gtable_0.3.4        GPfit_1.0-8        \n [97] digest_0.6.33       ggrepel_0.9.4       farver_2.1.1       \n[100] htmlwidgets_1.6.2   htmltools_0.5.7     lifecycle_1.0.4    \n[103] httr_1.4.7          hardhat_1.3.0       mime_0.12          \n[106] bit64_4.0.5         MASS_7.3-60"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled_hier.html",
    "href": "dengue-cluster/cluster_long_scaled_hier.html",
    "title": "Hierarchical clustering",
    "section": "",
    "text": "This notebooks aims to explore hierarchical clustering of municipalities considering scaled dengue cases time series."
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled_hier.html#packages",
    "href": "dengue-cluster/cluster_long_scaled_hier.html#packages",
    "title": "Hierarchical clustering",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled_hier.html#load-data",
    "href": "dengue-cluster/cluster_long_scaled_hier.html#load-data",
    "title": "Hierarchical clustering",
    "section": "Load data",
    "text": "Load data\nLoad the bundled data (326 municipalities, pop \\(\\geq\\) 100k inhab.) with standardized cases and keep only the municipality code, date and cases variables.\n\ntdengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases) %&gt;%\n    collect()"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled_hier.html#prepare-data",
    "href": "dengue-cluster/cluster_long_scaled_hier.html#prepare-data",
    "title": "Hierarchical clustering",
    "section": "Prepare data",
    "text": "Prepare data\n\ntdengue &lt;- tdengue %&gt;%\n  mutate(mun = paste0(\"m_\", mun)) %&gt;%\n  arrange(mun, date) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-date) %&gt;%\n  t() %&gt;%\n  tslist()"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled_hier.html#clustering",
    "href": "dengue-cluster/cluster_long_scaled_hier.html#clustering",
    "title": "Hierarchical clustering",
    "section": "Clustering",
    "text": "Clustering\n\ntic()\nclust &lt;- tsclust(\n  series = tdengue, \n  type = \"hierarchical\", \n  k = 5,\n  distance = \"dtw_basic\",\n  seed = 123,\n  control = hierarchical_control(method = \"average\")\n)\ntoc()\n\n44.964 sec elapsed\n\n\n\nggdendro::ggdendrogram(clust, size = .3, labels = F)"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled_hier.html#session-info",
    "href": "dengue-cluster/cluster_long_scaled_hier.html#session-info",
    "title": "Hierarchical clustering",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] tictoc_1.2       kableExtra_1.3.4 dtwclust_5.5.12  dtw_1.23-1      \n [5] proxy_0.4-27     timetk_2.9.0     arrow_13.0.0.1   lubridate_1.9.3 \n [9] forcats_1.0.0    stringr_1.5.0    dplyr_1.1.3      purrr_1.0.2     \n[13] readr_2.1.4      tidyr_1.3.0      tibble_3.2.1     ggplot2_3.4.4   \n[17] tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rlang_1.1.2         magrittr_2.0.3      clue_0.3-65        \n  [4] furrr_0.3.1         flexclust_1.4-1     compiler_4.3.2     \n  [7] systemfonts_1.0.5   vctrs_0.6.4         reshape2_1.4.4     \n [10] rvest_1.0.3         lhs_1.1.6           tune_1.1.2         \n [13] pkgconfig_2.0.3     fastmap_1.1.1       ellipsis_0.3.2     \n [16] labeling_0.4.3      utf8_1.2.4          promises_1.2.1     \n [19] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n [22] bit_4.0.5           xfun_0.41           modeltools_0.2-23  \n [25] jsonlite_1.8.7      recipes_1.0.8       later_1.3.1        \n [28] parallel_4.3.2      cluster_2.1.4       R6_2.5.1           \n [31] stringi_1.7.12      rsample_1.2.0       parallelly_1.36.0  \n [34] rpart_4.1.21        Rcpp_1.0.11         assertthat_0.2.1   \n [37] dials_1.2.0         iterators_1.0.14    knitr_1.45         \n [40] future.apply_1.11.0 zoo_1.8-12          httpuv_1.6.12      \n [43] Matrix_1.6-1.1      splines_4.3.2       nnet_7.3-19        \n [46] timechange_0.2.0    tidyselect_1.2.0    rstudioapi_0.15.0  \n [49] yaml_2.3.7          timeDate_4022.108   codetools_0.2-19   \n [52] listenv_0.9.0       lattice_0.22-5      plyr_1.8.9         \n [55] shiny_1.7.5.1       withr_2.5.2         evaluate_0.23      \n [58] future_1.33.0       survival_3.5-7      RcppParallel_5.1.7 \n [61] xml2_1.3.5          xts_0.13.1          pillar_1.9.0       \n [64] foreach_1.5.2       stats4_4.3.2        shinyjs_2.1.0      \n [67] generics_0.1.3      hms_1.1.3           munsell_0.5.0      \n [70] scales_1.2.1        xtable_1.8-4        globals_0.16.2     \n [73] class_7.3-22        glue_1.6.2          tools_4.3.2        \n [76] data.table_1.14.8   RSpectra_0.16-1     webshot_0.5.5      \n [79] gower_1.0.1         grid_4.3.2          yardstick_1.2.0    \n [82] ipred_0.9-14        colorspace_2.1-0    cli_3.6.1          \n [85] DiceDesign_1.9      workflows_1.1.3     parsnip_1.1.1      \n [88] fansi_1.0.5         viridisLite_0.4.2   ggdendro_0.1.23    \n [91] svglite_2.1.2       lava_1.7.3          gtable_0.3.4       \n [94] GPfit_1.0-8         digest_0.6.33       ggrepel_0.9.4      \n [97] farver_2.1.1        htmlwidgets_1.6.2   htmltools_0.5.7    \n[100] lifecycle_1.0.4     httr_1.4.7          hardhat_1.3.0      \n[103] mime_0.12           bit64_4.0.5         MASS_7.3-60"
  },
  {
    "objectID": "dengue-data/raw_files_zika.html",
    "href": "dengue-data/raw_files_zika.html",
    "title": "Raw files, chikungunya",
    "section": "",
    "text": "This notebook presents the process of downloading SINAN Dengue raw data files from DataSUS, pre-processing steps using the {microdatasus} package and exporting the raw files to parquet files."
  },
  {
    "objectID": "dengue-data/raw_files_zika.html#packages",
    "href": "dengue-data/raw_files_zika.html#packages",
    "title": "Raw files, chikungunya",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\n# remotes::install_github(\"rfsaldanha/microdatasus\")\nlibrary(microdatasus)\nlibrary(arrow)\nsource(\"../functions.R\")\n\n\nExecution node\n\nnode_name()\n\n[1] \"rfsaldanha\""
  },
  {
    "objectID": "dengue-data/raw_files_zika.html#data-download",
    "href": "dengue-data/raw_files_zika.html#data-download",
    "title": "Raw files, chikungunya",
    "section": "Data download",
    "text": "Data download\n\n# for(a in 2016:2021){\n#   tmp &lt;- fetch_datasus(\n#     year_start = a, year_end = a,\n#     information_system = \"SINAN-ZIKA\"\n#   )\n# \n#   write_parquet(x = tmp, sink = paste0(data_dir(\"zika_data/parquets_raw/raw_zika_\"),a, \".parquet\"))\n# \n#   tmp &lt;- process_sinan_zika(data = tmp)\n# \n#   write_parquet(x = tmp, sink = paste0(data_dir(\"zika_data/parquets/zika_\"), a, \".parquet\"))\n# \n#   rm(tmp)\n# }\n\n\n\n\n\n\n\nWarning\n\n\n\nThis code chunk is commented to avoid unnecessary download again the raw DBC files from DataSUS."
  },
  {
    "objectID": "dengue-data/raw_files_zika.html#overview",
    "href": "dengue-data/raw_files_zika.html#overview",
    "title": "Raw files, chikungunya",
    "section": "Overview",
    "text": "Overview\n\ndengue &lt;- open_dataset(sources = data_dir(\"dengue_data/parquets\"))\n\n\ndengue %&gt;% glimpse()\n\nFileSystemDataset with 15 Parquet files\n19,180,457 rows x 75 columns\n$ TP_NOT       &lt;string&gt; \"Individual\", \"Individual\", \"Individual\", \"Individual\", …\n$ ID_AGRAVO    &lt;string&gt; \"A90\", \"A90\", \"A90\", \"A90\", \"A90\", \"A90\", \"A90\", \"A90\", …\n$ DT_NOTIFIC   &lt;string&gt; \"2007-02-12\", \"2007-02-12\", \"2007-02-26\", \"2007-02-12\", …\n$ SEM_NOT      &lt;string&gt; \"200707\", \"200707\", \"200709\", \"200707\", \"200706\", \"20070…\n$ NU_ANO       &lt;string&gt; \"2007\", \"2007\", \"2007\", \"2007\", \"2007\", \"2007\", \"2007\", …\n$ SG_UF_NOT    &lt;string&gt; \"Maranhão\", \"Maranhão\", \"Pernambuco\", \"Bahia\", \"Bahia\", …\n$ ID_MUNICIP   &lt;string&gt; \"210780\", \"210780\", \"260640\", \"292150\", \"292150\", \"29215…\n$ ID_REGIONA   &lt;string&gt; \"1577\", \"1577\", \"1499\", \"1410\", \"1410\", \"1410\", \"1410\", …\n$ ID_UNIDADE   &lt;string&gt; \"2454793\", \"2454793\", \"2436027\", \"3340392\", \"3340392\", \"…\n$ DT_SIN_PRI   &lt;string&gt; \"2007-02-09\", \"2007-02-10\", \"2007-02-21\", \"2007-01-28\", …\n$ SEM_PRI      &lt;string&gt; \"200706\", \"200706\", \"200708\", \"200705\", \"200703\", \"20070…\n$ CS_SEXO      &lt;string&gt; \"Feminino\", \"Feminino\", \"Masculino\", \"Feminino\", \"Mascul…\n$ CS_GESTANT   &lt;string&gt; \"Ignorado\", \"Ignorado\", \"Não se aplica\", \"Não se aplica\"…\n$ CS_RACA      &lt;string&gt; \"Parda\", \"Parda\", \"Branca\", \"Branca\", \"Parda\", \"Parda\", …\n$ CS_ESCOL_N   &lt;string&gt; \"5a à 8a série incompleta do EF (antigo ginásio ou 1o gr…\n$ SG_UF        &lt;string&gt; \"Maranhão\", \"Maranhão\", \"Pernambuco\", \"Bahia\", \"Bahia\", …\n$ ID_MN_RESI   &lt;string&gt; \"210780\", \"210780\", \"260640\", \"292150\", \"292150\", \"29215…\n$ ID_RG_RESI   &lt;string&gt; \"1577\", \"1577\", \"1499\", \"1410\", \"1410\", \"1410\", \"1410\", …\n$ ID_PAIS      &lt;string&gt; \"BRASIL\", \"BRASIL\", \"BRASIL\", \"BRASIL\", \"BRASIL\", \"BRASI…\n$ NDUPLIC_N    &lt;string&gt; \"Não identificado\", \"Não identificado\", NA, NA, NA, NA, …\n$ DT_DIGITA    &lt;string&gt; NA, NA, \"2007-03-08\", \"2007-05-22\", \"2007-05-02\", \"2007-…\n$ CS_FLXRET    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ FLXRECEBI    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ MIGRADO_W    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ DT_INVEST    &lt;string&gt; \"2007-02-12\", \"2007-02-12\", \"2007-02-26\", \"2007-02-12\", …\n$ ID_OCUPA_N   &lt;string&gt; \"Nao informada\", \"Nao informada\", NA, \"Nao informada\", \"…\n$ DT_SORO      &lt;string&gt; NA, NA, \"2007-02-26\", \"2007-02-01\", \"2007-02-09\", NA, NA…\n$ RESUL_SORO   &lt;string&gt; \"Não realizado\", \"Não realizado\", \"Não reagente\", \"Reage…\n$ HISTOPA_N    &lt;string&gt; \"Não realizado\", \"Não realizado\", \"Não realizado\", \"Não …\n$ DT_VIRAL     &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, \"2007-02-14\", NA, NA, NA…\n$ RESUL_VI_N   &lt;string&gt; \"Não realizado\", \"Não realizado\", NA, \"Não realizado\", \"…\n$ SOROTIPO     &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, \"DEN 3\", NA, NA, NA, NA,…\n$ IMUNOH_N     &lt;string&gt; \"Não realizado\", \"Não realizado\", \"Não realizado\", \"Não …\n$ DT_PCR       &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ RESUL_PCR_   &lt;string&gt; \"Não realizado\", \"Não realizado\", NA, \"Não realizado\", \"…\n$ CLASSI_FIN   &lt;string&gt; \"Dengue clássico\", \"Dengue clássico\", \"Descartado\", \"Den…\n$ CRITERIO     &lt;string&gt; \"Clínico epidemiológico\", \"Clínico epidemiológico\", \"Clí…\n$ TPAUTOCTO    &lt;string&gt; \"Sim\", \"Sim\", NA, \"Não\", \"Sim\", NA, NA, \"Não\", \"Sim\", NA…\n$ COUFINF      &lt;string&gt; \"Maranhão\", \"Maranhão\", NA, \"Bahia\", \"Bahia\", NA, NA, \"B…\n$ COPAISINF    &lt;string&gt; \"BRASIL\", \"BRASIL\", NA, \"BRASIL\", \"BRASIL\", NA, NA, \"BRA…\n$ COMUNINF     &lt;string&gt; \"210780\", \"210780\", NA, \"292150\", \"292150\", NA, NA, \"292…\n$ DOENCA_TRA   &lt;string&gt; \"Não\", \"Não\", NA, \"Não\", \"Não\", NA, NA, \"Não\", \"Não\", NA…\n$ EVOLUCAO     &lt;string&gt; \"Cura\", \"Cura\", NA, \"Cura\", \"Cura\", NA, NA, \"Cura\", \"Cur…\n$ DT_OBITO     &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ DT_ENCERRA   &lt;string&gt; \"2007-05-08\", \"2007-05-08\", \"2007-04-19\", \"2007-05-28\", …\n$ MANI_HEMOR   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ EPISTAXE     &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ GENGIVO      &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ METRO        &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ PETEQUIAS    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ HEMATURA     &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ SANGRAM      &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ LACO_N       &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ PLASMATICO   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ EVIDENCIA    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ PLAQ_MENOR   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ CON_FHD      &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ COMPLICA     &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ HOSPITALIZ   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ DT_INTERNA   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ UF           &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ MUNICIPIO    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ IDADEminutos &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ IDADEhoras   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ IDADEdias    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ IDADEmeses   &lt;string&gt; NA, NA, NA, \"0\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ IDADEanos    &lt;string&gt; \"3\", \"1\", \"3\", NA, \"0\", \"1\", \"3\", \"0\", \"3\", \"0\", \"1\", \"2…\n$ munResStatus &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ munResTipo   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ munResNome   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ munResUf     &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ munResLat    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ munResLon    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ munResAlt    &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ munResArea   &lt;string&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\nCall `print()` for full schema details"
  },
  {
    "objectID": "dengue-data/raw_files_zika.html#session-info",
    "href": "dengue-data/raw_files_zika.html#session-info",
    "title": "Raw files, chikungunya",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] arrow_14.0.0.2     microdatasus_2.2.4 lubridate_1.9.3    forcats_1.0.0     \n [5] stringr_1.5.1      dplyr_1.1.4        purrr_1.0.2        readr_2.1.5       \n [9] tidyr_1.3.1        tibble_3.2.1       ggplot2_3.4.4      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n [1] bit_4.0.5         gtable_0.3.4      jsonlite_1.8.8    compiler_4.3.2   \n [5] tidyselect_1.2.0  assertthat_0.2.1  scales_1.3.0      yaml_2.3.8       \n [9] fastmap_1.1.1     R6_2.5.1          generics_0.1.3    knitr_1.45       \n[13] htmlwidgets_1.6.4 munsell_0.5.0     pillar_1.9.0      tzdb_0.4.0       \n[17] rlang_1.1.3       utf8_1.2.4        stringi_1.8.3     xfun_0.41        \n[21] bit64_4.0.5       timechange_0.3.0  cli_3.6.2         withr_3.0.0      \n[25] magrittr_2.0.3    digest_0.6.34     grid_4.3.2        rstudioapi_0.15.0\n[29] hms_1.1.3         lifecycle_1.0.4   vctrs_0.6.5       data.table_1.15.0\n[33] evaluate_0.23     glue_1.7.0        fansi_1.0.6       colorspace_2.1-0 \n[37] rmarkdown_2.25    tools_4.3.2       pkgconfig_2.0.3   htmltools_0.5.7"
  },
  {
    "objectID": "presentations/sigmod2025_paper_project.html#introduction",
    "href": "presentations/sigmod2025_paper_project.html#introduction",
    "title": "Subset Modeling",
    "section": "Introduction",
    "text": "Introduction"
  },
  {
    "objectID": "presentations/sigmod2025_paper_project.html#problem-definition",
    "href": "presentations/sigmod2025_paper_project.html#problem-definition",
    "title": "Subset Modeling",
    "section": "Problem definition",
    "text": "Problem definition"
  },
  {
    "objectID": "presentations/sigmod2025_paper_project.html#method",
    "href": "presentations/sigmod2025_paper_project.html#method",
    "title": "Subset Modeling",
    "section": "Method",
    "text": "Method\n\nGiven a dataset \\(D\\), train a global ML model \\(G\\)\nIdentify a number of subsets \\(S\\) on \\(D\\)\nTrain ML models on each \\(S_i\\)\nFor inference, assign the incoming sample to the corresponding \\(S_k\\)\nCompare the performance observed on \\(G\\) and \\(S\\) models for each unit"
  },
  {
    "objectID": "presentations/sigmod2025_paper_project.html#datasets",
    "href": "presentations/sigmod2025_paper_project.html#datasets",
    "title": "Subset Modeling",
    "section": "Datasets",
    "text": "Datasets\n\nDengue dataset. Contains 10 year time series of dengue cases incidence on Brazilian municipalities and related predictors, as temperature and rainfall.\n\nThe subsets models rendered a better performance on 116 out of 333 municipalities: a improvement of 34.83%.\n\nWe need another dataset to help generalize our findings."
  },
  {
    "objectID": "presentations/sigmod2025_paper_project.html#expected-results",
    "href": "presentations/sigmod2025_paper_project.html#expected-results",
    "title": "Subset Modeling",
    "section": "Expected results",
    "text": "Expected results"
  },
  {
    "objectID": "presentations/sigmod2025_paper_project.html#motivation",
    "href": "presentations/sigmod2025_paper_project.html#motivation",
    "title": "Subset Modeling",
    "section": "Motivation",
    "text": "Motivation\n\nComplex data may present internal diversity\nML systems may present a good overall performance\nBut it is not uniformly equal on all parts of the input"
  },
  {
    "objectID": "presentations/sigmod2025_paper_project.html#objective",
    "href": "presentations/sigmod2025_paper_project.html#objective",
    "title": "Subset Modeling",
    "section": "Objective",
    "text": "Objective\n\nPropose a ML framework that accounts for shared characteristics and regional variations across a domain dataset"
  },
  {
    "objectID": "presentations/sigmod2025_paper_project.html#method-1",
    "href": "presentations/sigmod2025_paper_project.html#method-1",
    "title": "Subset Modeling",
    "section": "Method",
    "text": "Method"
  },
  {
    "objectID": "presentations/sigmod2025_paper_project.html#preliminary-results",
    "href": "presentations/sigmod2025_paper_project.html#preliminary-results",
    "title": "Subset Modeling",
    "section": "Preliminary results",
    "text": "Preliminary results"
  },
  {
    "objectID": "presentations/sigmod2025_paper_project.html#method-2",
    "href": "presentations/sigmod2025_paper_project.html#method-2",
    "title": "Subset Modeling",
    "section": "Method",
    "text": "Method\n\n\n\n\nflowchart LR\nA[Domain data] --&gt; G[Global Model]\nA --&gt; C(Clustering)\nC --&gt; K1[Subset model 1]\nC --&gt; K2[Subset model 2]\nC --&gt; Kn[Subset model k]\nG --&gt; P1[Inference]\nK1 --&gt; P2[Inference]\nK2 --&gt; P2\nKn --&gt; P2\nP1 --&gt; AC[Accuracy comparison]\nP2 --&gt; AC"
  },
  {
    "objectID": "presentations/sigmod2025_paper_project.html#method-3",
    "href": "presentations/sigmod2025_paper_project.html#method-3",
    "title": "Subset Modeling",
    "section": "Method",
    "text": "Method\n\nThe subset may have a priori definitions\nOr identified with data-driven methods, like clustering techniques"
  },
  {
    "objectID": "presentations/sigmod2025_paper_project.html#geolifeclef-2023-competition",
    "href": "presentations/sigmod2025_paper_project.html#geolifeclef-2023-competition",
    "title": "Subset Modeling",
    "section": "GeoLifeCLEF 2023 competition",
    "text": "GeoLifeCLEF 2023 competition\n\nLarge-scale training dataset of 5M plant occurrences\nValidation set of 5K plots\nTest set with 20K plots\nBaseline model Spatial Random Forest (PA), trained with Presence-Absence data and longitude/latitude as covariates"
  }
]
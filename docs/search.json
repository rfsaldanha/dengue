[
  {
    "objectID": "bundled_data.html",
    "href": "bundled_data.html",
    "title": "Bundled data",
    "section": "",
    "text": "This notebook prepares a data-set with dengue cases and covariates of interest per municipality."
  },
  {
    "objectID": "bundled_data.html#packages",
    "href": "bundled_data.html#packages",
    "title": "Bundled data",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(arrow)\nlibrary(brpop)\nlibrary(tidymodels)\nlibrary(timetk)\nsource(\"functions.R\")"
  },
  {
    "objectID": "bundled_data.html#data",
    "href": "bundled_data.html#data",
    "title": "Bundled data",
    "section": "Data",
    "text": "Data\n\nDengue\nLoad dengue cases data and aggregate per week.\n\ndengue &lt;- read_parquet(data_dir(\"dengue_data/parquet_aggregated/dengue_md.parquet\")) %&gt;%\n  group_by(mun) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"week\", freq = sum(freq, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;%\n  rename(cases = freq)\n\n\n\nPopulation\nLoad municipality population data for the years present at the dengue cases data.\n\npop &lt;- mun_pop_totals() %&gt;%\n  filter(year %in% seq(year(min(dengue$date)), year(max(dengue$date)))) %&gt;%\n  mutate(mun = as.character(mun))\n\n\n\nWeather variables\nLoad weather variables and group per week.\n\nPrecipitation\n\nprec &lt;- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/pr.parquet\")) %&gt;%\n  filter(name == \"pr_sum\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue$date) & date &lt;= max(dengue$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"week\", value = sum(value, na.rm = TRUE)) %&gt;%\n  rename(prec = value)\n\n\n\n\n\n\n\nNote\n\n\n\nAs precipitation is a volume, the sum function is used.\n\n\n\n\nAverage maximum temperature\n\ntmax &lt;- open_dataset(sources = data_dir(\"weather_data/parquet/brdwgd/tmax.parquet\")) %&gt;%\n  filter(name == \"Tmax_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue$date) & date &lt;= max(dengue$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"week\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(tmax = value)\n\n\n\n\nJoin data\nJoin dengue cases, population and weather variables.\n\ntdengue &lt;- dengue %&gt;%\n  mutate(dengue_year = year(date)) %&gt;%\n  inner_join(pop, by = c(\"dengue_year\" = \"year\", \"mun\")) %&gt;%\n  select(-dengue_year) %&gt;%\n  inner_join(prec, by = \"date\") %&gt;%\n  inner_join(tmax, by = \"date\")\n\nrm(dengue, prec, tmax)\n\n\n\n\n\n\n\nNote\n\n\n\nThe population estimate is constant over each year.\n\n\n\n\nCleaning and basic features\nDue the sparsity of dengue cases, only municipalities with more than 50,000 inhabitants are filtered.\n\n# List municipalities with moren than 10k inhab\nmun_vec &lt;- pop %&gt;%\n  filter(year == max(year)) %&gt;%\n  filter(pop &gt;= 50000) %&gt;%\n  pull(mun)\n\nrm(pop)\n\n\ntdengue &lt;- tdengue %&gt;%\n  # Remove municipalilities with zero population\n  filter(pop != 0) %&gt;%\n  # Keep only municipalities in the list\n   filter(mun %in% mun_vec) %&gt;%\n  # Compute dengue rate per population\n  # mutate(cases = cases/pop*100000) %&gt;%\n  # Remove population\n  select(-pop) %&gt;%\n  # Round values\n  mutate(across(c(cases, prec, tmax), ~ round(.x, digits = 2))) %&gt;%\n  # Pad weeks \n  group_by(mun) %&gt;%\n  pad_by_time(date, .by = \"week\", .pad_value = 0, .start_date = min(tdengue$date), .end_date = max(tdengue$date)) %&gt;%\n  ungroup()\n\nMunicipalities remaining at the dataset: 679\n\n\n\n\n\n\nWarning\n\n\n\nThe computation of dengue incidence (cases per population) is commented to keep the raw cases count.\n\n\n\n\nStandardize measures\nCenter around mean with a unit standard deviation.\n\\[\nx' = \\frac{x - \\mu}{\\sigma}\n\\]\n\ntdengue &lt;- tdengue %&gt;%\n  mutate(cases_raw = cases) %&gt;%\n  group_by(mun) %&gt;%\n  arrange(date) %&gt;%\n  mutate(cases_cum_raw = cumsum(cases_raw)) %&gt;%\n  mutate(cases_cum = cases_cum_raw) %&gt;%\n  mutate(across(c(cases, cases_cum, prec, tmax), ~ standardize_vec(.x, silent = TRUE))) %&gt;%\n  ungroup()\n\n\n\nLag and rolling lag variables\nCreates lagged variables from dengue cases and weather variables, from 1 to 6 weeks.\n\ntdengue &lt;- tdengue %&gt;%\n  group_by(mun) %&gt;%\n  tk_augment_lags(.value = c(cases, prec, tmax), .lags = 1:6) %&gt;%\n  # tk_augment_slidify(\n  #   .value = contains(\"_lag\"), \n  #   .period = c(2, 4, 6), \n  #   .f = ~ mean(.x, na.rm = TRUE), \n  #   .partial = TRUE,\n  #   .align   = \"center\"\n  # ) %&gt;%\n  ungroup()\n\n\n\n\n\n\n\nWarning\n\n\n\nRolling window calculation procedure is commented out."
  },
  {
    "objectID": "bundled_data.html#overview",
    "href": "bundled_data.html#overview",
    "title": "Bundled data",
    "section": "Overview",
    "text": "Overview\n\nglimpse(tdengue)\n\nRows: 340,179\nColumns: 26\n$ mun           &lt;chr&gt; \"110002\", \"110002\", \"110002\", \"110002\", \"110002\", \"11000…\n$ date          &lt;date&gt; 2010-12-26, 2011-01-02, 2011-01-09, 2011-01-16, 2011-01…\n$ cases         &lt;dbl&gt; -0.51044592, 0.66804904, 0.66804904, 0.07880156, 0.66804…\n$ prec          &lt;dbl&gt; -1.949441733, 1.595820245, 1.609000327, 1.566288162, 1.1…\n$ tmax          &lt;dbl&gt; -13.18226058, 0.28500953, 0.37007540, 0.49095848, 0.6969…\n$ cases_raw     &lt;dbl&gt; 0, 2, 2, 1, 2, 5, 0, 1, 2, 1, 0, 2, 1, 2, 2, 0, 0, 0, 1,…\n$ cases_cum_raw &lt;dbl&gt; 0, 2, 4, 5, 7, 12, 12, 13, 15, 16, 16, 18, 19, 21, 23, 2…\n$ cases_cum     &lt;dbl&gt; -1.463959, -1.445297, -1.426635, -1.417304, -1.398642, -…\n$ cases_lag1    &lt;dbl&gt; NA, -0.51044592, 0.66804904, 0.66804904, 0.07880156, 0.6…\n$ prec_lag1     &lt;dbl&gt; NA, -1.949441733, 1.595820245, 1.609000327, 1.566288162,…\n$ tmax_lag1     &lt;dbl&gt; NA, -13.18226058, 0.28500953, 0.37007540, 0.49095848, 0.…\n$ cases_lag2    &lt;dbl&gt; NA, NA, -0.51044592, 0.66804904, 0.66804904, 0.07880156,…\n$ prec_lag2     &lt;dbl&gt; NA, NA, -1.949441733, 1.595820245, 1.609000327, 1.566288…\n$ tmax_lag2     &lt;dbl&gt; NA, NA, -13.18226058, 0.28500953, 0.37007540, 0.49095848…\n$ cases_lag3    &lt;dbl&gt; NA, NA, NA, -0.51044592, 0.66804904, 0.66804904, 0.07880…\n$ prec_lag3     &lt;dbl&gt; NA, NA, NA, -1.949441733, 1.595820245, 1.609000327, 1.56…\n$ tmax_lag3     &lt;dbl&gt; NA, NA, NA, -13.18226058, 0.28500953, 0.37007540, 0.4909…\n$ cases_lag4    &lt;dbl&gt; NA, NA, NA, NA, -0.51044592, 0.66804904, 0.66804904, 0.0…\n$ prec_lag4     &lt;dbl&gt; NA, NA, NA, NA, -1.949441733, 1.595820245, 1.609000327, …\n$ tmax_lag4     &lt;dbl&gt; NA, NA, NA, NA, -13.18226058, 0.28500953, 0.37007540, 0.…\n$ cases_lag5    &lt;dbl&gt; NA, NA, NA, NA, NA, -0.51044592, 0.66804904, 0.66804904,…\n$ prec_lag5     &lt;dbl&gt; NA, NA, NA, NA, NA, -1.949441733, 1.595820245, 1.6090003…\n$ tmax_lag5     &lt;dbl&gt; NA, NA, NA, NA, NA, -13.18226058, 0.28500953, 0.37007540…\n$ cases_lag6    &lt;dbl&gt; NA, NA, NA, NA, NA, NA, -0.51044592, 0.66804904, 0.66804…\n$ prec_lag6     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, -1.9494417, 1.5958202, 1.6090003…\n$ tmax_lag6     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, -13.18226058, 0.28500953, 0.3700…"
  },
  {
    "objectID": "bundled_data.html#save-result",
    "href": "bundled_data.html#save-result",
    "title": "Bundled data",
    "section": "Save result",
    "text": "Save result\n\nwrite_parquet(x = tdengue, sink = data_dir(\"bundled_data/tdengue.parquet\"))"
  },
  {
    "objectID": "bundled_data.html#session-info",
    "href": "bundled_data.html#session-info",
    "title": "Bundled data",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] timetk_2.9.0       yardstick_1.2.0    workflowsets_1.0.1 workflows_1.1.3   \n [5] tune_1.1.2         rsample_1.2.0      recipes_1.0.8      parsnip_1.1.1     \n [9] modeldata_1.2.0    infer_1.0.5        dials_1.2.0        scales_1.2.1      \n[13] broom_1.0.5        tidymodels_1.1.1   brpop_0.3.0        arrow_13.0.0.1    \n[17] lubridate_1.9.3    forcats_1.0.0      stringr_1.5.0      dplyr_1.1.3       \n[21] purrr_1.0.2        readr_2.1.4        tidyr_1.3.0        tibble_3.2.1      \n[25] ggplot2_3.4.4      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.0    timeDate_4022.108   fastmap_1.1.1      \n [4] digest_0.6.33       rpart_4.1.21        timechange_0.2.0   \n [7] lifecycle_1.0.3     survival_3.5-7      magrittr_2.0.3     \n[10] compiler_4.3.2      rlang_1.1.2         tools_4.3.2        \n[13] utf8_1.2.4          yaml_2.3.7          data.table_1.14.8  \n[16] knitr_1.45          htmlwidgets_1.6.2   bit_4.0.5          \n[19] DiceDesign_1.9      withr_2.5.2         nnet_7.3-19        \n[22] grid_4.3.2          fansi_1.0.5         xts_0.13.1         \n[25] colorspace_2.1-0    future_1.33.0       iterators_1.0.14   \n[28] globals_0.16.2      MASS_7.3-60         anytime_0.3.9      \n[31] cli_3.6.1           rmarkdown_2.25      generics_0.1.3     \n[34] rstudioapi_0.15.0   future.apply_1.11.0 tzdb_0.4.0         \n[37] splines_4.3.2       assertthat_0.2.1    parallel_4.3.2     \n[40] vctrs_0.6.4         hardhat_1.3.0       Matrix_1.6-1.1     \n[43] jsonlite_1.8.7      hms_1.1.3           bit64_4.0.5        \n[46] listenv_0.9.0       foreach_1.5.2       gower_1.0.1        \n[49] glue_1.6.2          parallelly_1.36.0   codetools_0.2-19   \n[52] stringi_1.7.12      gtable_0.3.4        GPfit_1.0-8        \n[55] munsell_0.5.0       pillar_1.9.0        furrr_0.3.1        \n[58] htmltools_0.5.7     ipred_0.9-14        lava_1.7.3         \n[61] R6_2.5.1            lhs_1.1.6           evaluate_0.23      \n[64] lattice_0.22-5      backports_1.4.1     class_7.3-22       \n[67] Rcpp_1.0.11         prodlim_2023.08.28  padr_0.6.2         \n[70] xfun_0.41           zoo_1.8-12          pkgconfig_2.0.3"
  },
  {
    "objectID": "cluster_analysis.html",
    "href": "cluster_analysis.html",
    "title": "Overview",
    "section": "",
    "text": "On this section there are notebooks that cluster municipalities time series of dengue cases with different strategies.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n  \n\n\n\n\nSDTW, cumulative and scaled long time series\n\n\n\n\n\n\n\n\n\n\n\n\nNovember 8, 2023 | 11:15:53 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nTime series features\n\n\nwith scaled cases\n\n\n\n\n\n\n\n\n\nNovember 8, 2023 | 11:10:40 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nScaled cases\n\n\n\n\n\n\n\n\n\n\n\n\nNovember 8, 2023 | 09:33:03 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nScaled cases, cumulative\n\n\n\n\n\n\n\n\n\n\n\n\nNovember 8, 2023 | 09:32:53 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nRaw cases, cumulative\n\n\n\n\n\n\n\n\n\n\n\n\nNovember 6, 2023 | 15:23:48 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nRaw cases\n\n\n\n\n\n\n\n\n\n\n\n\nNovember 6, 2023 | 13:35:00 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nEpi year time series\n\n\n\n\n\n\n\n\n\n\n\n\nAugust 24, 2023 | 11:03:14 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nCumulative time series\n\n\n\n\n\n\n\n\n\n\n\n\nAugust 24, 2023 | 10:22:34 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nYearly time series\n\n\n\n\n\n\n\n\n\n\n\n\nAugust 24, 2023 | 09:43:27 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nHierarchical clustering\n\n\nwith scaled cases\n\n\n\n\n\n\n\n\n\nAugust 22, 2023 | 12:07:13 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum.html",
    "href": "dengue-cluster/cluster_long_cum.html",
    "title": "Raw cases, cumulative",
    "section": "",
    "text": "This notebook aims to cluster the Brazilian municipalities considering dengue raw cases time-series similarities."
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum.html#packages",
    "href": "dengue-cluster/cluster_long_cum.html#packages",
    "title": "Raw cases, cumulative",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum.html#load-data",
    "href": "dengue-cluster/cluster_long_cum.html#load-data",
    "title": "Raw cases, cumulative",
    "section": "Load data",
    "text": "Load data\nLoad the bundled data.\n\ntdengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases = cases_cum) %&gt;%\n    collect()\n\ndim(tdengue)\n\n[1] 340179      3\n\n\n\nPrepare data\nThe chunk bellow formats the dataset for tsclust use.\n\ntdengue &lt;- tdengue %&gt;%\n  # Prepare time series\n  arrange(mun) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-date) %&gt;%\n  t() %&gt;%\n  # Convert object\n  tslist()\n\n\nlength(tdengue)\n\n[1] 679"
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum.html#clustering",
    "href": "dengue-cluster/cluster_long_cum.html#clustering",
    "title": "Raw cases, cumulative",
    "section": "Clustering",
    "text": "Clustering\nSequence of k groups to be used.\n\nk_seq &lt;- 2:10\n\n\nSBD method\n\ntic()\nclust &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sbd\",\n  seed = 13\n)\ntoc()\n\n0.848 sec elapsed\n\n\n\n\nCluster Validity Indices (CVI)\n\nnames(clust) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  kbl() %&gt;%\n  kable_styling()\n\n\n\n\nk\nSil\nSF\nCH\nDB\nDBstar\nD\nCOP\n\n\n\n\nk_2\n0.4442625\n0.5940473\n345.3780\n1.035863\n1.035863\n0.0080048\n0.2020110\n\n\nk_3\n0.4022197\n0.5792206\n346.5557\n1.239092\n1.387231\n0.0018582\n0.1273269\n\n\nk_4\n0.3334983\n0.5737804\n245.6445\n1.121578\n1.815766\n0.0020324\n0.1040958\n\n\nk_7\n0.3274548\n0.5339155\n190.7100\n1.212410\n2.079583\n0.0048570\n0.0682683\n\n\nk_6\n0.3125595\n0.5426452\n206.1180\n1.239948\n2.105174\n0.0086538\n0.0732875\n\n\nk_10\n0.2993463\n0.5225233\n168.3385\n1.828146\n3.486689\n0.0023074\n0.0562692\n\n\nk_9\n0.2813463\n0.5244313\n182.8368\n1.213397\n1.947885\n0.0028276\n0.0568539\n\n\nk_5\n0.2604179\n0.5603160\n209.0601\n1.290158\n1.825457\n0.0033402\n0.1015525\n\n\nk_8\n0.1947688\n0.5344965\n148.8106\n1.642704\n3.682444\n0.0023717\n0.0779969\n\n\n\n\n\n\n\n\n\nCluster with higher Silhouette statistic\n\nsel_clust &lt;- clust[[res_cvi[[1,1]]]]\n\n\nplot(sel_clust)\n\n\n\n\n\nggsave(filename = \"cluster_long.pdf\")\n\nSaving 7 x 5 in image\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\n\nCluster sizes\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n500 179"
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum.html#session-info",
    "href": "dengue-cluster/cluster_long_cum.html#session-info",
    "title": "Raw cases, cumulative",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] tictoc_1.2       kableExtra_1.3.4 dtwclust_5.5.12  dtw_1.23-1      \n [5] proxy_0.4-27     timetk_2.9.0     arrow_13.0.0.1   lubridate_1.9.3 \n [9] forcats_1.0.0    stringr_1.5.0    dplyr_1.1.3      purrr_1.0.2     \n[13] readr_2.1.4      tidyr_1.3.0      tibble_3.2.1     ggplot2_3.4.4   \n[17] tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rlang_1.1.2         magrittr_2.0.3      clue_0.3-65        \n  [4] furrr_0.3.1         flexclust_1.4-1     compiler_4.3.2     \n  [7] systemfonts_1.0.5   vctrs_0.6.4         reshape2_1.4.4     \n [10] rvest_1.0.3         lhs_1.1.6           tune_1.1.2         \n [13] pkgconfig_2.0.3     fastmap_1.1.1       ellipsis_0.3.2     \n [16] labeling_0.4.3      utf8_1.2.4          promises_1.2.1     \n [19] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n [22] ragg_1.2.6          bit_4.0.5           xfun_0.41          \n [25] modeltools_0.2-23   jsonlite_1.8.7      recipes_1.0.8      \n [28] highr_0.10          later_1.3.1         parallel_4.3.2     \n [31] cluster_2.1.4       R6_2.5.1            stringi_1.7.12     \n [34] rsample_1.2.0       parallelly_1.36.0   rpart_4.1.21       \n [37] Rcpp_1.0.11         assertthat_0.2.1    dials_1.2.0        \n [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.0\n [43] zoo_1.8-12          httpuv_1.6.12       Matrix_1.6-1.1     \n [46] splines_4.3.2       nnet_7.3-19         timechange_0.2.0   \n [49] tidyselect_1.2.0    rstudioapi_0.15.0   yaml_2.3.7         \n [52] timeDate_4022.108   codetools_0.2-19    listenv_0.9.0      \n [55] lattice_0.22-5      plyr_1.8.9          shiny_1.7.5.1      \n [58] withr_2.5.2         evaluate_0.23       future_1.33.0      \n [61] survival_3.5-7      RcppParallel_5.1.7  xml2_1.3.5         \n [64] xts_0.13.1          pillar_1.9.0        foreach_1.5.2      \n [67] stats4_4.3.2        shinyjs_2.1.0       generics_0.1.3     \n [70] hms_1.1.3           munsell_0.5.0       scales_1.2.1       \n [73] xtable_1.8-4        globals_0.16.2      class_7.3-22       \n [76] glue_1.6.2          tools_4.3.2         data.table_1.14.8  \n [79] RSpectra_0.16-1     webshot_0.5.5       gower_1.0.1        \n [82] grid_4.3.2          yardstick_1.2.0     ipred_0.9-14       \n [85] colorspace_2.1-0    cli_3.6.1           DiceDesign_1.9     \n [88] textshaping_0.3.7   workflows_1.1.3     parsnip_1.1.1      \n [91] fansi_1.0.5         viridisLite_0.4.2   svglite_2.1.2      \n [94] lava_1.7.3          gtable_0.3.4        GPfit_1.0-8        \n [97] digest_0.6.33       ggrepel_0.9.4       farver_2.1.1       \n[100] htmlwidgets_1.6.2   htmltools_0.5.7     lifecycle_1.0.4    \n[103] httr_1.4.7          hardhat_1.3.0       mime_0.12          \n[106] bit64_4.0.5         MASS_7.3-60"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "Summary",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\nSDTW, cumulative and scaled long time series\n\n\n\n\n\n\n\n\n\n\n\n\nNovember 8, 2023 | 11:15:53 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nTime series features\n\n\nwith scaled cases\n\n\n\n\n\n\n\n\n\nNovember 8, 2023 | 11:10:40 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nScaled cases\n\n\n\n\n\n\n\n\n\n\n\n\nNovember 8, 2023 | 09:33:03 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nScaled cases, cumulative\n\n\n\n\n\n\n\n\n\n\n\n\nNovember 8, 2023 | 09:32:53 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nSBD clustering\n\n\n\n\n\n\n\n\n\n\n\n\nNovember 8, 2023 | 09:04:57 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nRaw cases, cumulative\n\n\n\n\n\n\n\n\n\n\n\n\nNovember 6, 2023 | 15:23:48 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nRaw cases\n\n\n\n\n\n\n\n\n\n\n\n\nNovember 6, 2023 | 13:35:00 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nCase classification analysis\n\n\n\n\n\n\n\n\n\n\n\n\nSeptember 11, 2023 | 17:48:35 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nEpi year time series\n\n\n\n\n\n\n\n\n\n\n\n\nAugust 24, 2023 | 11:03:14 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nCumulative time series\n\n\n\n\n\n\n\n\n\n\n\n\nAugust 24, 2023 | 10:22:34 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nYearly time series\n\n\n\n\n\n\n\n\n\n\n\n\nAugust 24, 2023 | 09:43:27 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nHierarchical clustering\n\n\nwith scaled cases\n\n\n\n\n\n\n\n\n\nAugust 22, 2023 | 12:07:13 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nExport aggregated database\n\n\n\n\n\n\n\n\n\n\n\n\nAugust 22, 2023 | 10:20:13 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nImputation\n\n\n\n\n\n\n\n\n\n\n\n\nAugust 22, 2023 | 09:54:22 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nMissing data analysis\n\n\n\n\n\n\n\n\n\n\n\n\nAugust 22, 2023 | 09:46:35 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nRaw files\n\n\n\n\n\n\n\n\n\n\n\n\nAugust 22, 2023 | 09:42:46 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nGlobal and subset models workflow\n\n\n\n\n\n\n\n\n\n\n\n\nJuly 18, 2023 | 12:02:25 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nTime series features clustering\n\n\n\n\n\n\n\n\n\n\n\n\nJuly 18, 2023 | 10:51:41 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nTime series features clustering, with robust sparse k-means\n\n\n\n\n\n\n\n\n\n\n\n\nJuly 13, 2023 | 15:50:22 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nDengue case classification\n\n\nby symptoms and clinical condition\n\n\n\n\n\n\n\n\n\nJuly 11, 2023 | 15:09:47 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nRegression task\n\n\n\n\n\n\n\n\n\n\n\n\nJuly 4, 2023 | 14:34:58 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nClassification task\n\n\n\n\n\n\n\n\n\n\n\n\nJuly 4, 2023 | 14:32:43 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled.html",
    "href": "dengue-cluster/cluster_long_scaled.html",
    "title": "Scaled cases",
    "section": "",
    "text": "This notebook aims to cluster the Brazilian municipalities considering scaled (standardized) dengue cases time-series similarities."
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled.html#packages",
    "href": "dengue-cluster/cluster_long_scaled.html#packages",
    "title": "Scaled cases",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled.html#load-data",
    "href": "dengue-cluster/cluster_long_scaled.html#load-data",
    "title": "Scaled cases",
    "section": "Load data",
    "text": "Load data\nLoad the aggregated data.\n\ntdengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases) %&gt;%\n    collect()\n\ndim(tdengue)\n\n[1] 340179      3\n\n\n\nPrepare data\nThe chunk bellow executes various steps to prepare the data for clustering.\n\ntdengue &lt;- tdengue %&gt;%\n  # Prepare time series\n  mutate(mun = paste0(\"m_\", mun)) %&gt;%\n  arrange(mun, date) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-date) %&gt;%\n  t() %&gt;%\n  tslist()\n\n\nlength(tdengue)\n\n[1] 679"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled.html#clustering",
    "href": "dengue-cluster/cluster_long_scaled.html#clustering",
    "title": "Scaled cases",
    "section": "Clustering",
    "text": "Clustering\nSequence of k groups to be used.\n\nk_seq &lt;- 2:10\n\n\nDTW (basic)\n\ntic()\nclust_dtw &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"dtw_basic\",\n  seed = 13\n)\ntoc()\n\n44.727 sec elapsed\n\n\n\nnames(clust_dtw) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_dtw, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.22470565\n0\n471.19772\n2.169633\n2.169633\n0.09802846\n0.4465088\n    k_6\n0.16590632\n0\n129.12898\n1.492001\n1.779535\n0.08842332\n0.3564468\n    k_5\n0.12371981\n0\n166.97238\n1.873249\n2.231609\n0.08368662\n0.3581035\n    k_3\n0.12269031\n0\n282.64604\n2.352913\n2.754531\n0.08676909\n0.4086315\n    k_4\n0.11888356\n0\n193.62938\n1.898608\n2.232433\n0.08471016\n0.3694141\n    k_10\n0.10437071\n0\n82.16793\n1.872270\n2.348246\n0.10197290\n0.3198181\n    k_7\n0.07891310\n0\n105.14468\n2.366061\n2.737811\n0.10021368\n0.3467224\n    k_9\n0.05778652\n0\n87.10300\n1.950026\n2.716834\n0.10021368\n0.3233407\n    k_8\n0.05494472\n0\n100.42993\n1.902694\n2.559555\n0.07642521\n0.3449551\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_dtw[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n292 387 \n\n\n\n\nSoft-DTW\n\ntic()\nclust_sdtw &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sdtw\",\n  seed = 13\n)\ntoc()\n\n204.708 sec elapsed\n\n\n\nnames(clust_sdtw) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_sdtw, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.54420550\n0\n424.7128\n1.784989\n1.784989\n0.0188267923\n0.2699432\n    k_6\n0.23058175\n0\n150.9456\n1.252811\n1.660076\n0.0056554246\n0.1492226\n    k_5\n0.20100983\n0\n179.4794\n2.019992\n3.279759\n0.0062697286\n0.1565015\n    k_4\n0.16735749\n0\n197.7269\n2.204787\n5.000366\n0.0014544262\n0.1900948\n    k_3\n0.16612027\n0\n203.6722\n4.148653\n4.660288\n0.0095083455\n0.2259238\n    k_10\n0.14175838\n0\n106.8324\n1.978932\n3.094434\n0.0079666165\n0.1331531\n    k_7\n0.13487754\n0\n136.8319\n1.860672\n3.131776\n-0.0017931128\n0.1454316\n    k_9\n0.11776105\n0\n106.7446\n2.427594\n4.376014\n-0.0082114090\n0.1384285\n    k_8\n0.07201448\n0\n121.5954\n2.392449\n5.993679\n0.0005698678\n0.1471381\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_sdtw[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n581  98 \n\n\n\n\nSBD\n\ntic()\nclust_sbd &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sbd\",\n  seed = 13\n)\ntoc()\n\n0.792 sec elapsed\n\n\n\nnames(clust_sbd) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_sbd, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.19153388\n0.41954595\n92.48199\n4.965541\n4.965541\n0.05215726\n0.3986087\n    k_6\n0.17383693\n0.15654880\n45.49664\n3.416220\n3.694440\n0.09627307\n0.3700479\n    k_5\n0.15090087\n0.16086274\n51.05856\n2.100628\n2.794277\n0.08129365\n0.3596084\n    k_10\n0.09507187\n0.03507591\n37.49864\n2.666277\n3.750657\n0.05350097\n0.3320909\n    k_8\n0.07435107\n0.07700081\n29.71794\n4.390497\n6.258006\n0.04658001\n0.3447000\n    k_9\n0.05379396\n0.05994618\n39.01541\n3.867380\n5.360924\n0.03345584\n0.3376868\n    k_7\n0.03260668\n0.10548796\n48.66182\n4.096509\n5.928294\n0.02534005\n0.3453233\n    k_3\n0.02929865\n0.29847866\n58.62624\n5.033205\n6.498922\n0.02115696\n0.3885022\n    k_4\n0.02545150\n0.23112470\n50.67983\n5.198919\n6.670280\n0.02116725\n0.3814808\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_sbd[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n503 176 \n\n\n\n\nGAK\n\ntic()\nclust_gak &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"gak\",\n  seed = 13\n)\ntoc()\n\n260.459 sec elapsed\n\n\n\nnames(clust_gak) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_gak, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_6\n0.2830846\n0.6304283\n124.45464\n2.229032\n2.350710\n0.009648476\n0.2459049\n    k_9\n0.2591976\n0.6297937\n102.39058\n2.243505\n3.344258\n0.007771500\n0.2020673\n    k_7\n0.2559452\n0.6301835\n105.07795\n2.610798\n2.716722\n0.009410867\n0.2473205\n    k_10\n0.2550581\n0.6295251\n95.02169\n2.043610\n2.248546\n0.008625614\n0.1991254\n    k_5\n0.2253127\n0.6305288\n110.82437\n1.737232\n1.904585\n0.008938342\n0.3000306\n    k_3\n0.1974647\n0.6309581\n98.32655\n3.945344\n4.077690\n0.006170275\n0.3651774\n    k_8\n0.1823244\n0.6298506\n74.98460\n2.864885\n2.987567\n0.010215175\n0.2561144\n    k_2\n0.1584990\n0.6314929\n203.86335\n2.899706\n2.899706\n0.020554844\n0.5280049\n    k_4\n0.1423961\n0.6306801\n101.83124\n3.970774\n4.082930\n0.005129007\n0.3477263\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_gak[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2   3   4   5   6 \n 73 104  64  91 144 203"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled.html#session-info",
    "href": "dengue-cluster/cluster_long_scaled.html#session-info",
    "title": "Scaled cases",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] tictoc_1.2       kableExtra_1.3.4 dtwclust_5.5.12  dtw_1.23-1      \n [5] proxy_0.4-27     timetk_2.9.0     arrow_13.0.0.1   lubridate_1.9.3 \n [9] forcats_1.0.0    stringr_1.5.0    dplyr_1.1.3      purrr_1.0.2     \n[13] readr_2.1.4      tidyr_1.3.0      tibble_3.2.1     ggplot2_3.4.4   \n[17] tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rlang_1.1.2         magrittr_2.0.3      clue_0.3-65        \n  [4] furrr_0.3.1         flexclust_1.4-1     compiler_4.3.2     \n  [7] systemfonts_1.0.5   vctrs_0.6.4         reshape2_1.4.4     \n [10] rvest_1.0.3         lhs_1.1.6           tune_1.1.2         \n [13] pkgconfig_2.0.3     fastmap_1.1.1       ellipsis_0.3.2     \n [16] labeling_0.4.3      utf8_1.2.4          promises_1.2.1     \n [19] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n [22] bit_4.0.5           xfun_0.41           modeltools_0.2-23  \n [25] jsonlite_1.8.7      recipes_1.0.8       later_1.3.1        \n [28] parallel_4.3.2      cluster_2.1.4       R6_2.5.1           \n [31] stringi_1.7.12      rsample_1.2.0       parallelly_1.36.0  \n [34] rpart_4.1.21        Rcpp_1.0.11         assertthat_0.2.1   \n [37] dials_1.2.0         iterators_1.0.14    knitr_1.45         \n [40] future.apply_1.11.0 zoo_1.8-12          httpuv_1.6.12      \n [43] Matrix_1.6-1.1      splines_4.3.2       nnet_7.3-19        \n [46] timechange_0.2.0    tidyselect_1.2.0    rstudioapi_0.15.0  \n [49] yaml_2.3.7          timeDate_4022.108   codetools_0.2-19   \n [52] listenv_0.9.0       lattice_0.22-5      plyr_1.8.9         \n [55] shiny_1.7.5.1       withr_2.5.2         evaluate_0.23      \n [58] future_1.33.0       survival_3.5-7      RcppParallel_5.1.7 \n [61] xml2_1.3.5          xts_0.13.1          pillar_1.9.0       \n [64] foreach_1.5.2       stats4_4.3.2        shinyjs_2.1.0      \n [67] generics_0.1.3      hms_1.1.3           munsell_0.5.0      \n [70] scales_1.2.1        xtable_1.8-4        globals_0.16.2     \n [73] class_7.3-22        glue_1.6.2          tools_4.3.2        \n [76] data.table_1.14.8   RSpectra_0.16-1     webshot_0.5.5      \n [79] gower_1.0.1         grid_4.3.2          yardstick_1.2.0    \n [82] ipred_0.9-14        colorspace_2.1-0    cli_3.6.1          \n [85] DiceDesign_1.9      workflows_1.1.3     parsnip_1.1.1      \n [88] fansi_1.0.5         viridisLite_0.4.2   gt_0.10.0          \n [91] svglite_2.1.2       lava_1.7.3          gtable_0.3.4       \n [94] GPfit_1.0-8         sass_0.4.7          digest_0.6.33      \n [97] ggrepel_0.9.4       farver_2.1.1        htmlwidgets_1.6.2  \n[100] htmltools_0.5.7     lifecycle_1.0.4     httr_1.4.7         \n[103] hardhat_1.3.0       mime_0.12           bit64_4.0.5        \n[106] MASS_7.3-60"
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum_scaled.html",
    "href": "dengue-cluster/cluster_long_cum_scaled.html",
    "title": "Scaled cases, cumulative",
    "section": "",
    "text": "This notebook aims to cluster the Brazilian municipalities considering scaled (standardized) dengue cases time-series similarities."
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum_scaled.html#packages",
    "href": "dengue-cluster/cluster_long_cum_scaled.html#packages",
    "title": "Scaled cases, cumulative",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum_scaled.html#load-data",
    "href": "dengue-cluster/cluster_long_cum_scaled.html#load-data",
    "title": "Scaled cases, cumulative",
    "section": "Load data",
    "text": "Load data\nLoad the aggregated data.\n\ntdengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases = cases_cum) %&gt;%\n    collect()\n\ndim(tdengue)\n\n[1] 340179      3\n\n\n\nPrepare data\nThe chunk bellow executes various steps to prepare the data for clustering.\n\ntdengue &lt;- tdengue %&gt;%\n  # Prepare time series\n  mutate(mun = paste0(\"m_\", mun)) %&gt;%\n  arrange(mun, date) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-date) %&gt;%\n  t() %&gt;%\n  tslist()\n\nsaveRDS(object = tdengue, file = \"tdengue.rds\")\n\n\nlength(tdengue)\n\n[1] 679"
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum_scaled.html#clustering",
    "href": "dengue-cluster/cluster_long_cum_scaled.html#clustering",
    "title": "Scaled cases, cumulative",
    "section": "Clustering",
    "text": "Clustering\nSequence of k groups to be used.\n\nk_seq &lt;- 2:10\n\n\nDTW (basic)\n\ntic()\nclust_dtw &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"dtw_basic\",\n  seed = 13\n)\ntoc()\n\n39.132 sec elapsed\n\n\n\nnames(clust_dtw) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_dtw, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.3883485\n0\n219.03946\n1.134304\n1.134304\n0.008077949\n0.15430130\n    k_3\n0.3067752\n0\n310.90157\n1.635604\n1.775981\n0.006456940\n0.12341630\n    k_5\n0.2387272\n0\n162.71153\n1.759704\n2.280500\n0.006971102\n0.09710109\n    k_8\n0.2052530\n0\n116.02794\n1.497911\n2.157663\n0.010105561\n0.08426017\n    k_9\n0.1759150\n0\n110.48283\n1.982305\n3.102040\n0.007701467\n0.07432019\n    k_7\n0.1677298\n0\n116.57366\n1.604325\n2.207429\n0.010855206\n0.08933756\n    k_10\n0.1586523\n0\n80.28211\n2.273564\n3.023525\n0.006111798\n0.08597771\n    k_4\n0.1539778\n0\n147.65699\n2.473204\n3.436038\n0.005005953\n0.12329358\n    k_6\n0.1527731\n0\n126.08954\n2.013522\n2.576196\n0.005165569\n0.10876459\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_dtw[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n551 128 \n\n\n\n\nSoft-DTW\n\ntic()\nclust_sdtw &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sdtw\",\n  seed = 13\n)\ntoc()\n\n193.822 sec elapsed\n\n\n\nnames(clust_sdtw) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_sdtw, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_9\n4.6835404\n3.301961e-04\n-1198.16808\n0.4328621\n70.9687638\n-0.027622202\n-0.001783289\n    k_3\n0.5874870\n1.210092e-08\n241.76435\n0.4728893\n0.6095286\n-0.016428914\n0.017947639\n    k_2\n0.5526841\n1.864919e-08\n-157.74645\n0.6603416\n0.6603416\n-0.008343487\n0.076892143\n    k_7\n0.5143244\n2.926145e-06\n1776.33826\n3.5865645\n-11.8749979\n-0.024224946\n0.003868853\n    k_6\n0.5091103\n4.869410e-04\n463.73188\n2.1072188\n0.3291628\n-0.018669198\n0.005947036\n    k_10\n0.4865815\n8.516047e-01\n1744.16238\n2.2000345\n-13.7430978\n-0.020388668\n0.003773382\n    k_5\n0.4759798\n3.530744e-08\n219.42676\n1.0472748\n2.8079291\n-0.015917823\n0.007728450\n    k_4\n0.2085165\n1.043811e-05\n46.69006\n1.5530459\n-0.6703440\n-0.016278775\n0.027708772\n    k_8\n0.0811271\n1.595867e-05\n51191.47920\n3.6371109\n-5.0907762\n-0.024336278\n0.001610495\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_sdtw[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2   3   4   5   6   7   8   9 \n 74 106 102  83  89  78  44  81  22 \n\n\n\ncluster_ids &lt;- tibble(\n  mun = names(tdengue) %&gt;% substr(3, 9),\n  group = as.character(sel_clust@cluster)\n) \n\nsaveRDS(object = cluster_ids, file = \"clust_sdtw_ids.rds\")\n\n\n\nSBD\n\ntic()\nclust_sbd &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sbd\",\n  seed = 13\n)\ntoc()\n\n0.756 sec elapsed\n\n\n\nnames(clust_sbd) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_sbd, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.4442625\n0.5940473\n345.3780\n1.035863\n1.035863\n0.008004787\n0.20201102\n    k_3\n0.4022197\n0.5792206\n346.5557\n1.239092\n1.387231\n0.001858214\n0.12732693\n    k_4\n0.3334983\n0.5737804\n245.6445\n1.121578\n1.815766\n0.002032385\n0.10409579\n    k_7\n0.3274548\n0.5339155\n190.7100\n1.212410\n2.079583\n0.004857007\n0.06826826\n    k_6\n0.3125595\n0.5426452\n206.1180\n1.239948\n2.105174\n0.008653764\n0.07328745\n    k_10\n0.2993463\n0.5225233\n168.3385\n1.828146\n3.486689\n0.002307383\n0.05626920\n    k_9\n0.2813463\n0.5244313\n182.8368\n1.213397\n1.947885\n0.002827627\n0.05685390\n    k_5\n0.2604179\n0.5603160\n209.0601\n1.290158\n1.825457\n0.003340171\n0.10155246\n    k_8\n0.1947688\n0.5344965\n148.8106\n1.642704\n3.682444\n0.002371686\n0.07799687\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_sbd[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n500 179 \n\n\n\n\nGAK\n\ntic()\nclust_gak &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"gak\",\n  seed = 13\n)\ntoc()\n\n280.382 sec elapsed\n\n\n\nnames(clust_gak) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust_gak, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  gt::gt()\n\n\n\n\n\n  \n    \n    \n      k\n      Sil\n      SF\n      CH\n      DB\n      DBstar\n      D\n      COP\n    \n  \n  \n    k_2\n0.4703437\n0.6318950\n346.9030\n0.7492626\n0.7492626\n0.002673344\n0.22610650\n    k_3\n0.4242503\n0.6317923\n350.9145\n1.1578518\n1.3150938\n0.001689423\n0.12032277\n    k_4\n0.3404306\n0.6317602\n248.3140\n1.0644928\n1.7873944\n0.001860028\n0.09770063\n    k_7\n0.3391378\n0.6315128\n204.6923\n1.2022774\n2.0564247\n0.003583292\n0.06365358\n    k_6\n0.3320730\n0.6315865\n228.3494\n1.1336897\n1.8636779\n0.004311562\n0.06847479\n    k_9\n0.3173288\n0.6314596\n178.8928\n1.1311449\n1.9720656\n0.004519858\n0.04981730\n    k_10\n0.3094439\n0.6314500\n177.1258\n1.7581411\n3.6257840\n0.001690421\n0.05150554\n    k_5\n0.2528416\n0.6316542\n190.1814\n1.5612030\n2.0839318\n0.001970852\n0.09056517\n    k_8\n0.2169763\n0.6315151\n152.0770\n1.7145901\n4.1675547\n0.001897451\n0.07208410\n  \n  \n  \n\n\n\n\n\nsel_clust &lt;- clust_gak[[res_cvi[[1,1]]]]\n\nplot(sel_clust)\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n535 144"
  },
  {
    "objectID": "dengue-cluster/cluster_long_cum_scaled.html#session-info",
    "href": "dengue-cluster/cluster_long_cum_scaled.html#session-info",
    "title": "Scaled cases, cumulative",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] tictoc_1.2       kableExtra_1.3.4 dtwclust_5.5.12  dtw_1.23-1      \n [5] proxy_0.4-27     timetk_2.9.0     arrow_13.0.0.1   lubridate_1.9.3 \n [9] forcats_1.0.0    stringr_1.5.0    dplyr_1.1.3      purrr_1.0.2     \n[13] readr_2.1.4      tidyr_1.3.0      tibble_3.2.1     ggplot2_3.4.4   \n[17] tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rlang_1.1.2         magrittr_2.0.3      clue_0.3-65        \n  [4] furrr_0.3.1         flexclust_1.4-1     compiler_4.3.2     \n  [7] systemfonts_1.0.5   vctrs_0.6.4         reshape2_1.4.4     \n [10] rvest_1.0.3         lhs_1.1.6           tune_1.1.2         \n [13] pkgconfig_2.0.3     fastmap_1.1.1       ellipsis_0.3.2     \n [16] labeling_0.4.3      utf8_1.2.4          promises_1.2.1     \n [19] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n [22] bit_4.0.5           xfun_0.41           modeltools_0.2-23  \n [25] jsonlite_1.8.7      recipes_1.0.8       later_1.3.1        \n [28] parallel_4.3.2      cluster_2.1.4       R6_2.5.1           \n [31] stringi_1.7.12      rsample_1.2.0       parallelly_1.36.0  \n [34] rpart_4.1.21        Rcpp_1.0.11         assertthat_0.2.1   \n [37] dials_1.2.0         iterators_1.0.14    knitr_1.45         \n [40] future.apply_1.11.0 zoo_1.8-12          httpuv_1.6.12      \n [43] Matrix_1.6-1.1      splines_4.3.2       nnet_7.3-19        \n [46] timechange_0.2.0    tidyselect_1.2.0    rstudioapi_0.15.0  \n [49] yaml_2.3.7          timeDate_4022.108   codetools_0.2-19   \n [52] listenv_0.9.0       lattice_0.22-5      plyr_1.8.9         \n [55] shiny_1.7.5.1       withr_2.5.2         evaluate_0.23      \n [58] future_1.33.0       survival_3.5-7      RcppParallel_5.1.7 \n [61] xml2_1.3.5          xts_0.13.1          pillar_1.9.0       \n [64] foreach_1.5.2       stats4_4.3.2        shinyjs_2.1.0      \n [67] generics_0.1.3      hms_1.1.3           munsell_0.5.0      \n [70] scales_1.2.1        xtable_1.8-4        globals_0.16.2     \n [73] class_7.3-22        glue_1.6.2          tools_4.3.2        \n [76] data.table_1.14.8   RSpectra_0.16-1     webshot_0.5.5      \n [79] gower_1.0.1         grid_4.3.2          yardstick_1.2.0    \n [82] ipred_0.9-14        colorspace_2.1-0    cli_3.6.1          \n [85] DiceDesign_1.9      workflows_1.1.3     parsnip_1.1.1      \n [88] fansi_1.0.5         viridisLite_0.4.2   gt_0.10.0          \n [91] svglite_2.1.2       lava_1.7.3          gtable_0.3.4       \n [94] GPfit_1.0-8         sass_0.4.7          digest_0.6.33      \n [97] ggrepel_0.9.4       farver_2.1.1        htmlwidgets_1.6.2  \n[100] htmltools_0.5.7     lifecycle_1.0.4     httr_1.4.7         \n[103] hardhat_1.3.0       mime_0.12           bit64_4.0.5        \n[106] MASS_7.3-60"
  },
  {
    "objectID": "dengue-cluster/cluster_tsfeatures.html",
    "href": "dengue-cluster/cluster_tsfeatures.html",
    "title": "Time series features",
    "section": "",
    "text": "This notebook aims to explore time series features of dengue cases that may guide the clustering procedures. Time series features descriptions are quoted from Hyndman et al. (2022) ."
  },
  {
    "objectID": "dengue-cluster/cluster_tsfeatures.html#packages",
    "href": "dengue-cluster/cluster_tsfeatures.html#packages",
    "title": "Time series features",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(arrow)\nlibrary(tsfeatures)\nlibrary(broom)\nlibrary(DT)\nsource(\"../functions.R\")\n\n\nFunctions\nPerform Kolmogorov-Smirnorf tests between groups statistics.\n\n\nCode\nks_group_test &lt;- function(stat){\n  \n  tsf_group_split &lt;- tsf_group %&gt;%\n    # Select variables and statistic\n    select(group, statistic = !!stat) %&gt;%\n    # Split to list  \n    group_split(group) \n\n  # Matrix of possible combinations\n  comb &lt;- combn(x = unique(tsf_group$group), m = 2)\n\n  # Resuls data frame\n  ks_results &lt;- tibble()\n  \n  \n  # For each group combination, perform ks.test\n  for(i in 1:ncol(comb)){\n    g_a &lt;- comb[1,i]\n    g_b &lt;- comb[2,i]\n    \n    res &lt;- ks.test(\n      x = tsf_group_split[[g_a]]$statistic, \n      y =  tsf_group_split[[g_b]]$statistic\n    ) %&gt;% tidy()\n    \n    tmp &lt;- tibble(\n      g_a = g_a,\n      g_b = g_b,\n      statistic = round(res$statistic, 4),\n      pvalue = round(res$p.value, 4)\n    )\n    \n    ks_results &lt;- bind_rows(ks_results, tmp)\n  }\n  \n  ks_results %&gt;%\n    arrange(g_a, g_b)\n}"
  },
  {
    "objectID": "dengue-cluster/cluster_tsfeatures.html#load-data",
    "href": "dengue-cluster/cluster_tsfeatures.html#load-data",
    "title": "Time series features",
    "section": "Load data",
    "text": "Load data\nLoad the bundled data (679 municipalities, pop \\(\\geq\\) 50k inhab.) with standardized cases and keep only the municipality code, date and cases variables.\n\ntdengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases) %&gt;%\n    collect()"
  },
  {
    "objectID": "dengue-cluster/cluster_tsfeatures.html#prepare-data",
    "href": "dengue-cluster/cluster_tsfeatures.html#prepare-data",
    "title": "Time series features",
    "section": "Prepare data",
    "text": "Prepare data\nConvert panel data to a list of ts objects.\n\ntdengue_df &lt;- tdengue %&gt;%\n  arrange(mun, date) %&gt;%\n  select(-date) %&gt;%\n  nest(data = cases, .by = mun)\n\ntdengue_list &lt;- lapply(tdengue_df$data, ts)"
  },
  {
    "objectID": "dengue-cluster/cluster_tsfeatures.html#time-series-features",
    "href": "dengue-cluster/cluster_tsfeatures.html#time-series-features",
    "title": "Time series features",
    "section": "Time series features",
    "text": "Time series features\n\ntsf &lt;- tsfeatures(\n  tslist = tdengue_list, \n  features = c(\"entropy\", \"stability\",\n               \"lumpiness\", \"flat_spots\",\n               \"zero_proportion\", \"stl_features\",\n               \"acf_features\")\n)\n  \ntsf$mun &lt;- tdengue_df$mun\n\nAll features available at the tsfeatures package were computed. Bellow, details about some of them.\n\nShannon entropy\n\nMeasures the “forecastability” of a time series, where low values indicate a high signal-to-noise ratio, and large values occur when a series is difficult to forecast.\n\n\\[\n-\\int^\\pi_{-\\pi}\\hat{f}(\\lambda)\\log\\hat{f}(\\lambda) d\\lambda\n\\]\n\nggplot(tsf, aes(x = entropy)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\nStability & lumpiness\n\nStability and lumpiness are two time series features based on tiled (non-overlapping) windows. Means or variances are produced for all tiled windows. Then stability is the variance of the means, while lumpiness is the variance of the variances.\n\n\nggplot(tsf, aes(x = stability)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\nggplot(tsf, aes(x = lumpiness)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\nFlat spots\n\nFlat spots are computed by dividing the sample space of a time series into ten equal-sized intervals, and computing the maximum run length within any single interval.\n\n\nggplot(tsf, aes(x = flat_spots)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\nSTL features decomposition\n\nTrend\n\nggplot(tsf, aes(x = trend)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\nSpike\n\nggplot(tsf, aes(x = spike)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\nLinearity\n\nggplot(tsf, aes(x = linearity)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\nCurvature\n\nggplot(tsf, aes(x = curvature)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\nFirst autocorrelation coefficient\n\nggplot(tsf, aes(x = e_acf1)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\nSum of the first ten squared autocorrelation coefficients\n\nggplot(tsf, aes(x = e_acf10)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\n\n\nAutocorrelation function (ACF) features\n\nggplot(tsf, aes(x = x_acf1)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\nggplot(tsf, aes(x = x_acf10)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\nggplot(tsf, aes(x = diff1_acf1)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\nggplot(tsf, aes(x = diff1_acf10)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\nggplot(tsf, aes(x = diff2_acf1)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()\n\n\n\n\n\nggplot(tsf, aes(x = diff2_acf10)) +\n  geom_histogram(bins = 50, alpha = .7, fill = \"purple\") +\n  theme_bw()"
  },
  {
    "objectID": "dengue-cluster/cluster_tsfeatures.html#clustering",
    "href": "dengue-cluster/cluster_tsfeatures.html#clustering",
    "title": "Time series features",
    "section": "Clustering",
    "text": "Clustering\nThis procedure goal is to cluster the municipalities considering time series features similarities.\n\nK-means clustering\nCluster the municipalities based solely on the time series features.\n\npoints &lt;- tsf %&gt;%\n  select(-mun)\n\nUses \\(k\\) from 2 to 10 for clustering.\n\nkclusts &lt;- \n  tibble(k = 2:10) %&gt;%\n  mutate(\n    kclust = map(k, ~kmeans(points, .x)),\n    tidied = map(kclust, tidy),\n    glanced = map(kclust, glance),\n    augmented = map(kclust, augment, points)\n  )\n\nIsolate results.\n\nclusters &lt;- \n  kclusts %&gt;%\n  unnest(cols = c(tidied))\n\nassignments &lt;- \n  kclusts %&gt;% \n  unnest(cols = c(augmented))\n\nclusterings &lt;- \n  kclusts %&gt;%\n  unnest(cols = c(glanced))\n\nThe total sum of squares is plotted. The $k=5$ seems to be a break point.\n\nggplot(clusterings, aes(k, tot.withinss)) +\n  geom_line() +\n  geom_point() +\n  theme_bw()\n\n\n\n\n\n\nIdentify municipalities and cluster id\nFinally, the cluster partition ID is added to the main dataset.\n\ncluster_ids &lt;- clusterings %&gt;%\n  filter(k == 5) %&gt;%\n  pull(augmented) %&gt;%\n  pluck(1) %&gt;%\n  select(group = .cluster) %&gt;%\n  mutate(mun = tdengue_df$mun)\n\n\n\nCluster sizes\n\ntable(cluster_ids$group)\n\n\n  1   2   3   4   5 \n 40  88 131 199 221 \n\n\n\n\nCluster time series plot\n\ninner_join(tdengue, cluster_ids, by = \"mun\") %&gt;%\n  ggplot(aes(x = date, y = cases, color = mun)) +\n  geom_line(alpha = .3) +\n  facet_wrap(~group) +\n  theme_bw() +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "dengue-cluster/cluster_tsfeatures.html#time-series-features-per-group",
    "href": "dengue-cluster/cluster_tsfeatures.html#time-series-features-per-group",
    "title": "Time series features",
    "section": "Time series features per group",
    "text": "Time series features per group\nAdd group Id to time series feautures.\n\ntsf_group &lt;- left_join(tsf, cluster_ids, by = \"mun\")\n\n\nShannon entropy\n\nggplot(tsf_group, aes(x = entropy, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"entropy\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nStability & lumpiness\n\nggplot(tsf_group, aes(x = stability, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"stability\") %&gt;% datatable()\n\n\n\n\n\n\n\nggplot(tsf_group, aes(x = lumpiness, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"lumpiness\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nFlat spots\n\nggplot(tsf_group, aes(x = flat_spots, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"flat_spots\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nZero proportion\n\nggplot(tsf_group, aes(x = zero_proportion, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"zero_proportion\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nSTL features decomposition\n\nTrend\n\nggplot(tsf_group, aes(x = trend, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"trend\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nSpike\n\nggplot(tsf_group, aes(x = spike, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"spike\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nLinearity\n\nggplot(tsf_group, aes(x = linearity, , fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"linearity\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nCurvature\n\nggplot(tsf_group, aes(x = curvature, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"curvature\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nFirst autocorrelation coefficient\n\nggplot(tsf_group, aes(x = e_acf1, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"e_acf1\") %&gt;% datatable()\n\n\n\n\n\n\n\n\nSum of the first ten squared autocorrelation coefficients\n\nggplot(tsf_group, aes(x = e_acf10, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"e_acf10\") %&gt;% datatable()\n\n\n\n\n\n\n\n\n\nAutocorrelation function (ACF) features\n\nggplot(tsf_group, aes(x = x_acf1, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"x_acf1\") %&gt;% datatable()\n\n\n\n\n\n\n\nggplot(tsf_group, aes(x = x_acf10, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"x_acf10\") %&gt;% datatable()\n\n\n\n\n\n\n\nggplot(tsf_group, aes(x = diff1_acf1, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"diff1_acf1\") %&gt;% datatable()\n\n\n\n\n\n\n\nggplot(tsf_group, aes(x = diff1_acf10, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"diff1_acf10\") %&gt;% datatable()\n\n\n\n\n\n\n\nggplot(tsf_group, aes(x = diff2_acf1, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"diff2_acf1\") %&gt;% datatable()\n\n\n\n\n\n\n\nggplot(tsf_group, aes(x = diff2_acf10, fill = group)) +\n  geom_histogram(bins = 50, alpha = .7) +\n  facet_wrap(~ group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nks_group_test(\"diff2_acf10\") %&gt;% datatable()"
  },
  {
    "objectID": "dengue-cluster/cluster_tsfeatures.html#session-info",
    "href": "dengue-cluster/cluster_tsfeatures.html#session-info",
    "title": "Time series features",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] DT_0.30            tsfeatures_1.1.1   arrow_13.0.0.1     yardstick_1.2.0   \n [5] workflowsets_1.0.1 workflows_1.1.3    tune_1.1.2         rsample_1.2.0     \n [9] recipes_1.0.8      parsnip_1.1.1      modeldata_1.2.0    infer_1.0.5       \n[13] dials_1.2.0        scales_1.2.1       broom_1.0.5        tidymodels_1.1.1  \n[17] lubridate_1.9.3    forcats_1.0.0      stringr_1.5.0      dplyr_1.1.3       \n[21] purrr_1.0.2        readr_2.1.4        tidyr_1.3.0        tibble_3.2.1      \n[25] ggplot2_3.4.4      tidyverse_2.0.0   \n\nloaded via a namespace (and not attached):\n [1] rlang_1.1.2         magrittr_2.0.3      furrr_0.3.1        \n [4] tseries_0.10-54     compiler_4.3.2      vctrs_0.6.4        \n [7] lhs_1.1.6           quadprog_1.5-8      pkgconfig_2.0.3    \n[10] fastmap_1.1.1       ellipsis_0.3.2      backports_1.4.1    \n[13] labeling_0.4.3      utf8_1.2.4          rmarkdown_2.25     \n[16] prodlim_2023.08.28  tzdb_0.4.0          bit_4.0.5          \n[19] xfun_0.41           cachem_1.0.8        jsonlite_1.8.7     \n[22] parallel_4.3.2      R6_2.5.1            bslib_0.5.1        \n[25] stringi_1.7.12      parallelly_1.36.0   rpart_4.1.21       \n[28] jquerylib_0.1.4     lmtest_0.9-40       Rcpp_1.0.11        \n[31] assertthat_0.2.1    iterators_1.0.14    knitr_1.45         \n[34] future.apply_1.11.0 zoo_1.8-12          Matrix_1.6-1.1     \n[37] splines_4.3.2       nnet_7.3-19         timechange_0.2.0   \n[40] tidyselect_1.2.0    rstudioapi_0.15.0   yaml_2.3.7         \n[43] timeDate_4022.108   codetools_0.2-19    curl_5.1.0         \n[46] listenv_0.9.0       lattice_0.22-5      quantmod_0.4.25    \n[49] withr_2.5.2         urca_1.3-3          evaluate_0.23      \n[52] future_1.33.0       survival_3.5-7      xts_0.13.1         \n[55] pillar_1.9.0        foreach_1.5.2       generics_0.1.3     \n[58] TTR_0.24.3          forecast_8.21.1     hms_1.1.3          \n[61] munsell_0.5.0       globals_0.16.2      class_7.3-22       \n[64] glue_1.6.2          tools_4.3.2         data.table_1.14.8  \n[67] gower_1.0.1         grid_4.3.2          crosstalk_1.2.0    \n[70] ipred_0.9-14        colorspace_2.1-0    nlme_3.1-163       \n[73] fracdiff_1.5-2      cli_3.6.1           DiceDesign_1.9     \n[76] fansi_1.0.5         lava_1.7.3          gtable_0.3.4       \n[79] GPfit_1.0-8         sass_0.4.7          digest_0.6.33      \n[82] farver_2.1.1        htmlwidgets_1.6.2   htmltools_0.5.7    \n[85] lifecycle_1.0.4     hardhat_1.3.0       bit64_4.0.5        \n[88] MASS_7.3-60"
  },
  {
    "objectID": "dengue-cluster/sdtw_long_cum_scaled.html",
    "href": "dengue-cluster/sdtw_long_cum_scaled.html",
    "title": "SDTW, cumulative and scaled long time series",
    "section": "",
    "text": "library(tidyverse)\nlibrary(lubridate)\nlibrary(gt)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/sdtw_long_cum_scaled.html#packages",
    "href": "dengue-cluster/sdtw_long_cum_scaled.html#packages",
    "title": "SDTW, cumulative and scaled long time series",
    "section": "",
    "text": "library(tidyverse)\nlibrary(lubridate)\nlibrary(gt)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/sdtw_long_cum_scaled.html#dengue-data",
    "href": "dengue-cluster/sdtw_long_cum_scaled.html#dengue-data",
    "title": "SDTW, cumulative and scaled long time series",
    "section": "Dengue data",
    "text": "Dengue data\n\n# tdengue &lt;- readRDS(file = \"tdengue.rds\")\n\ndengue &lt;- arrow::open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases, cases_cum) %&gt;%\n    collect()"
  },
  {
    "objectID": "dengue-cluster/sdtw_long_cum_scaled.html#clustering-results",
    "href": "dengue-cluster/sdtw_long_cum_scaled.html#clustering-results",
    "title": "SDTW, cumulative and scaled long time series",
    "section": "Clustering results",
    "text": "Clustering results\n\ncluster_ids &lt;- readRDS(file = \"clust_sdtw_ids.rds\")"
  },
  {
    "objectID": "dengue-cluster/sdtw_long_cum_scaled.html#identify-municipalities",
    "href": "dengue-cluster/sdtw_long_cum_scaled.html#identify-municipalities",
    "title": "SDTW, cumulative and scaled long time series",
    "section": "Identify municipalities",
    "text": "Identify municipalities\n\ndengue &lt;- left_join(dengue, cluster_ids, by = \"mun\")"
  },
  {
    "objectID": "dengue-cluster/sdtw_long_cum_scaled.html#map-clusters",
    "href": "dengue-cluster/sdtw_long_cum_scaled.html#map-clusters",
    "title": "SDTW, cumulative and scaled long time series",
    "section": "Map clusters",
    "text": "Map clusters\n\nmun.shp &lt;- geobr::read_municipality(showProgress = FALSE)\n\nLoading required namespace: sf\n\n\nUsing year 2010\n\n\n\nmun.shp %&gt;%\n  mutate(code_muni = substr(code_muni, 0, 6)) %&gt;%\n  left_join(cluster_ids, by = c(\"code_muni\" = \"mun\")) %&gt;%\n  ggplot() +\n  geom_sf(aes(fill = group))"
  },
  {
    "objectID": "presentations.html",
    "href": "presentations.html",
    "title": "Overview",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n  \n\n\n\n\nSpecialized AI Models for Predicting Dengue Disease\n\n\n\n\n\n\n\n\n\n\n\n\nSaldanha, Raphael et al\n\n\n\n\n\n\n  \n\n\n\n\nSpecialized AI Models for Predicting Dengue Disease\n\n\n[Short version]\n\n\n\n\n\n\n\n\n\nRaphael Saldanha et al.\n\n\n\n\n\n\n  \n\n\n\n\nA trajectory on health data and information\n\n\n\n\n\n\n\n\n\n\n\n\nRaphael Saldanha\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_epi_year.html",
    "href": "dengue-cluster/cluster_mun_year_epi_year.html",
    "title": "Epi year time series",
    "section": "",
    "text": "This notebook aims to cluster the Brazilian municipalities by epidemiological yearly dengue cases time-series yearly (starting on September) by its similarities."
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_epi_year.html#packages",
    "href": "dengue-cluster/cluster_mun_year_epi_year.html#packages",
    "title": "Epi year time series",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_epi_year.html#load-data",
    "href": "dengue-cluster/cluster_mun_year_epi_year.html#load-data",
    "title": "Epi year time series",
    "section": "Load data",
    "text": "Load data\nLoad the aggregated data.\n\ndengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases = cases_raw) %&gt;%\n    collect()\n\ndim(dengue)\n\n[1] 340179      3\n\n\n\nPrepare data\nThe chunk bellow executes various steps to prepare the data for clustering.\n\ntdengue &lt;- dengue %&gt;%\n  # Create year variable\n  mutate(year = year(date)) %&gt;%\n  # Create week number\n  mutate(week = epiweek(date)) %&gt;%\n  # Summarise per year and isoweek\n  group_by(mun, year, week) %&gt;%\n  summarise(cases = sum(cases, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;%\n  # Center year on September\n  group_by(mun) %&gt;%\n  mutate(year = case_when(\n    week &lt; 40 ~ year -1,\n    .default = year\n  )) %&gt;%\n  ungroup() %&gt;% \n  # Scale cases\n  group_by(mun, year) %&gt;%\n  arrange(week) %&gt;%\n  mutate(cases = scale(cases)) %&gt;%\n  ungroup() %&gt;%\n  # Isolate municipality and year\n  mutate(mun = paste0(mun, \"_\", year)) %&gt;%\n  select(-year, week) %&gt;%\n  # Arrange data\n  arrange(mun, week) %&gt;%\n  # Prepare time series of municipalities by year\n  mutate(mun = paste0(\"m_\", mun)) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-week) %&gt;%\n  # Use zero value for years withot week 53\n  mutate(across(everything(), ~replace_na(.x, 0))) %&gt;%\n  # Transpose as matrix\n  t() %&gt;%\n  # Convert object\n  tslist()\n\n`summarise()` has grouped output by 'mun', 'year'. You can override using the\n`.groups` argument.\n\n\n\nlength(tdengue)\n\n[1] 6790"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_epi_year.html#clustering",
    "href": "dengue-cluster/cluster_mun_year_epi_year.html#clustering",
    "title": "Epi year time series",
    "section": "Clustering",
    "text": "Clustering\nSequence of k groups to be used.\n\nk_seq &lt;- 3:10\n\n\nSoft-DTW method\n\ntic()\nclust &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sdtw\",\n  seed = 13\n)\ntoc()\n\n225.712 sec elapsed\n\n\n\n\nCluster Validity Indices (CVI)\n\nnames(clust) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  kbl() %&gt;%\n  kable_styling()\n\n\n\n\nk\nSil\nSF\nCH\nDB\nDBstar\nD\nCOP\n\n\n\n\nk_3\n0.4236277\n0\n2999.3735\n1.168189\n1.168282\n-0.0057361\n0.2352750\n\n\nk_6\n0.3480234\n0\n1375.7026\n2.229967\n2.905979\n-0.0049021\n0.2231596\n\n\nk_5\n0.3460606\n0\n2007.4478\n1.560870\n1.705965\n-0.0049145\n0.1980175\n\n\nk_4\n0.3263641\n0\n1926.6526\n1.802736\n1.999546\n-0.0048282\n0.2468473\n\n\nk_10\n0.2904618\n0\n1508.5797\n1.866674\n2.426384\n-0.0066886\n0.1280983\n\n\nk_8\n0.1460479\n0\n974.4659\n2.134098\n3.911820\n-0.0076898\n0.2038406\n\n\nk_7\n0.1020749\n0\n1011.5053\n1.903904\n2.025179\n-0.0066451\n0.2378969\n\n\nk_9\n0.0409210\n0\n894.9294\n4.119276\n6.558124\n-0.0069325\n0.2179810\n\n\n\n\n\n\n\n\n\nCluster with higher Silhouette statistic\n\nsel_clust &lt;- clust[[res_cvi[[1,1]]]]\n\n\nplot(sel_clust)\n\n\n\n\n\nggsave(filename = \"cluster_mun_epiyear.pdf\")\n\nSaving 7 x 5 in image\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\nggsave(filename = \"cluster_mun_epiyear_centr.pdf\")\n\nSaving 7 x 5 in image\n\n\n\n\nCluster sizes\n\ntable(sel_clust@cluster)\n\n\n   1    2    3 \n 621 2123 4046"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_epi_year.html#session-info",
    "href": "dengue-cluster/cluster_mun_year_epi_year.html#session-info",
    "title": "Epi year time series",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] tictoc_1.2       kableExtra_1.3.4 dtwclust_5.5.12  dtw_1.23-1      \n [5] proxy_0.4-27     timetk_2.9.0     arrow_13.0.0.1   lubridate_1.9.3 \n [9] forcats_1.0.0    stringr_1.5.0    dplyr_1.1.3      purrr_1.0.2     \n[13] readr_2.1.4      tidyr_1.3.0      tibble_3.2.1     ggplot2_3.4.4   \n[17] tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rlang_1.1.2         magrittr_2.0.3      clue_0.3-65        \n  [4] furrr_0.3.1         flexclust_1.4-1     compiler_4.3.2     \n  [7] systemfonts_1.0.5   vctrs_0.6.4         reshape2_1.4.4     \n [10] rvest_1.0.3         lhs_1.1.6           tune_1.1.2         \n [13] pkgconfig_2.0.3     fastmap_1.1.1       ellipsis_0.3.2     \n [16] labeling_0.4.3      utf8_1.2.4          promises_1.2.1     \n [19] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n [22] ragg_1.2.6          bit_4.0.5           xfun_0.41          \n [25] modeltools_0.2-23   jsonlite_1.8.7      recipes_1.0.8      \n [28] highr_0.10          later_1.3.1         parallel_4.3.2     \n [31] cluster_2.1.4       R6_2.5.1            stringi_1.7.12     \n [34] rsample_1.2.0       parallelly_1.36.0   rpart_4.1.21       \n [37] Rcpp_1.0.11         assertthat_0.2.1    dials_1.2.0        \n [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.0\n [43] zoo_1.8-12          httpuv_1.6.12       Matrix_1.6-1.1     \n [46] splines_4.3.2       nnet_7.3-19         timechange_0.2.0   \n [49] tidyselect_1.2.0    rstudioapi_0.15.0   yaml_2.3.7         \n [52] timeDate_4022.108   codetools_0.2-19    listenv_0.9.0      \n [55] lattice_0.22-5      plyr_1.8.9          shiny_1.7.5.1      \n [58] withr_2.5.2         evaluate_0.23       future_1.33.0      \n [61] survival_3.5-7      RcppParallel_5.1.7  xml2_1.3.5         \n [64] xts_0.13.1          pillar_1.9.0        foreach_1.5.2      \n [67] stats4_4.3.2        shinyjs_2.1.0       generics_0.1.3     \n [70] hms_1.1.3           munsell_0.5.0       scales_1.2.1       \n [73] xtable_1.8-4        globals_0.16.2      class_7.3-22       \n [76] glue_1.6.2          tools_4.3.2         data.table_1.14.8  \n [79] RSpectra_0.16-1     webshot_0.5.5       gower_1.0.1        \n [82] grid_4.3.2          yardstick_1.2.0     ipred_0.9-14       \n [85] colorspace_2.1-0    cli_3.6.1           DiceDesign_1.9     \n [88] textshaping_0.3.7   workflows_1.1.3     parsnip_1.1.1      \n [91] fansi_1.0.5         viridisLite_0.4.2   svglite_2.1.2      \n [94] lava_1.7.3          gtable_0.3.4        GPfit_1.0-8        \n [97] digest_0.6.33       ggrepel_0.9.4       farver_2.1.1       \n[100] htmlwidgets_1.6.2   htmltools_0.5.7     lifecycle_1.0.4    \n[103] httr_1.4.7          hardhat_1.3.0       mime_0.12          \n[106] bit64_4.0.5         MASS_7.3-60"
  },
  {
    "objectID": "dengue-cluster/cluster_long.html",
    "href": "dengue-cluster/cluster_long.html",
    "title": "Raw cases",
    "section": "",
    "text": "This notebook aims to cluster the Brazilian municipalities considering dengue raw cases time-series similarities."
  },
  {
    "objectID": "dengue-cluster/cluster_long.html#packages",
    "href": "dengue-cluster/cluster_long.html#packages",
    "title": "Raw cases",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_long.html#load-data",
    "href": "dengue-cluster/cluster_long.html#load-data",
    "title": "Raw cases",
    "section": "Load data",
    "text": "Load data\nLoad the bundled data.\n\ntdengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases = cases_raw) %&gt;%\n    collect()\n\ndim(tdengue)\n\n[1] 340179      3\n\n\n\nPrepare data\nThe chunk bellow formats the dataset for tsclust use.\n\ntdengue &lt;- tdengue %&gt;%\n  # Prepare time series\n  arrange(mun) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-date) %&gt;%\n  t() %&gt;%\n  # Convert object\n  tslist()\n\n\nlength(tdengue)\n\n[1] 679"
  },
  {
    "objectID": "dengue-cluster/cluster_long.html#clustering",
    "href": "dengue-cluster/cluster_long.html#clustering",
    "title": "Raw cases",
    "section": "Clustering",
    "text": "Clustering\nSequence of k groups to be used.\n\nk_seq &lt;- 2:10\n\n\nSBD method\n\ntic()\nclust &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sbd\",\n  seed = 13\n)\ntoc()\n\n0.816 sec elapsed\n\n\n\n\nCluster Validity Indices (CVI)\n\nnames(clust) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  kbl() %&gt;%\n  kable_styling()\n\n\n\n\nk\nSil\nSF\nCH\nDB\nDBstar\nD\nCOP\n\n\n\n\nk_2\n0.1923246\n0.4335276\n105.89969\n3.495106\n3.495106\n0.0475895\n0.3749125\n\n\nk_6\n0.1613954\n0.1418601\n42.69029\n3.539215\n3.955084\n0.0557119\n0.3521767\n\n\nk_5\n0.1300802\n0.2013896\n70.46372\n2.731617\n3.777455\n0.0564743\n0.3400697\n\n\nk_10\n0.0921187\n0.0444082\n49.64036\n2.799473\n4.241962\n0.0507359\n0.3159727\n\n\nk_3\n0.0897801\n0.3139459\n37.06136\n6.461761\n7.845973\n0.0213696\n0.3667538\n\n\nk_9\n0.0563141\n0.0602460\n55.09867\n2.170914\n3.178624\n0.0165679\n0.3179895\n\n\nk_4\n0.0432238\n0.2879537\n96.18451\n4.350614\n4.857858\n0.0171542\n0.3501107\n\n\nk_8\n0.0376603\n0.0896397\n48.19501\n3.360877\n4.869244\n0.0173139\n0.3257173\n\n\nk_7\n0.0355374\n0.1130121\n70.16402\n2.846658\n4.211674\n0.0213217\n0.3251809\n\n\n\n\n\n\n\n\n\nCluster with higher Silhouette statistic\n\nsel_clust &lt;- clust[[res_cvi[[1,1]]]]\n\n\nplot(sel_clust)\n\n\n\n\n\nggsave(filename = \"cluster_long.pdf\")\n\nSaving 7 x 5 in image\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\n\nCluster sizes\n\ntable(sel_clust@cluster)\n\n\n  1   2 \n511 168"
  },
  {
    "objectID": "dengue-cluster/cluster_long.html#session-info",
    "href": "dengue-cluster/cluster_long.html#session-info",
    "title": "Raw cases",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] tictoc_1.2       kableExtra_1.3.4 dtwclust_5.5.12  dtw_1.23-1      \n [5] proxy_0.4-27     timetk_2.9.0     arrow_13.0.0.1   lubridate_1.9.3 \n [9] forcats_1.0.0    stringr_1.5.0    dplyr_1.1.3      purrr_1.0.2     \n[13] readr_2.1.4      tidyr_1.3.0      tibble_3.2.1     ggplot2_3.4.4   \n[17] tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rlang_1.1.2         magrittr_2.0.3      clue_0.3-65        \n  [4] furrr_0.3.1         flexclust_1.4-1     compiler_4.3.2     \n  [7] systemfonts_1.0.5   vctrs_0.6.4         reshape2_1.4.4     \n [10] rvest_1.0.3         lhs_1.1.6           tune_1.1.2         \n [13] pkgconfig_2.0.3     fastmap_1.1.1       ellipsis_0.3.2     \n [16] labeling_0.4.3      utf8_1.2.4          promises_1.2.1     \n [19] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n [22] ragg_1.2.6          bit_4.0.5           xfun_0.41          \n [25] modeltools_0.2-23   jsonlite_1.8.7      recipes_1.0.8      \n [28] highr_0.10          later_1.3.1         parallel_4.3.2     \n [31] cluster_2.1.4       R6_2.5.1            stringi_1.7.12     \n [34] rsample_1.2.0       parallelly_1.36.0   rpart_4.1.21       \n [37] Rcpp_1.0.11         assertthat_0.2.1    dials_1.2.0        \n [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.0\n [43] zoo_1.8-12          httpuv_1.6.12       Matrix_1.6-1.1     \n [46] splines_4.3.2       nnet_7.3-19         timechange_0.2.0   \n [49] tidyselect_1.2.0    rstudioapi_0.15.0   yaml_2.3.7         \n [52] timeDate_4022.108   codetools_0.2-19    listenv_0.9.0      \n [55] lattice_0.22-5      plyr_1.8.9          shiny_1.7.5.1      \n [58] withr_2.5.2         evaluate_0.23       future_1.33.0      \n [61] survival_3.5-7      RcppParallel_5.1.7  xml2_1.3.5         \n [64] xts_0.13.1          pillar_1.9.0        foreach_1.5.2      \n [67] stats4_4.3.2        shinyjs_2.1.0       generics_0.1.3     \n [70] hms_1.1.3           munsell_0.5.0       scales_1.2.1       \n [73] xtable_1.8-4        globals_0.16.2      class_7.3-22       \n [76] glue_1.6.2          tools_4.3.2         data.table_1.14.8  \n [79] RSpectra_0.16-1     webshot_0.5.5       gower_1.0.1        \n [82] grid_4.3.2          yardstick_1.2.0     ipred_0.9-14       \n [85] colorspace_2.1-0    cli_3.6.1           DiceDesign_1.9     \n [88] textshaping_0.3.7   workflows_1.1.3     parsnip_1.1.1      \n [91] fansi_1.0.5         viridisLite_0.4.2   svglite_2.1.2      \n [94] lava_1.7.3          gtable_0.3.4        GPfit_1.0-8        \n [97] digest_0.6.33       ggrepel_0.9.4       farver_2.1.1       \n[100] htmlwidgets_1.6.2   htmltools_0.5.7     lifecycle_1.0.4    \n[103] httr_1.4.7          hardhat_1.3.0       mime_0.12          \n[106] bit64_4.0.5         MASS_7.3-60"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_cumulative.html",
    "href": "dengue-cluster/cluster_mun_year_cumulative.html",
    "title": "Cumulative time series",
    "section": "",
    "text": "This notebook aims to cluster the Brazilian municipalities cumulative yearly dengue cases time-series yearly by its similarities."
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_cumulative.html#packages",
    "href": "dengue-cluster/cluster_mun_year_cumulative.html#packages",
    "title": "Cumulative time series",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_cumulative.html#load-data",
    "href": "dengue-cluster/cluster_mun_year_cumulative.html#load-data",
    "title": "Cumulative time series",
    "section": "Load data",
    "text": "Load data\nLoad the bundled data.\n\ndengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases = cases_raw) %&gt;%\n    collect()\n\ndim(dengue)\n\n[1] 340179      3\n\n\n\nPrepare data\nThe chunk bellow executes various steps to prepare the data for clustering.\n\ntdengue &lt;- dengue %&gt;%\n  # Remove dates\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2020-01-01\")) %&gt;%\n  # Create year variable\n  mutate(year = year(date)) %&gt;%\n  # Create week number\n  mutate(week = epiweek(date)) %&gt;%\n  # Summarise per year and isoweek\n  group_by(mun, year, week) %&gt;%\n  summarise(cases = sum(cases, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;%\n  # Accumulate mun time series by year\n  group_by(mun, year) %&gt;%\n  arrange(week) %&gt;%\n  mutate(cases = cumsum(cases)) %&gt;%\n  # Scale cases\n  mutate(cases = scale(cases)) %&gt;%\n  ungroup() %&gt;%\n  # Isolate municipality and year\n  mutate(mun = paste0(mun, \"_\", year)) %&gt;%\n  select(-year, week) %&gt;%\n  # Arrange data\n  arrange(mun, week) %&gt;%\n  # Prepare time series of municipalities by year\n  mutate(mun = paste0(\"m_\", mun)) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-week) %&gt;%\n  # Use zero value for years withot week 53\n  mutate(across(everything(), ~replace_na(.x, 0))) %&gt;%\n  # Transpose as matrix\n  t() %&gt;%\n  # Convert object\n  tslist()\n\n`summarise()` has grouped output by 'mun', 'year'. You can override using the\n`.groups` argument.\n\n\n\nlength(tdengue)\n\n[1] 6111"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_cumulative.html#clustering",
    "href": "dengue-cluster/cluster_mun_year_cumulative.html#clustering",
    "title": "Cumulative time series",
    "section": "Clustering",
    "text": "Clustering\nSequence of k groups to be used.\n\nk_seq &lt;- 3:10\n\n\nSoft-DTW method\n\ntic()\nclust &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sdtw\",\n  seed = 13\n)\ntoc()\n\n175.188 sec elapsed\n\n\n\n\nCluster Validity Indices (CVI)\n\nnames(clust) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  kbl() %&gt;%\n  kable_styling()\n\n\n\n\nk\nSil\nSF\nCH\nDB\nDBstar\nD\nCOP\n\n\n\n\nk_4\n0.4996424\n0.0001998\n5053.8781\n0.813116\n1.034655\n-0.0071101\n0.0244607\n\n\nk_3\n0.4118566\n0.0000000\n859.9048\n2.505068\n3.417155\n-0.0070377\n0.1095122\n\n\nk_9\n0.3971539\n0.0000042\n4229.2449\n1.415377\n5.666647\n-0.0069788\n0.0123762\n\n\nk_10\n0.3930305\n0.0000002\n4035.8058\n1.212292\n6.342339\n-0.0077680\n0.0109508\n\n\nk_7\n0.3599889\n0.0000153\n4452.3025\n1.448889\n5.467205\n-0.0075078\n0.0151751\n\n\nk_5\n0.3430675\n0.0000000\n549.0199\n3.757548\n11.951407\n-0.0075078\n0.0968742\n\n\nk_8\n0.3184463\n0.0000000\n3924.2207\n2.307808\n9.657683\n-0.0075078\n0.0145123\n\n\nk_6\n0.3170633\n0.0000108\n4379.2283\n3.268082\n9.255333\n-0.0074597\n0.0175612\n\n\n\n\n\n\n\n\n\nCluster with higher Silhouette statistic\n\nsel_clust &lt;- clust[[res_cvi[[1,1]]]]\n\n\nplot(sel_clust)\n\n\n\n\n\nggsave(filename = \"cluster_mun_year_cum.pdf\")\n\nSaving 7 x 5 in image\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\nggsave(filename = \"cluster_mun_year_cum_centr.pdf\")\n\nSaving 7 x 5 in image\n\n\n\n\nCluster sizes\n\ntable(sel_clust@cluster)\n\n\n   1    2    3    4 \n1280  989 3341  501"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year_cumulative.html#session-info",
    "href": "dengue-cluster/cluster_mun_year_cumulative.html#session-info",
    "title": "Cumulative time series",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] tictoc_1.2       kableExtra_1.3.4 dtwclust_5.5.12  dtw_1.23-1      \n [5] proxy_0.4-27     timetk_2.9.0     arrow_13.0.0.1   lubridate_1.9.3 \n [9] forcats_1.0.0    stringr_1.5.0    dplyr_1.1.3      purrr_1.0.2     \n[13] readr_2.1.4      tidyr_1.3.0      tibble_3.2.1     ggplot2_3.4.4   \n[17] tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rlang_1.1.2         magrittr_2.0.3      clue_0.3-65        \n  [4] furrr_0.3.1         flexclust_1.4-1     compiler_4.3.2     \n  [7] systemfonts_1.0.5   vctrs_0.6.4         reshape2_1.4.4     \n [10] rvest_1.0.3         lhs_1.1.6           tune_1.1.2         \n [13] pkgconfig_2.0.3     fastmap_1.1.1       ellipsis_0.3.2     \n [16] labeling_0.4.3      utf8_1.2.4          promises_1.2.1     \n [19] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n [22] ragg_1.2.6          bit_4.0.5           xfun_0.41          \n [25] modeltools_0.2-23   jsonlite_1.8.7      recipes_1.0.8      \n [28] highr_0.10          later_1.3.1         parallel_4.3.2     \n [31] cluster_2.1.4       R6_2.5.1            stringi_1.7.12     \n [34] rsample_1.2.0       parallelly_1.36.0   rpart_4.1.21       \n [37] Rcpp_1.0.11         assertthat_0.2.1    dials_1.2.0        \n [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.0\n [43] zoo_1.8-12          httpuv_1.6.12       Matrix_1.6-1.1     \n [46] splines_4.3.2       nnet_7.3-19         timechange_0.2.0   \n [49] tidyselect_1.2.0    rstudioapi_0.15.0   yaml_2.3.7         \n [52] timeDate_4022.108   codetools_0.2-19    listenv_0.9.0      \n [55] lattice_0.22-5      plyr_1.8.9          shiny_1.7.5.1      \n [58] withr_2.5.2         evaluate_0.23       future_1.33.0      \n [61] survival_3.5-7      RcppParallel_5.1.7  xml2_1.3.5         \n [64] xts_0.13.1          pillar_1.9.0        foreach_1.5.2      \n [67] stats4_4.3.2        shinyjs_2.1.0       generics_0.1.3     \n [70] hms_1.1.3           munsell_0.5.0       scales_1.2.1       \n [73] xtable_1.8-4        globals_0.16.2      class_7.3-22       \n [76] glue_1.6.2          tools_4.3.2         data.table_1.14.8  \n [79] RSpectra_0.16-1     webshot_0.5.5       gower_1.0.1        \n [82] grid_4.3.2          yardstick_1.2.0     ipred_0.9-14       \n [85] colorspace_2.1-0    cli_3.6.1           DiceDesign_1.9     \n [88] textshaping_0.3.7   workflows_1.1.3     parsnip_1.1.1      \n [91] fansi_1.0.5         viridisLite_0.4.2   svglite_2.1.2      \n [94] lava_1.7.3          gtable_0.3.4        GPfit_1.0-8        \n [97] digest_0.6.33       ggrepel_0.9.4       farver_2.1.1       \n[100] htmlwidgets_1.6.2   htmltools_0.5.7     lifecycle_1.0.4    \n[103] httr_1.4.7          hardhat_1.3.0       mime_0.12          \n[106] bit64_4.0.5         MASS_7.3-60"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year.html",
    "href": "dengue-cluster/cluster_mun_year.html",
    "title": "Yearly time series",
    "section": "",
    "text": "This notebook aims to cluster the Brazilian municipalities considering yearly dengue cases time-series similarities."
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year.html#packages",
    "href": "dengue-cluster/cluster_mun_year.html#packages",
    "title": "Yearly time series",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year.html#load-data",
    "href": "dengue-cluster/cluster_mun_year.html#load-data",
    "title": "Yearly time series",
    "section": "Load data",
    "text": "Load data\nLoad the bundled data.\n\ndengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases = cases_raw) %&gt;%\n    collect()\n\ndim(dengue)\n\n[1] 340179      3\n\n\n\nPrepare data\nThe chunk bellow executes various steps to prepare the data for clustering.\n\ntdengue &lt;- dengue %&gt;%\n  # Remove dates\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2020-01-01\")) %&gt;%\n  # Create year variable\n  mutate(year = year(date)) %&gt;%\n  # Create week number\n  mutate(week = epiweek(date)) %&gt;%\n  # Summarise per year and isoweek\n  group_by(mun, year, week) %&gt;%\n  summarise(cases = sum(cases, na.rm = TRUE)) %&gt;%\n  # Scale cases\n  mutate(cases = scale(cases)) %&gt;%\n  ungroup() %&gt;%\n  # Isolate municipality and year\n  mutate(mun = paste0(mun, \"_\", year)) %&gt;%\n  select(-year, week) %&gt;%\n  # Arrange data\n  arrange(mun, week) %&gt;%\n  # Prepare time series of municipalities by year\n  mutate(mun = paste0(\"m_\", mun)) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-week) %&gt;%\n  # Use zero value for years withot week 53\n  mutate(across(everything(), ~replace_na(.x, 0))) %&gt;%\n  # Transpose as matrix\n  t() %&gt;%\n  # Convert object\n  tslist()\n\n`summarise()` has grouped output by 'mun', 'year'. You can override using the\n`.groups` argument.\n\n\n\nlength(tdengue)\n\n[1] 6111"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year.html#clustering",
    "href": "dengue-cluster/cluster_mun_year.html#clustering",
    "title": "Yearly time series",
    "section": "Clustering",
    "text": "Clustering\nSequence of k groups to be used.\n\nk_seq &lt;- 3:10\n\n\nSoft-DTW method\n\ntic()\nclust &lt;- tsclust(\n  series = tdengue, \n  type = \"partitional\", \n  k = k_seq,\n  distance = \"sdtw\",\n  seed = 12\n)\ntoc()\n\n186.312 sec elapsed\n\n\n\n\nCluster Validity Indices (CVI)\n\nnames(clust) &lt;- paste0(\"k_\", k_seq)\nres_cvi &lt;- sapply(clust, cvi, type = \"internal\") %&gt;% \n  t() %&gt;%\n  as_tibble(rownames = \"k\") %&gt;%\n  arrange(-Sil)\n\nres_cvi %&gt;%\n  kbl() %&gt;%\n  kable_styling()\n\n\n\n\nk\nSil\nSF\nCH\nDB\nDBstar\nD\nCOP\n\n\n\n\nk_7\n0.3042978\n0\n1498.9650\n1.643061\n2.034144\n-0.0090704\n0.1154715\n\n\nk_5\n0.3009208\n0\n1828.2539\n1.510974\n2.111730\n-0.0046130\n0.2050362\n\n\nk_3\n0.3000788\n0\n2147.2455\n1.141345\n1.363098\n-0.0037204\n0.2592231\n\n\nk_6\n0.2851064\n0\n1873.0643\n1.799201\n2.168677\n-0.0044977\n0.1324393\n\n\nk_8\n0.2586174\n0\n1636.1817\n2.149713\n3.552313\n-0.0065691\n0.1022790\n\n\nk_9\n0.2489799\n0\n958.2712\n3.232229\n3.805038\n-0.0057935\n0.1829836\n\n\nk_10\n0.2028457\n0\n1416.5421\n2.552099\n4.802588\n-0.0078132\n0.0904757\n\n\nk_4\n0.1600588\n0\n1613.0683\n2.871479\n4.394944\n-0.0054940\n0.2373967\n\n\n\n\n\n\n\n\n\nCluster with higher Silhouette statistic\n\nsel_clust &lt;- clust[[res_cvi[[1,1]]]]\n\n\nplot(sel_clust)\n\n\n\n\n\nggsave(filename = \"cluster_mun_year.pdf\")\n\nSaving 7 x 5 in image\n\n\n\nplot(sel_clust, type = \"centroids\", lty = 1)\n\n\n\n\n\nggsave(filename = \"cluster_mun_year_centr.pdf\")\n\nSaving 7 x 5 in image\n\n\n\n\nCluster sizes\n\ntable(sel_clust@cluster)\n\n\n   1    2    3    4    5    6    7 \n2008  895  551 1227  587  466  377"
  },
  {
    "objectID": "dengue-cluster/cluster_mun_year.html#session-info",
    "href": "dengue-cluster/cluster_mun_year.html#session-info",
    "title": "Yearly time series",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] tictoc_1.2       kableExtra_1.3.4 dtwclust_5.5.12  dtw_1.23-1      \n [5] proxy_0.4-27     timetk_2.9.0     arrow_13.0.0.1   lubridate_1.9.3 \n [9] forcats_1.0.0    stringr_1.5.0    dplyr_1.1.3      purrr_1.0.2     \n[13] readr_2.1.4      tidyr_1.3.0      tibble_3.2.1     ggplot2_3.4.4   \n[17] tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rlang_1.1.2         magrittr_2.0.3      clue_0.3-65        \n  [4] furrr_0.3.1         flexclust_1.4-1     compiler_4.3.2     \n  [7] systemfonts_1.0.5   vctrs_0.6.4         reshape2_1.4.4     \n [10] rvest_1.0.3         lhs_1.1.6           tune_1.1.2         \n [13] pkgconfig_2.0.3     fastmap_1.1.1       ellipsis_0.3.2     \n [16] labeling_0.4.3      utf8_1.2.4          promises_1.2.1     \n [19] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n [22] ragg_1.2.6          bit_4.0.5           xfun_0.41          \n [25] modeltools_0.2-23   jsonlite_1.8.7      recipes_1.0.8      \n [28] highr_0.10          later_1.3.1         parallel_4.3.2     \n [31] cluster_2.1.4       R6_2.5.1            stringi_1.7.12     \n [34] rsample_1.2.0       parallelly_1.36.0   rpart_4.1.21       \n [37] Rcpp_1.0.11         assertthat_0.2.1    dials_1.2.0        \n [40] iterators_1.0.14    knitr_1.45          future.apply_1.11.0\n [43] zoo_1.8-12          httpuv_1.6.12       Matrix_1.6-1.1     \n [46] splines_4.3.2       nnet_7.3-19         timechange_0.2.0   \n [49] tidyselect_1.2.0    rstudioapi_0.15.0   yaml_2.3.7         \n [52] timeDate_4022.108   codetools_0.2-19    listenv_0.9.0      \n [55] lattice_0.22-5      plyr_1.8.9          shiny_1.7.5.1      \n [58] withr_2.5.2         evaluate_0.23       future_1.33.0      \n [61] survival_3.5-7      RcppParallel_5.1.7  xml2_1.3.5         \n [64] xts_0.13.1          pillar_1.9.0        foreach_1.5.2      \n [67] stats4_4.3.2        shinyjs_2.1.0       generics_0.1.3     \n [70] hms_1.1.3           munsell_0.5.0       scales_1.2.1       \n [73] xtable_1.8-4        globals_0.16.2      class_7.3-22       \n [76] glue_1.6.2          tools_4.3.2         data.table_1.14.8  \n [79] RSpectra_0.16-1     webshot_0.5.5       gower_1.0.1        \n [82] grid_4.3.2          yardstick_1.2.0     ipred_0.9-14       \n [85] colorspace_2.1-0    cli_3.6.1           DiceDesign_1.9     \n [88] textshaping_0.3.7   workflows_1.1.3     parsnip_1.1.1      \n [91] fansi_1.0.5         viridisLite_0.4.2   svglite_2.1.2      \n [94] lava_1.7.3          gtable_0.3.4        GPfit_1.0-8        \n [97] digest_0.6.33       ggrepel_0.9.4       farver_2.1.1       \n[100] htmlwidgets_1.6.2   htmltools_0.5.7     lifecycle_1.0.4    \n[103] httr_1.4.7          hardhat_1.3.0       mime_0.12          \n[106] bit64_4.0.5         MASS_7.3-60"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled_hier.html",
    "href": "dengue-cluster/cluster_long_scaled_hier.html",
    "title": "Hierarchical clustering",
    "section": "",
    "text": "This notebooks aims to explore hierarchical clustering of municipalities considering scaled dengue cases time series."
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled_hier.html#packages",
    "href": "dengue-cluster/cluster_long_scaled_hier.html#packages",
    "title": "Hierarchical clustering",
    "section": "Packages",
    "text": "Packages\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(dtwclust)\nlibrary(kableExtra)\nlibrary(tictoc)\nsource(\"../functions.R\")"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled_hier.html#load-data",
    "href": "dengue-cluster/cluster_long_scaled_hier.html#load-data",
    "title": "Hierarchical clustering",
    "section": "Load data",
    "text": "Load data\nLoad the bundled data (326 municipalities, pop \\(\\geq\\) 100k inhab.) with standardized cases and keep only the municipality code, date and cases variables.\n\ntdengue &lt;- open_dataset(sources = data_dir(\"bundled_data/tdengue.parquet\")) %&gt;%\n    select(mun, date, cases) %&gt;%\n    collect()"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled_hier.html#prepare-data",
    "href": "dengue-cluster/cluster_long_scaled_hier.html#prepare-data",
    "title": "Hierarchical clustering",
    "section": "Prepare data",
    "text": "Prepare data\n\ntdengue &lt;- tdengue %&gt;%\n  mutate(mun = paste0(\"m_\", mun)) %&gt;%\n  arrange(mun, date) %&gt;%\n  pivot_wider(names_from = mun, values_from = cases) %&gt;%\n  select(-date) %&gt;%\n  t() %&gt;%\n  tslist()"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled_hier.html#clustering",
    "href": "dengue-cluster/cluster_long_scaled_hier.html#clustering",
    "title": "Hierarchical clustering",
    "section": "Clustering",
    "text": "Clustering\n\ntic()\nclust &lt;- tsclust(\n  series = tdengue, \n  type = \"hierarchical\", \n  k = 5,\n  distance = \"dtw_basic\",\n  seed = 123,\n  control = hierarchical_control(method = \"average\")\n)\ntoc()\n\n44.964 sec elapsed\n\n\n\nggdendro::ggdendrogram(clust, size = .3, labels = F)"
  },
  {
    "objectID": "dengue-cluster/cluster_long_scaled_hier.html#session-info",
    "href": "dengue-cluster/cluster_long_scaled_hier.html#session-info",
    "title": "Hierarchical clustering",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.3.2 (2023-10-31)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.3 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0 \nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nRandom number generation:\n RNG:     L'Ecuyer-CMRG \n Normal:  Inversion \n Sample:  Rejection \n \nlocale:\n [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_CA.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_CA.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_CA.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_CA.UTF-8 LC_IDENTIFICATION=C       \n\ntime zone: Europe/Paris\ntzcode source: system (glibc)\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] tictoc_1.2       kableExtra_1.3.4 dtwclust_5.5.12  dtw_1.23-1      \n [5] proxy_0.4-27     timetk_2.9.0     arrow_13.0.0.1   lubridate_1.9.3 \n [9] forcats_1.0.0    stringr_1.5.0    dplyr_1.1.3      purrr_1.0.2     \n[13] readr_2.1.4      tidyr_1.3.0      tibble_3.2.1     ggplot2_3.4.4   \n[17] tidyverse_2.0.0 \n\nloaded via a namespace (and not attached):\n  [1] rlang_1.1.2         magrittr_2.0.3      clue_0.3-65        \n  [4] furrr_0.3.1         flexclust_1.4-1     compiler_4.3.2     \n  [7] systemfonts_1.0.5   vctrs_0.6.4         reshape2_1.4.4     \n [10] rvest_1.0.3         lhs_1.1.6           tune_1.1.2         \n [13] pkgconfig_2.0.3     fastmap_1.1.1       ellipsis_0.3.2     \n [16] labeling_0.4.3      utf8_1.2.4          promises_1.2.1     \n [19] rmarkdown_2.25      prodlim_2023.08.28  tzdb_0.4.0         \n [22] bit_4.0.5           xfun_0.41           modeltools_0.2-23  \n [25] jsonlite_1.8.7      recipes_1.0.8       later_1.3.1        \n [28] parallel_4.3.2      cluster_2.1.4       R6_2.5.1           \n [31] stringi_1.7.12      rsample_1.2.0       parallelly_1.36.0  \n [34] rpart_4.1.21        Rcpp_1.0.11         assertthat_0.2.1   \n [37] dials_1.2.0         iterators_1.0.14    knitr_1.45         \n [40] future.apply_1.11.0 zoo_1.8-12          httpuv_1.6.12      \n [43] Matrix_1.6-1.1      splines_4.3.2       nnet_7.3-19        \n [46] timechange_0.2.0    tidyselect_1.2.0    rstudioapi_0.15.0  \n [49] yaml_2.3.7          timeDate_4022.108   codetools_0.2-19   \n [52] listenv_0.9.0       lattice_0.22-5      plyr_1.8.9         \n [55] shiny_1.7.5.1       withr_2.5.2         evaluate_0.23      \n [58] future_1.33.0       survival_3.5-7      RcppParallel_5.1.7 \n [61] xml2_1.3.5          xts_0.13.1          pillar_1.9.0       \n [64] foreach_1.5.2       stats4_4.3.2        shinyjs_2.1.0      \n [67] generics_0.1.3      hms_1.1.3           munsell_0.5.0      \n [70] scales_1.2.1        xtable_1.8-4        globals_0.16.2     \n [73] class_7.3-22        glue_1.6.2          tools_4.3.2        \n [76] data.table_1.14.8   RSpectra_0.16-1     webshot_0.5.5      \n [79] gower_1.0.1         grid_4.3.2          yardstick_1.2.0    \n [82] ipred_0.9-14        colorspace_2.1-0    cli_3.6.1          \n [85] DiceDesign_1.9      workflows_1.1.3     parsnip_1.1.1      \n [88] fansi_1.0.5         viridisLite_0.4.2   ggdendro_0.1.23    \n [91] svglite_2.1.2       lava_1.7.3          gtable_0.3.4       \n [94] GPfit_1.0-8         digest_0.6.33       ggrepel_0.9.4      \n [97] farver_2.1.1        htmlwidgets_1.6.2   htmltools_0.5.7    \n[100] lifecycle_1.0.4     httr_1.4.7          hardhat_1.3.0      \n[103] mime_0.12           bit64_4.0.5         MASS_7.3-60"
  },
  {
    "objectID": "dengue_model.html",
    "href": "dengue_model.html",
    "title": "Overview",
    "section": "",
    "text": "In this section there are notebooks for dengue modelling.\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n\n\n\n\n  \n\n\n\n\nSBD clustering\n\n\n\n\n\n\n\n\n\n\n\n\nNovember 8, 2023 | 09:04:57 +01:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nGlobal and subset models workflow\n\n\n\n\n\n\n\n\n\n\n\n\nJuly 18, 2023 | 12:02:25 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nTime series features clustering\n\n\n\n\n\n\n\n\n\n\n\n\nJuly 18, 2023 | 10:51:41 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nTime series features clustering, with robust sparse k-means\n\n\n\n\n\n\n\n\n\n\n\n\nJuly 13, 2023 | 15:50:22 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nDengue case classification\n\n\nby symptoms and clinical condition\n\n\n\n\n\n\n\n\n\nJuly 11, 2023 | 15:09:47 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nRegression task\n\n\n\n\n\n\n\n\n\n\n\n\nJuly 4, 2023 | 14:34:58 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\n  \n\n\n\n\nClassification task\n\n\n\n\n\n\n\n\n\n\n\n\nJuly 4, 2023 | 14:32:43 +02:00\n\n\nRaphael Saldanha\n\n\n\n\n\n\nNo matching items\n\n Back to top"
  },
  {
    "objectID": "dengue-cluster/sdtw_long_cum_scaled.html#cluster-time-series-plot",
    "href": "dengue-cluster/sdtw_long_cum_scaled.html#cluster-time-series-plot",
    "title": "SDTW, cumulative and scaled long time series",
    "section": "Cluster time series plot",
    "text": "Cluster time series plot\n\nggplot(data = dengue, aes(x = date, y = cases, color = mun)) +\n  geom_line(alpha = .3) +\n  facet_wrap(~group) +\n  theme_bw() +\n  theme(legend.position = \"none\")\n\n\n\n\n\nggplot(data = dengue, aes(x = date, y = cases_cum, color = mun)) +\n  geom_line(alpha = .3) +\n  facet_wrap(~group) +\n  theme_bw() +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "export-data/exported_data.html",
    "href": "export-data/exported_data.html",
    "title": "Exported data",
    "section": "",
    "text": "library(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(brpop)\nlibrary(piggyback)"
  },
  {
    "objectID": "export-data/exported_data.html#packages",
    "href": "export-data/exported_data.html#packages",
    "title": "Exported data",
    "section": "",
    "text": "library(tidyverse)\nlibrary(lubridate)\nlibrary(arrow)\nlibrary(timetk)\nlibrary(brpop)\nlibrary(piggyback)"
  },
  {
    "objectID": "export-data/exported_data.html#dengue-data",
    "href": "export-data/exported_data.html#dengue-data",
    "title": "Exported data",
    "section": "Dengue data",
    "text": "Dengue data\nTotal number of confirmed dengue cases, aggregated per municipality of residence and week of the first symptom’s onset.\n\ndengue &lt;- read_parquet(\"../dengue-data/parquet_aggregated/dengue_md.parquet\") %&gt;%\n  group_by(mun) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"week\", freq = sum(freq, na.rm = TRUE)) %&gt;%\n  ungroup() %&gt;%\n  rename(cases = freq)"
  },
  {
    "objectID": "export-data/exported_data.html#population",
    "href": "export-data/exported_data.html#population",
    "title": "Exported data",
    "section": "Population",
    "text": "Population\nEstimated municipality population per year.\n\npop &lt;- mun_pop_totals() %&gt;%\n  filter(year %in% seq(year(min(dengue$date)), year(max(dengue$date)))) %&gt;%\n  mutate(mun = as.character(mun))"
  },
  {
    "objectID": "export-data/exported_data.html#human-development-index",
    "href": "export-data/exported_data.html#human-development-index",
    "title": "Exported data",
    "section": "Human Development Index",
    "text": "Human Development Index\n\nhdi &lt;- read_parquet(\"../socioeconomic-data/hdi.parquet\") %&gt;%\n  select(code_muni, hdi2010 = idhm2010)"
  },
  {
    "objectID": "export-data/exported_data.html#weather-data",
    "href": "export-data/exported_data.html#weather-data",
    "title": "Exported data",
    "section": "Weather data",
    "text": "Weather data\nWeather indicators estimated by using zonal statistics of the territorial area of the municipality.\n\nPrecipitation\nTotal estimated precipitation, per municipality and week, in millimeter.\n\nprec &lt;- open_dataset(sources = \"../weather-data/parquet/brdwgd/pr.parquet\") %&gt;%\n  filter(name == \"pr_sum\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue$date) & date &lt;= max(dengue$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"week\", value = sum(value, na.rm = TRUE)) %&gt;%\n  rename(prec = value)\n\n\n\nAverage maximun temperature\nAverage of maximum temperatures, per municipality and week, in celsius.\n\ntmax &lt;- open_dataset(sources = \"../weather-data/parquet/brdwgd/tmax.parquet\") %&gt;%\n  filter(name == \"Tmax_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue$date) & date &lt;= max(dengue$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"week\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(tmax = value)\n\n\n\nAverage minimum temperature\nAverage of minimum temperatures, per municipality and week, in celsius.\n\ntmin &lt;- open_dataset(sources = \"../weather-data/parquet/brdwgd/tmin.parquet\") %&gt;%\n  filter(name == \"Tmin_mean\") %&gt;%\n  select(date, value) %&gt;%\n  collect() %&gt;%\n  filter(date &gt;= min(dengue$date) & date &lt;= max(dengue$date)) %&gt;%\n  summarise_by_time(.date_var = date, .by = \"week\", value = mean(value, na.rm = TRUE)) %&gt;%\n  rename(tmin = value)"
  },
  {
    "objectID": "export-data/exported_data.html#join-data",
    "href": "export-data/exported_data.html#join-data",
    "title": "Exported data",
    "section": "Join data",
    "text": "Join data\n\nexp_data &lt;- dengue %&gt;%\n  mutate(dengue_year = year(date)) %&gt;%\n  inner_join(pop, by = c(\"dengue_year\" = \"year\", \"mun\")) %&gt;%\n  select(-dengue_year) %&gt;%\n  inner_join(hdi, by = c(\"mun\" = \"code_muni\")) %&gt;%\n  inner_join(prec, by = \"date\") %&gt;%\n  inner_join(tmax, by = \"date\") %&gt;%\n  inner_join(tmin, by = \"date\")"
  },
  {
    "objectID": "export-data/exported_data.html#lag-weather-variables",
    "href": "export-data/exported_data.html#lag-weather-variables",
    "title": "Exported data",
    "section": "Lag weather variables",
    "text": "Lag weather variables\nLag one and two weeks.\n\nexp_data &lt;- exp_data %&gt;%\n  tk_augment_lags(.value = c(prec, tmax, tmin), .lags = 1:2)"
  },
  {
    "objectID": "export-data/exported_data.html#overview",
    "href": "export-data/exported_data.html#overview",
    "title": "Exported data",
    "section": "Overview",
    "text": "Overview\n\nglimpse(exp_data)\n\nRows: 2,202,058\nColumns: 14\n$ mun       &lt;chr&gt; \"110001\", \"110001\", \"110001\", \"110001\", \"110001\", \"110001\", …\n$ date      &lt;date&gt; 2011-03-13, 2011-03-20, 2011-03-27, 2011-04-03, 2011-04-10,…\n$ cases     &lt;int&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ pop       &lt;int&gt; 24737, 24737, 24737, 24737, 24737, 24737, 24737, 24737, 2473…\n$ hdi2010   &lt;dbl&gt; 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.64…\n$ prec      &lt;dbl&gt; 5977667, 5832714, 6581013, 6411878, 5538108, 4712170, 412114…\n$ tmax      &lt;dbl&gt; 29.89511, 29.59591, 29.72916, 29.27960, 29.05301, 29.32273, …\n$ tmin      &lt;dbl&gt; 20.19973, 20.17791, 20.34251, 19.15049, 19.11662, 19.37211, …\n$ prec_lag1 &lt;dbl&gt; NA, 5977667, 5832714, 6581013, 6411878, 5538108, 4712170, 41…\n$ tmax_lag1 &lt;dbl&gt; NA, 29.89511, 29.59591, 29.72916, 29.27960, 29.05301, 29.322…\n$ tmin_lag1 &lt;dbl&gt; NA, 20.19973, 20.17791, 20.34251, 19.15049, 19.11662, 19.372…\n$ prec_lag2 &lt;dbl&gt; NA, NA, 5977667, 5832714, 6581013, 6411878, 5538108, 4712170…\n$ tmax_lag2 &lt;dbl&gt; NA, NA, 29.89511, 29.59591, 29.72916, 29.27960, 29.05301, 29…\n$ tmin_lag2 &lt;dbl&gt; NA, NA, 20.19973, 20.17791, 20.34251, 19.15049, 19.11662, 19…\n\n\nMunicipalities count: 5167"
  },
  {
    "objectID": "export-data/exported_data.html#export-data",
    "href": "export-data/exported_data.html#export-data",
    "title": "Exported data",
    "section": "Export data",
    "text": "Export data\n\nexp_data %&gt;% write_parquet(sink = \"exp_data.parquet\")\n\n\nexp_data %&gt;% write_csv(file = \"exp_data.csv\")\nzip::zip(zipfile = \"exp_data.csv.zip\", files = \"exp_data.csv\")\nunlink(x = \"exp_data.csv\")"
  },
  {
    "objectID": "export-data/exported_data.html#data-dictionary",
    "href": "export-data/exported_data.html#data-dictionary",
    "title": "Exported data",
    "section": "Data dictionary",
    "text": "Data dictionary\n\nmun character. Municipality code with 6 digits\ndate date. Date on format YYYY-MM-DD of the ceiling data of the week\ncases integer. Confirmed dengue cases count\npop integer. Population estimation of the municipality\nhdi2010 double. Human Development Index for 2010\nprec double. Total precipitation, mm\ntmax double. Average maximum temperature, Celsius\ntmin double. Average minimum temperature, Celsius\n*_lag1 double. One week lagged variables\n*_lag2 double. Two weeks lagged variables"
  },
  {
    "objectID": "export-data/exported_data.html#include-on-current-github-release",
    "href": "export-data/exported_data.html#include-on-current-github-release",
    "title": "Exported data",
    "section": "Include on current GitHub release",
    "text": "Include on current GitHub release\n\n# Files list to upload\nfiles_list &lt;- c(\"exp_data.parquet\", \"exp_data.csv.zip\")\n\n# Upload files\nfor(i in files_list){\n  pb_upload(file = i, repo = \"rfsaldanha/dengue\", overwrite = TRUE)\n}\n\nFiles exp_data.parquet and exp_data.csv.zip available on current release: https://github.com/rfsaldanha/dengue/releases"
  },
  {
    "objectID": "export-data/exported_data.html#session-info",
    "href": "export-data/exported_data.html#session-info",
    "title": "Exported data",
    "section": "Session info",
    "text": "Session info\n\nsessionInfo()\n\nR version 4.1.2 (2021-11-01)\nPlatform: x86_64-pc-linux-gnu (64-bit)\nRunning under: Ubuntu 22.04.2 LTS\n\nMatrix products: default\nBLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.10.0\nLAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.10.0\n\nlocale:\n [1] LC_CTYPE=pt_BR.UTF-8       LC_NUMERIC=C              \n [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    \n [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   \n [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 \n [9] LC_ADDRESS=C               LC_TELEPHONE=C            \n[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       \n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] piggyback_0.1.4.9006 brpop_0.3.0          timetk_2.8.3        \n [4] arrow_12.0.1         lubridate_1.9.2      forcats_1.0.0       \n [7] stringr_1.5.0        dplyr_1.1.2          purrr_1.0.1         \n[10] readr_2.1.4          tidyr_1.3.0          tibble_3.2.1        \n[13] ggplot2_3.4.2        tidyverse_2.0.0     \n\nloaded via a namespace (and not attached):\n [1] xts_0.13.1          bit64_4.0.5         httr_1.4.6         \n [4] DiceDesign_1.9      gh_1.4.0            tools_4.1.2        \n [7] utf8_1.2.3          R6_2.5.1            rpart_4.1.16       \n[10] colorspace_2.1-0    yardstick_1.2.0     nnet_7.3-17        \n[13] withr_2.5.0         tidyselect_1.2.0    curl_5.0.1         \n[16] bit_4.0.5           compiler_4.1.2      httr2_0.2.3        \n[19] cli_3.6.1           scales_1.2.1        tune_1.1.1         \n[22] rappdirs_0.3.3      digest_0.6.31       rmarkdown_2.22     \n[25] pkgconfig_2.0.3     htmltools_0.5.5     parallelly_1.36.0  \n[28] lhs_1.1.6           fastmap_1.1.1       htmlwidgets_1.6.2  \n[31] rlang_1.1.1         rstudioapi_0.14     generics_0.1.3     \n[34] zoo_1.8-12          jsonlite_1.8.5      vroom_1.6.3        \n[37] zip_2.3.0           magrittr_2.0.3      Matrix_1.5-4.1     \n[40] Rcpp_1.0.10         munsell_0.5.0       fansi_1.0.4        \n[43] GPfit_1.0-8         lifecycle_1.0.3     furrr_0.3.1        \n[46] stringi_1.7.12      yaml_2.3.7          MASS_7.3-55        \n[49] recipes_1.0.6       grid_4.1.2          parallel_4.1.2     \n[52] listenv_0.9.0       crayon_1.5.2        lattice_0.20-45    \n[55] splines_4.1.2       hms_1.1.3           knitr_1.43         \n[58] pillar_1.9.0        dials_1.2.0         future.apply_1.11.0\n[61] codetools_0.2-18    parsnip_1.1.0       glue_1.6.2         \n[64] evaluate_0.21       rsample_1.1.1       data.table_1.14.8  \n[67] vctrs_0.6.3         tzdb_0.4.0          foreach_1.5.2      \n[70] gtable_0.3.3        future_1.32.0       assertthat_0.2.1   \n[73] cachem_1.0.8        xfun_0.39           gower_1.0.1        \n[76] mime_0.12           prodlim_2023.03.31  gitcreds_0.1.2     \n[79] class_7.3-20        survival_3.2-13     timeDate_4022.108  \n[82] iterators_1.0.14    memoise_2.0.1       hardhat_1.3.0      \n[85] lava_1.7.2.1        workflows_1.1.3     timechange_0.2.0   \n[88] globals_0.16.2      ipred_0.9-14"
  },
  {
    "objectID": "publications.html",
    "href": "publications.html",
    "title": "Publications",
    "section": "",
    "text": "Ribeiro, Vitor, Eduardo Pena, Raphael Saldanha, Reza Akbarinia, Patrick Valduriez, Falaah Khan, Julia Stoyanovich, and Fabio Porto. 2023. “Subset Modelling: A Domain Partitioning Strategy for Data-Efficient Machine-Learning.” In Anais Do XXXVIII Simpósio Brasileiro de Bancos de Dados, 318–23. Porto Alegre, RS, Brasil: SBC. https://doi.org/10.5753/sbbd.2023.232829."
  },
  {
    "objectID": "publications.html#published",
    "href": "publications.html#published",
    "title": "Publications",
    "section": "",
    "text": "Ribeiro, Vitor, Eduardo Pena, Raphael Saldanha, Reza Akbarinia, Patrick Valduriez, Falaah Khan, Julia Stoyanovich, and Fabio Porto. 2023. “Subset Modelling: A Domain Partitioning Strategy for Data-Efficient Machine-Learning.” In Anais Do XXXVIII Simpósio Brasileiro de Bancos de Dados, 318–23. Porto Alegre, RS, Brasil: SBC. https://doi.org/10.5753/sbbd.2023.232829."
  },
  {
    "objectID": "publications.html#submitted",
    "href": "publications.html#submitted",
    "title": "Publications",
    "section": "Submitted",
    "text": "Submitted\n\nData paper. Zonal statistics datasets of climate indicators for Brazilian municipalities."
  },
  {
    "objectID": "publications.html#work-in-progress",
    "href": "publications.html#work-in-progress",
    "title": "Publications",
    "section": "Work in progress",
    "text": "Work in progress\n\nResearch paper. Dengue profiles: clustering of time series of dengue cases per municipalities in Brazil.\nResearch paper. Dengue and weather covariates: a time lagged relationship analysis in Brazil.\nResearch paper. Inconclusive dengue cases diagnosis reclassification in Brazil by symptoms and clinical conditions.\nResearch paper. Dengue hidden epidemics: anomalies on different space-time scenarios in Brazil.\nResearch paper. Municipality climate features: indicators of anomalies and sequences of events"
  },
  {
    "objectID": "software.html",
    "href": "software.html",
    "title": "Software",
    "section": "",
    "text": "An R package to on-line access zonal statistics from weather indicators that were calculated for each municipality in Brazil using data from the BR-DWGD and TerraClimate projects.\nMore details on https://rfsaldanha.github.io/brclimr"
  },
  {
    "objectID": "software.html#brclimr",
    "href": "software.html#brclimr",
    "title": "Software",
    "section": "",
    "text": "An R package to on-line access zonal statistics from weather indicators that were calculated for each municipality in Brazil using data from the BR-DWGD and TerraClimate projects.\nMore details on https://rfsaldanha.github.io/brclimr"
  },
  {
    "objectID": "software.html#epifeat",
    "href": "software.html#epifeat",
    "title": "Software",
    "section": "epifeat",
    "text": "epifeat\nAn R package to extract epidemiological features from cases time series.\nMore details on https://github.com/rfsaldanha/happyfeat"
  },
  {
    "objectID": "software.html#zonalclim",
    "href": "software.html#zonalclim",
    "title": "Software",
    "section": "zonalclim",
    "text": "zonalclim\nAn R package to compute zonal statistics from gridded climate indicators.\nMore details on https://github.com/rfsaldanha/zonalclim"
  },
  {
    "objectID": "software.html#disdata",
    "href": "software.html#disdata",
    "title": "Software",
    "section": "disdata",
    "text": "disdata\nAn R package to handle raw suspected disease cases and compute aggregations on space and time.\nMore details on https://github.com/rfsaldanha/disdata"
  }
]